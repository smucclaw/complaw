* Robert Kowalski

#+begin_example
{'affiliation': 'Distinguished Research Fellow Imperial College London',
 'citedby': 20020,
 'email': '@doc.ic.ac.uk',
 'filled': False,
 'id': 'pvkQAj0AAAAJ',
 'interests': ['Logic and Artificial Intelligence'],
 'name': 'Bob Kowalski',
 'url_picture': 'https://scholar.google.com/citations?view_op=medium_photo&user=pvkQAj0AAAAJ'}
#+end_example
filling author...
** filled
#+begin_example
{'affiliation': 'Distinguished Research Fellow Imperial College London',
 'citedby': 20020,
 'email': '@doc.ic.ac.uk',
 'filled': False,
 'id': 'pvkQAj0AAAAJ',
 'interests': ['Logic and Artificial Intelligence'],
 'name': 'Bob Kowalski',
 'publications': [{'bib': {'cites': '2755', 'title': 'Logic for problem solving', 'year': '1979'},
 'filled': False,
 'id_citations': 'pvkQAj0AAAAJ:YOwf2qJgpHMC',
 'source': 'citations'},
                  {'bib': {'cites': '2337',
         'title': 'A logic-based calculus of events',
         'year': '1989'},
 'filled': False,
 'id_citations': 'pvkQAj0AAAAJ:_kc_bZDykSQC',
 'source': 'citations'},
                  {'bib': {'cites': '1972',
         'title': 'The Semantics of Predicate Logic as a Programming Language',
         'year': '1976'},
 'filled': False,
 'id_citations': 'pvkQAj0AAAAJ:_OXeSy2IsFwC',
 'source': 'citations'},
                  {'bib': {'cites': '1442',
         'title': 'Predicate Logic as Programming Language',
         'year': '1974'},
 'filled': False,
 'id_citations': 'pvkQAj0AAAAJ:8xutWZnSdmoC',
 'source': 'citations'},
                  {'bib': {'cites': '1042', 'title': 'Algorithm= logic+ control', 'year': '1979'},
 'filled': False,
 'id_citations': 'pvkQAj0AAAAJ:qxL8FJ1GzNcC',
 'source': 'citations'},
                  {'bib': {'cites': '983',
         'title': 'Abductive logic programming',
         'year': '1992'},
 'filled': False,
 'id_citations': 'pvkQAj0AAAAJ:aqlVkmm33-oC',
 'source': 'citations'},
                  {'bib': {'cites': '825',
         'title': 'An abstract, argumentation-theoretic approach to default '
                  'reasoning',
         'year': '1997'},
 'filled': False,
 'id_citations': 'pvkQAj0AAAAJ:mVmsd5A6BfQC',
 'source': 'citations'},
                  {'bib': {'cites': '581',
         'title': 'The British Nationality Act as a logic program',
         'year': '1986'},
 'filled': False,
 'id_citations': 'pvkQAj0AAAAJ:QIV2ME_5wuYC',
 'source': 'citations'},
                  {'bib': {'cites': '543',
         'title': 'Linear resolution with selection function',
         'year': '1971'},
 'filled': False,
 'id_citations': 'pvkQAj0AAAAJ:9ZlFYXVOiuMC',
 'source': 'citations'},
                  {'bib': {'cites': '533',
         'title': 'Amalgamating language and metalanguage in logic programming',
         'year': '1982'},
 'filled': False,
 'id_citations': 'pvkQAj0AAAAJ:Wp0gIr-vW9MC',
 'source': 'citations'},
                  {'bib': {'cites': '520',
         'title': 'Abduction Compared with Negation by Failure.',
         'year': '1989'},
 'filled': False,
 'id_citations': 'pvkQAj0AAAAJ:4DMP91E08xMC',
 'source': 'citations'},
                  {'bib': {'cites': '495',
         'title': 'The role of abduction in logic programming',
         'year': '1998'},
 'filled': False,
 'id_citations': 'pvkQAj0AAAAJ:dhFuZR0502QC',
 'source': 'citations'},
                  {'bib': {'cites': '408',
         'title': 'A proof procedure using connection graphs',
         'year': '1975'},
 'filled': False,
 'id_citations': 'pvkQAj0AAAAJ:7PzlFSSx8tAC',
 'source': 'citations'},
                  {'bib': {'cites': '276',
         'title': 'The IFF proof procedure for abductive logic programming',
         'year': '1997'},
 'filled': False,
 'id_citations': 'pvkQAj0AAAAJ:W7OEmFMy1HYC',
 'source': 'citations'},
                  {'bib': {'cites': '273',
         'title': 'Dialectic proof procedures for assumption-based, admissible '
                  'argumentation',
         'year': '2006'},
 'filled': False,
 'id_citations': 'pvkQAj0AAAAJ:hC7cP41nSMkC',
 'source': 'citations'},
                  {'bib': {'cites': '239',
         'title': 'Logic programs with exceptions',
         'year': '1991'},
 'filled': False,
 'id_citations': 'pvkQAj0AAAAJ:ZeXyd9-uunAC',
 'source': 'citations'},
                  {'bib': {'cites': '223',
         'title': 'The early years of logic programming',
         'year': '1988'},
 'filled': False,
 'id_citations': 'pvkQAj0AAAAJ:r0BpntZqJG4C',
 'source': 'citations'},
                  {'bib': {'cites': '222',
         'title': 'Assumption-based argumentation',
         'year': '2009'},
 'filled': False,
 'id_citations': 'pvkQAj0AAAAJ:RGFaLdJalmkC',
 'source': 'citations'},
                  {'bib': {'cites': '219',
         'title': 'Database updates in the event calculus',
         'year': '1992'},
 'filled': False,
 'id_citations': 'pvkQAj0AAAAJ:qUcmZB5y_30C',
 'source': 'citations'},
                  {'bib': {'cites': '217',
         'title': 'A theorem-proving approach to database integrity',
         'year': '1988'},
 'filled': False,
 'id_citations': 'pvkQAj0AAAAJ:IWHjjKOFINEC',
 'source': 'citations'},
                  {'bib': {'cites': '212',
         'title': 'From logic programming towards multi‚Äêagent systems',
         'year': '1999'},
 'filled': False,
 'id_citations': 'pvkQAj0AAAAJ:-f6ydRqryjwC',
 'source': 'citations'},
                  {'bib': {'cites': '203', 'title': 'Abstract argumentation', 'year': '1996'},
 'filled': False,
 'id_citations': 'pvkQAj0AAAAJ:hFOr9nPyWt4C',
 'source': 'citations'},
                  {'bib': {'cites': '177', 'title': 'Logic Programming.', 'year': '1983'},
 'filled': False,
 'id_citations': 'pvkQAj0AAAAJ:Ak0FvsSvgGUC',
 'source': 'citations'},
                  {'bib': {'cites': '167',
         'title': 'An assumption-based framework for non-monotonic reasoning',
         'year': '1993'},
 'filled': False,
 'id_citations': 'pvkQAj0AAAAJ:RHpTSmoSYBkC',
 'source': 'citations'},
                  {'bib': {'cites': '156',
         'title': 'Logic and semantic networks',
         'year': '1979'},
 'filled': False,
 'id_citations': 'pvkQAj0AAAAJ:TQgYirikUcIC',
 'source': 'citations'},
                  {'bib': {'cites': '154', 'title': 'Logic for data description', 'year': '1978'},
 'filled': False,
 'id_citations': 'pvkQAj0AAAAJ:R3hNpaxXUhUC',
 'source': 'citations'},
                  {'bib': {'cites': '147',
         'title': 'Computational logic and human thinking: how to be '
                  'artificially intelligent',
         'year': '2011'},
 'filled': False,
 'id_citations': 'pvkQAj0AAAAJ:CHSYGLWDkRkC',
 'source': 'citations'},
                  {'bib': {'cites': '147',
         'title': 'Integrity checking in deductive databases',
         'year': '1987'},
 'filled': False,
 'id_citations': 'pvkQAj0AAAAJ:_Qo2XoVZTnwC',
 'source': 'citations'},
                  {'bib': {'cites': '141',
         'title': 'Semantic trees in automatic theorem proving',
         'year': '1968'},
 'filled': False,
 'id_citations': 'pvkQAj0AAAAJ:4JMBOYKVnBMC',
 'source': 'citations'},
                  {'bib': {'cites': '138',
         'title': 'Problems and promises of computational logic',
         'year': '1990'},
 'filled': False,
 'id_citations': 'pvkQAj0AAAAJ:e5wmG9Sq2KIC',
 'source': 'citations'},
                  {'bib': {'cites': '120',
         'title': 'Towards a unified agent architecture that combines '
                  'rationality with reactivity',
         'year': '1996'},
 'filled': False,
 'id_citations': 'pvkQAj0AAAAJ:j3f4tGmQtD8C',
 'source': 'citations'},
                  {'bib': {'cites': '108',
         'title': 'The relation between logic programming and logic '
                  'specification',
         'year': '1984'},
 'filled': False,
 'id_citations': 'pvkQAj0AAAAJ:TFP_iSt0sucC',
 'source': 'citations'},
                  {'bib': {'cites': '102', 'title': 'Logic for problem solving', 'year': '1974'},
 'filled': False,
 'id_citations': 'pvkQAj0AAAAJ:ML0RJ9NH7IQC',
 'source': 'citations'},
                  {'bib': {'cites': '97',
         'title': 'Search strategies for theorem proving',
         'year': '1970'},
 'filled': False,
 'id_citations': 'pvkQAj0AAAAJ:bEWYMUwI8FkC',
 'source': 'citations'},
                  {'bib': {'cites': '89',
         'title': 'Using meta-logic to reconcile reactive with rational agents',
         'year': '1995'},
 'filled': False,
 'id_citations': 'pvkQAj0AAAAJ:iH-uZ7U-co4C',
 'source': 'citations'},
                  {'bib': {'cites': '80',
         'title': 'Variants of the Event Calculus.',
         'year': '1995'},
 'filled': False,
 'id_citations': 'pvkQAj0AAAAJ:isC4tDSrTZIC',
 'source': 'citations'},
                  {'bib': {'cites': '74',
         'title': 'The logical way to be artificially intelligent',
         'year': '2005'},
 'filled': False,
 'id_citations': 'pvkQAj0AAAAJ:O3NaXMp0MMsC',
 'source': 'citations'},
                  {'bib': {'cites': '74',
         'title': 'The Situation Calculus and Event Calculus Compared.',
         'year': '1994'},
 'filled': False,
 'id_citations': 'pvkQAj0AAAAJ:k_IJM867U9cC',
 'source': 'citations'},
                  {'bib': {'cites': '71',
         'title': 'Logic as a database language',
         'year': '1984'},
 'filled': False,
 'id_citations': 'pvkQAj0AAAAJ:maZDTaKrznsC',
 'source': 'citations'},
                  {'bib': {'cites': '70',
         'title': 'Legislation as logic programs',
         'year': '1995'},
 'filled': False,
 'id_citations': 'pvkQAj0AAAAJ:M3NEmzRMIkIC',
 'source': 'citations'},
                  {'bib': {'cites': '59',
         'title': 'Logic as a computer language',
         'year': '1982'},
 'filled': False,
 'id_citations': 'pvkQAj0AAAAJ:CaZNVDsoPx4C',
 'source': 'citations'},
                  {'bib': {'cites': '55',
         'title': 'The use of logical models in legal problem solving',
         'year': '1990'},
 'filled': False,
 'id_citations': 'pvkQAj0AAAAJ:YFjsv_pBGBYC',
 'source': 'citations'},
                  {'bib': {'cites': '53',
         'title': 'Reconciling the event calculus with the situation calculus',
         'year': '1997'},
 'filled': False,
 'id_citations': 'pvkQAj0AAAAJ:blknAaTinKkC',
 'source': 'citations'},
                  {'bib': {'cites': '52',
         'title': 'Executing suspended logic programs',
         'year': '1998'},
 'filled': False,
 'id_citations': 'pvkQAj0AAAAJ:hMod-77fHWUC',
 'source': 'citations'},
                  {'bib': {'cites': '49',
         'title': 'A Metalogic Programming Approach to multiagent knowledge '
                  "and belief'",
         'year': '1991'},
 'filled': False,
 'id_citations': 'pvkQAj0AAAAJ:JV2RwH3_ST0C',
 'source': 'citations'},
                  {'bib': {'cites': '48',
         'title': 'The treatment of negation in logic programs for '
                  'representing legislation',
         'year': '1989'},
 'filled': False,
 'id_citations': 'pvkQAj0AAAAJ:NMxIlDl6LWMC',
 'source': 'citations'},
                  {'bib': {'cites': '42', 'title': 'Logic without model theory', 'year': '1994'},
 'filled': False,
 'id_citations': 'pvkQAj0AAAAJ:GnPB-g6toBAC',
 'source': 'citations'},
                  {'bib': {'cites': '42',
         'title': 'Logic as a computer language for children',
         'year': '1982'},
 'filled': False,
 'id_citations': 'pvkQAj0AAAAJ:BqipwSGYUEgC',
 'source': 'citations'},
                  {'bib': {'cites': '42',
         'title': 'The case for using equality axioms in automatic '
                  'demonstration',
         'year': '1970'},
 'filled': False,
 'id_citations': 'pvkQAj0AAAAJ:ns9cj8rnVeAC',
 'source': 'citations'},
                  {'bib': {'cites': '39',
         'title': 'A logic-based framework for reactive systems',
         'year': '2012'},
 'filled': False,
 'id_citations': 'pvkQAj0AAAAJ:_B80troHkn4C',
 'source': 'citations'},
                  {'bib': {'cites': '39',
         'title': 'Integrating logic programming and production systems in '
                  'abductive logic programming agents',
         'year': '2009'},
 'filled': False,
 'id_citations': 'pvkQAj0AAAAJ:b0M2c_1WBrUC',
 'source': 'citations'},
                  {'bib': {'cites': '35',
         'title': 'Abductive logic programming agents with destructive '
                  'databases',
         'year': '2011'},
 'filled': False,
 'id_citations': 'pvkQAj0AAAAJ:u-x6o8ySG0sC',
 'source': 'citations'},
                  {'bib': {'cites': '32',
         'title': 'Logic programming in artificial intelligence',
         'year': '1991'},
 'filled': False,
 'id_citations': 'pvkQAj0AAAAJ:J_g5lzvAfSwC',
 'source': 'citations'},
                  {'bib': {'cites': '31',
         'title': 'AND/OR graphs, theorem-proving graphs and bi-directional '
                  'search',
         'year': '1972'},
 'filled': False,
 'id_citations': 'pvkQAj0AAAAJ:3fE2CSJIrl8C',
 'source': 'citations'},
                  {'bib': {'cites': '29', 'title': 'Logic-based open systems', 'year': '1988'},
 'filled': False,
 'id_citations': 'pvkQAj0AAAAJ:u_35RYKgDlwC',
 'source': 'citations'},
                  {'bib': {'cites': '29',
         'title': 'Computer Representation of the Law.',
         'year': '1985'},
 'filled': False,
 'id_citations': 'pvkQAj0AAAAJ:35N4QoGY0k4C',
 'source': 'citations'},
                  {'bib': {'cites': '27',
         'title': 'A formal representation of the WHO and UNICEF estimates of '
                  'national immunization coverage: a computational logic '
                  'approach',
         'year': '2012'},
 'filled': False,
 'id_citations': 'pvkQAj0AAAAJ:LPZeul_q3PIC',
 'source': 'citations'},
                  {'bib': {'cites': '26',
         'title': 'Reduction of Abductive Logic Programs to Normal Logic '
                  'Programs.',
         'year': '1995'},
 'filled': False,
 'id_citations': 'pvkQAj0AAAAJ:RYcK_YlVTxYC',
 'source': 'citations'},
                  {'bib': {'cites': '26', 'title': 'Argument and reconciliation', 'year': '1994'},
 'filled': False,
 'id_citations': 'pvkQAj0AAAAJ:NaGl4SEjCO4C',
 'source': 'citations'},
                  {'bib': {'cites': '26', 'title': 'Launching the new era', 'year': '1993'},
 'filled': False,
 'id_citations': 'pvkQAj0AAAAJ:SeFeTyx0c_EC',
 'source': 'citations'},
                  {'bib': {'cites': '26',
         'title': 'Directions for logic programming',
         'year': '1987'},
 'filled': False,
 'id_citations': 'pvkQAj0AAAAJ:g5m5HwL7SMYC',
 'source': 'citations'},
                  {'bib': {'cites': '25', 'title': 'Logic programming', 'year': '1985'},
 'filled': False,
 'id_citations': 'pvkQAj0AAAAJ:WHdLCjDvYFkC',
 'source': 'citations'},
                  {'bib': {'cites': '25',
         'title': 'Software engineering and artificial intelligence in new '
                  'generation computing',
         'year': '1984'},
 'filled': False,
 'id_citations': 'pvkQAj0AAAAJ:M05iB0D1s5AC',
 'source': 'citations'},
                  {'bib': {'cites': '23',
         'title': 'L√≥gica, programaci√≥n e inteligencia artificial',
         'year': '1986'},
 'filled': False,
 'id_citations': 'pvkQAj0AAAAJ:8AbLer7MMksC',
 'source': 'citations'},
                  {'bib': {'cites': '23',
         'title': 'Prolog as a logic programming language',
         'year': '1981'},
 'filled': False,
 'id_citations': 'pvkQAj0AAAAJ:vV6vV6tmYwMC',
 'source': 'citations'},
                  {'bib': {'cites': '21', 'title': 'The limitation of logic', 'year': '1986'},
 'filled': False,
 'id_citations': 'pvkQAj0AAAAJ:HoB7MX3m0LUC',
 'source': 'citations'},
                  {'bib': {'cites': '21',
         'title': 'Formalisation of the British nationality act',
         'year': '1986'},
 'filled': False,
 'id_citations': 'pvkQAj0AAAAJ:lSLTfruPkqcC',
 'source': 'citations'},
                  {'bib': {'cites': '18',
         'title': 'An agent language with destructive assignment and '
                  'model-theoretic semantics',
         'year': '2010'},
 'filled': False,
 'id_citations': 'pvkQAj0AAAAJ:xtRiw3GOFMkC',
 'source': 'citations'},
                  {'bib': {'cites': '18',
         'title': 'Logic programming in the fifth generation',
         'year': '1984'},
 'filled': False,
 'id_citations': 'pvkQAj0AAAAJ:ldfaerwXgEUC',
 'source': 'citations'},
                  {'bib': {'cites': '17',
         'title': 'An agent architecture that unifies rationality with '
                  'reactivity',
         'year': '1996'},
 'filled': False,
 'id_citations': 'pvkQAj0AAAAJ:pqnbT2bcN3wC',
 'source': 'citations'},
                  {'bib': {'cites': '17',
         'title': 'Nitrogen in a crop-pest interaction; cereal aphids 1979',
         'year': '1983'},
 'filled': False,
 'id_citations': 'pvkQAj0AAAAJ:nVrZBo8bIpAC',
 'source': 'citations'},
                  {'bib': {'cites': '16',
         'title': 'Programming in logic without logic programming',
         'year': '2016'},
 'filled': False,
 'id_citations': 'pvkQAj0AAAAJ:sSrBHYA8nusC',
 'source': 'citations'},
                  {'bib': {'cites': '15',
         'title': 'A theorem-proving approach to CLP',
         'year': '1995'},
 'filled': False,
 'id_citations': 'pvkQAj0AAAAJ:2P1L_qKh6hAC',
 'source': 'citations'},
                  {'bib': {'cites': '15',
         'title': 'Towards a declarative and efficient glass-box clp language',
         'year': '1994'},
 'filled': False,
 'id_citations': 'pvkQAj0AAAAJ:3s1wT3WcHBgC',
 'source': 'citations'},
                  {'bib': {'cites': '13',
         'title': 'Teleo-reactive abductive logic programs',
         'year': '2012'},
 'filled': False,
 'id_citations': 'pvkQAj0AAAAJ:B3FOqHPlNUQC',
 'source': 'citations'},
                  {'bib': {'cites': '13',
         'title': 'Temporal database technology for air traffic flow '
                  'management',
         'year': '1994'},
 'filled': False,
 'id_citations': 'pvkQAj0AAAAJ:zA6iFVUQeVQC',
 'source': 'citations'},
                  {'bib': {'cites': '13',
         'title': 'Studies in the completeness and efficiency of '
                  'theorem-proving by resolution',
         'year': '1970'},
 'filled': False,
 'id_citations': 'pvkQAj0AAAAJ:f2IySw72cVMC',
 'source': 'citations'},
                  {'bib': {'cites': '12',
         'title': 'Reasoning with conditionals in artificial intelligence',
         'year': '2010'},
 'filled': False,
 'id_citations': 'pvkQAj0AAAAJ:P5F9QuxV20EC',
 'source': 'citations'},
                  {'bib': {'cites': '11',
         'title': 'Reactive computing as model generation',
         'year': '2015'},
 'filled': False,
 'id_citations': 'pvkQAj0AAAAJ:hMsQuOkrut0C',
 'source': 'citations'},
                  {'bib': {'cites': '11',
         'title': 'Computational logic: logic programming and beyond: essays '
                  'in honour of Robert A. Kowalski',
         'year': '2003'},
 'filled': False,
 'id_citations': 'pvkQAj0AAAAJ:KUbvn5osdkgC',
 'source': 'citations'},
                  {'bib': {'cites': '11',
         'title': 'Is Logic Really Dead or Only Just Sleeping?',
         'year': '2001'},
 'filled': False,
 'id_citations': 'pvkQAj0AAAAJ:yD5IFk8b50cC',
 'source': 'citations'},
                  {'bib': {'cites': '11',
         'title': 'An agent architecture that combines backward and forward '
                  'reasoning',
         'year': '1998'},
 'filled': False,
 'id_citations': 'pvkQAj0AAAAJ:4OULZ7Gr8RgC',
 'source': 'citations'},
                  {'bib': {'cites': '11',
         'title': 'PROCALOG-Programming with Constraints and Abducibles in '
                  'Logic',
         'year': '1996'},
 'filled': False,
 'id_citations': 'pvkQAj0AAAAJ:fPk4N6BV_jEC',
 'source': 'citations'},
                  {'bib': {'cites': '10',
         'title': 'Synthesis of proof procedures for default reasoning',
         'year': '1996'},
 'filled': False,
 'id_citations': 'pvkQAj0AAAAJ:rO6llkc54NcC',
 'source': 'citations'},
                  {'bib': {'cites': '9',
         'title': 'A logical characterization of a reactive system language',
         'year': '2014'},
 'filled': False,
 'id_citations': 'pvkQAj0AAAAJ:vbGhcppDl1QC',
 'source': 'citations'},
                  {'bib': {'cites': '9',
         'title': 'Artificial intelligence and human thinking',
         'year': '2011'},
 'filled': False,
 'id_citations': 'pvkQAj0AAAAJ:u5HHmVD_uO8C',
 'source': 'citations'},
                  {'bib': {'cites': '9',
         'title': 'A logic-based approach to conflict resolution',
         'year': '2003'},
 'filled': False,
 'id_citations': 'pvkQAj0AAAAJ:a0OBvERweLwC',
 'source': 'citations'},
                  {'bib': {'cites': '9',
         'title': 'Logic programming with integrity constraints',
         'year': '1996'},
 'filled': False,
 'id_citations': 'pvkQAj0AAAAJ:pyW8ca7W8N0C',
 'source': 'citations'},
                  {'bib': {'cites': '8',
         'title': 'Computational logic in an object-oriented world',
         'year': '2006'},
 'filled': False,
 'id_citations': 'pvkQAj0AAAAJ:QD3KBmkZPeQC',
 'source': 'citations'},
                  {'bib': {'cites': '8',
         'title': 'English as a logic programming language',
         'year': '1990'},
 'filled': False,
 'id_citations': 'pvkQAj0AAAAJ:D03iK_w7-QYC',
 'source': 'citations'},
                  {'bib': {'cites': '7',
         'title': 'Towards a logic-based unifying framework for computing',
         'year': '2013'},
 'filled': False,
 'id_citations': 'pvkQAj0AAAAJ:5Ul4iDaHHb8C',
 'source': 'citations'},
                  {'bib': {'cites': '7',
         'title': 'Argumentation-theoretic proof procedures for default '
                  'reasoning',
         'year': '2003'},
 'filled': False,
 'id_citations': 'pvkQAj0AAAAJ:dfsIfKJdRG4C',
 'source': 'citations'},
                  {'bib': {'cites': '7', 'title': 'Logic programming', 'year': '1991'},
 'filled': False,
 'id_citations': 'pvkQAj0AAAAJ:lgwcVrK6X84C',
 'source': 'citations'},
                  {'bib': {'cites': '7',
         'title': 'An improved theorem-proving system for first-order logic',
         'year': '1970'},
 'filled': False,
 'id_citations': 'pvkQAj0AAAAJ:1taIhTC69MYC',
 'source': 'citations'},
                  {'bib': {'cites': '6',
         'title': 'WUENIC‚Äìa case study in rule-based knowledge representation '
                  'and reasoning',
         'year': '2011'},
 'filled': False,
 'id_citations': 'pvkQAj0AAAAJ:2osOgNQ5qMEC',
 'source': 'citations'},
                  {'bib': {'cites': '6',
         'title': 'Directions for Logic Programming',
         'year': '2002'},
 'filled': False,
 'id_citations': 'pvkQAj0AAAAJ:abG-DnoFyZgC',
 'source': 'citations'},
                  {'bib': {'cites': '6',
         'title': 'Artificial intelligence and the natural world',
         'year': '2001'},
 'filled': False,
 'id_citations': 'pvkQAj0AAAAJ:_xSYboBqXhAC',
 'source': 'citations'},
                  {'bib': {'cites': '6',
         'title': 'Changes of free amino acids in the leaves of Triticum '
                  'aestivum and their implications for the assessment of '
                  'plant/insect interactions/Ver√§nderungen der freien '
                  'Aminos√§uren in ‚Ä¶',
         'year': '1987'},
 'filled': False,
 'id_citations': 'pvkQAj0AAAAJ:gVv57TyPmFsC',
 'source': 'citations'},
                  {'bib': {'cites': '6',
         'title': 'Belief revision without constraints',
         'year': '1987'},
 'filled': False,
 'id_citations': 'pvkQAj0AAAAJ:4X0JR2_MtJMC',
 'source': 'citations'},
                  {'bib': {'cites': '6',
         'title': 'Logic Programming in Artificial Intelligence and Software '
                  'Engineering',
         'year': '1987'},
 'filled': False,
 'id_citations': 'pvkQAj0AAAAJ:AvfA0Oy_GE0C',
 'source': 'citations'},
                  {'bib': {'cites': '5',
         'title': 'Logic for Problem Solving, Revisited',
         'year': '2014'},
 'filled': False,
 'id_citations': 'pvkQAj0AAAAJ:LI9QrySNdTsC',
 'source': 'citations'},
                  {'bib': {'cites': '5',
         'title': 'Computational logic: Logic programming and beyond',
         'year': '2002'},
 'filled': False,
 'id_citations': 'pvkQAj0AAAAJ:d1gkVwhDpl0C',
 'source': 'citations'},
                  {'bib': {'cites': '5',
         'title': 'The IFF proof procedure for abductive logic programming',
         'year': '1997'},
 'filled': False,
 'id_citations': 'pvkQAj0AAAAJ:1lhNe0rCu4AC',
 'source': 'citations'},
                  {'bib': {'cites': '5',
         'title': 'An argumentation-theoretic approach to logic program '
                  'transformation',
         'year': '1995'},
 'filled': False,
 'id_citations': 'pvkQAj0AAAAJ:1sJd4Hv_s6UC',
 'source': 'citations'},
                  {'bib': {'cites': '5',
         'title': 'Teaching Less and Learning More?‚Äêa Personal Experience',
         'year': '1987'},
 'filled': False,
 'id_citations': 'pvkQAj0AAAAJ:PVgj2kMGcgYC',
 'source': 'citations'},
                  {'bib': {'cites': '4',
         'title': 'Using SWISH to realise interactive web based tutorials for '
                  'logic based languages',
         'year': '2018'},
 'filled': False,
 'id_citations': 'pvkQAj0AAAAJ:6yz0xqPARnAC',
 'source': 'citations'},
                  {'bib': {'cites': '4',
         'title': 'Obligation as optimal goal satisfaction',
         'year': '2018'},
 'filled': False,
 'id_citations': 'pvkQAj0AAAAJ:a3BOlSfXSfwC',
 'source': 'citations'},
                  {'bib': {'cites': '4',
         'title': 'From logic programming to multi-agent systems',
         'year': '1998'},
 'filled': False,
 'id_citations': 'pvkQAj0AAAAJ:bFI3QPDXJZMC',
 'source': 'citations'},
                  {'bib': {'cites': '4',
         'title': 'A unifying framework for alp, clp and sqo',
         'year': '1996'},
 'filled': False,
 'id_citations': 'pvkQAj0AAAAJ:Zph67rFs4hoC',
 'source': 'citations'},
                  {'bib': {'cites': '4',
         'title': 'An application of general purpose theorem-proving to '
                  'database integrity',
         'year': '1986'},
 'filled': False,
 'id_citations': 'pvkQAj0AAAAJ:bnK-pcrLprsC',
 'source': 'citations'},
                  {'bib': {'cites': '4',
         'title': 'Logic for knowledge representation',
         'year': '1984'},
 'filled': False,
 'id_citations': 'pvkQAj0AAAAJ:nb7KW1ujOQ8C',
 'source': 'citations'},
                  {'bib': {'cites': '3',
         'title': 'Logic Programming in the 1970s',
         'year': '2013'},
 'filled': False,
 'id_citations': 'pvkQAj0AAAAJ:kzcrU_BdoSEC',
 'source': 'citations'},
                  {'bib': {'cites': '3',
         'title': 'Towards a Logic-based Production System Language',
         'year': '2010'},
 'filled': False,
 'id_citations': 'pvkQAj0AAAAJ:hqOjcs7Dif8C',
 'source': 'citations'},
                  {'bib': {'cites': '2', 'title': 'Computational Logic.', 'year': '2014'},
 'filled': False,
 'id_citations': 'pvkQAj0AAAAJ:BzfGm06jWhQC',
 'source': 'citations'},
                  {'bib': {'cites': '2',
         'title': 'Computational Logic and Human Thinking: How to be '
                  'Artificially Intelligent',
         'year': '2010'},
 'filled': False,
 'id_citations': 'pvkQAj0AAAAJ:ILKRHgRFtOwC',
 'source': 'citations'},
                  {'bib': {'cites': '2',
         'title': 'Uso da pesquisa-a√ß√£o como um ve√≠culo para o desenvolvimento '
                  'profissional docente e transforma√ß√£o da pratica pedag√≥gica '
                  'numa Universidade Federal Rural no Brasil',
         'year': '2006'},
 'filled': False,
 'id_citations': 'pvkQAj0AAAAJ:jL-93Qbq4QoC',
 'source': 'citations'},
                  {'bib': {'cites': '2', 'title': 'Programming in the year 2010', 'year': '1990'},
 'filled': False,
 'id_citations': 'pvkQAj0AAAAJ:uWQEDVKXjbEC',
 'source': 'citations'},
                  {'bib': {'cites': '2',
         'title': 'A proposal for an undergraduate degree in the uses of logic',
         'year': '1990'},
 'filled': False,
 'id_citations': 'pvkQAj0AAAAJ:0EnyYjriUFMC',
 'source': 'citations'},
                  {'bib': {'cites': '2',
         'title': 'Central government pension rules as a logic program',
         'year': '1989'},
 'filled': False,
 'id_citations': 'pvkQAj0AAAAJ:KlAtU1dfN6UC',
 'source': 'citations'},
                  {'bib': {'cites': '2',
         'title': "TAPSOFT'87. Proceedings of the International Joint "
                  'Conference on Theory and Practice of Software Development, '
                  'Pisa, Italy, March 1987: Volume 1: Advanced Seminar on '
                  'Foundations ‚Ä¶',
         'year': '1987'},
 'filled': False,
 'id_citations': 'pvkQAj0AAAAJ:5ugPr518TE4C',
 'source': 'citations'},
                  {'bib': {'cites': '2',
         'title': 'Panel on the Fifth Generation Project',
         'year': '1983'},
 'filled': False,
 'id_citations': 'pvkQAj0AAAAJ:KxtntwgDAa4C',
 'source': 'citations'},
                  {'bib': {'cites': '2', 'title': 'Selected Papers', 'year': '1980'},
 'filled': False,
 'id_citations': 'pvkQAj0AAAAJ:IaI1MmNe2tcC',
 'source': 'citations'},
                  {'bib': {'cites': '2',
         'title': '5th Conference on Automated Deduction, LN in Computer Sc. '
                  '87',
         'year': '1980'},
 'filled': False,
 'id_citations': 'pvkQAj0AAAAJ:j7_hQOaDUrUC',
 'source': 'citations'},
                  {'bib': {'cites': '2',
         'title': '5th Conference on Automated Deduction: Les Arcs, France, '
                  'July 8-11, 1980',
         'year': '1980'},
 'filled': False,
 'id_citations': 'pvkQAj0AAAAJ:geHnlv5EZngC',
 'source': 'citations'},
                  {'bib': {'cites': '2',
         'title': 'And-or Graphs, Theorem-proving Graphs and Bi-directional '
                  'Graphs',
         'year': '1972'},
 'filled': False,
 'id_citations': 'pvkQAj0AAAAJ:ubry08Y2EpUC',
 'source': 'citations'},
                  {'bib': {'cites': '1',
         'title': 'Programming Machine Ethics by Lu√≠s Moniz Pereira and Ari '
                  'Saptawijaya',
         'year': '2017'},
 'filled': False,
 'id_citations': 'pvkQAj0AAAAJ:HeT0ZceujKMC',
 'source': 'citations'},
                  {'bib': {'cites': '1',
         'title': 'Computational logic and human life: How to be artificially '
                  'intelligent',
         'year': '2010'},
 'filled': False,
 'id_citations': 'pvkQAj0AAAAJ:WbkHhVStYXYC',
 'source': 'citations'},
                  {'bib': {'cites': '1',
         'title': 'LPS-a Logic-Based Production System Framework',
         'year': '2009'},
 'filled': False,
 'id_citations': 'pvkQAj0AAAAJ:XiSMed-E-HIC',
 'source': 'citations'},
                  {'bib': {'cites': '1',
         'title': 'Computational logic as a dual process model of thought',
         'year': '2006'},
 'filled': False,
 'id_citations': 'pvkQAj0AAAAJ:wMgC3FpKEyYC',
 'source': 'citations'},
                  {'bib': {'cites': '1',
         'title': 'Reconciling Logic and Objects',
         'year': '2005'},
 'filled': False,
 'id_citations': 'pvkQAj0AAAAJ:738O_yMBCRsC',
 'source': 'citations'},
                  {'bib': {'cites': '1', 'title': 'Logic and modules', 'year': '2005'},
 'filled': False,
 'id_citations': 'pvkQAj0AAAAJ:ufrVoPGSRksC',
 'source': 'citations'},
                  {'bib': {'cites': '1',
         'title': 'Representing change in air traffic flow management using '
                  'the event calculus',
         'year': '1990'},
 'filled': False,
 'id_citations': 'pvkQAj0AAAAJ:MXK_kJrjxJIC',
 'source': 'citations'},
                  {'bib': {'cites': '1',
         'title': 'Leith and legal logic programming',
         'year': '1987'},
 'filled': False,
 'id_citations': 'pvkQAj0AAAAJ:p__nRnzSRKYC',
 'source': 'citations'},
                  {'bib': {'cites': '1', 'title': 'Biology of Tachyporus spp.', 'year': '1986'},
 'filled': False,
 'id_citations': 'pvkQAj0AAAAJ:lvd772isFD0C',
 'source': 'citations'},
                  {'bib': {'cites': '1',
         'title': 'Logic Programming: Prolog and Its Applications',
         'year': '1986'},
 'filled': False,
 'id_citations': 'pvkQAj0AAAAJ:p2g8aNsByqUC',
 'source': 'citations'},
                  {'bib': {'cites': '1',
         'title': 'Logic as a computer language in education',
         'year': '1985'},
 'filled': False,
 'id_citations': 'pvkQAj0AAAAJ:NhqRSupF_l8C',
 'source': 'citations'},
                  {'bib': {'cites': '1',
         'title': 'Robert Kowalski on logic programming',
         'year': '1984'},
 'filled': False,
 'id_citations': 'pvkQAj0AAAAJ:otzGkya1bYkC',
 'source': 'citations'},
                  {'bib': {'cites': '1',
         'title': 'The Case for Using Equality Axioms in Automatic '
                  'Demonstration',
         'year': '1983'},
 'filled': False,
 'id_citations': 'pvkQAj0AAAAJ:olpn-zPbct0C',
 'source': 'citations'},
                  {'bib': {'cites': '1',
         'title': 'An application of heuristic programming to physical '
                  'planning',
         'year': '1971'},
 'filled': False,
 'id_citations': 'pvkQAj0AAAAJ:UebtZRa9Y70C',
 'source': 'citations'},
                  {'bib': {'cites': '1',
         'title': 'An Exposition of Paramodulation with Refinements',
         'year': '1968'},
 'filled': False,
 'id_citations': 'pvkQAj0AAAAJ:Tiz5es2fbqcC',
 'source': 'citations'},
                  {'bib': {'cites': '1',
         'title': 'An assumption-based frameworkfor non-monotonic reasoning'},
 'filled': False,
 'id_citations': 'pvkQAj0AAAAJ:ULOm3_A8WrAC',
 'source': 'citations'},
                  {'bib': {'cites': '0',
         'title': 'Satisfiability for First-order Logic as a Non-Modal Deontic '
                  'Logic.',
         'year': '2017'},
 'filled': False,
 'id_citations': 'pvkQAj0AAAAJ:GFxP56DSvIMC',
 'source': 'citations'},
                  {'bib': {'cites': '0',
         'title': 'How to do it with LPS (Logic-Based Production System).',
         'year': '2017'},
 'filled': False,
 'id_citations': 'pvkQAj0AAAAJ:Ehil0879vHcC',
 'source': 'citations'},
                  {'bib': {'cites': '0',
         'title': 'A general framework for representing, reasoning and '
                  'querying with annotated semantic web data.',
         'year': '2014'},
 'filled': False,
 'id_citations': 'pvkQAj0AAAAJ:kw52XkFRtyQC',
 'source': 'citations'},
                  {'bib': {'cites': '0',
         'title': 'The scientific contribution of marek sergot',
         'year': '2012'},
 'filled': False,
 'id_citations': 'pvkQAj0AAAAJ:wbdj-CoPYUoC',
 'source': 'citations'},
                  {'bib': {'cites': '0',
         'title': 'A computational logic-based representation of the WHO and '
                  'UNICEF estimates of national immunization coverage. Burton '
                  'A, Gacic-Dobo M, Karimov R, Kowalski R 24 January 2011',
         'year': '2011'},
 'filled': False,
 'id_citations': 'pvkQAj0AAAAJ:OcBU2YAGkTUC',
 'source': 'citations'},
                  {'bib': {'cites': '0',
         'title': 'Computational logic: logic programming and beyond: essays '
                  'in honour of Robert A. Kowalski',
         'year': '2002'},
 'filled': False,
 'id_citations': 'pvkQAj0AAAAJ:jgBuDB5drN8C',
 'source': 'citations'},
                  {'bib': {'cites': '0',
         'title': 'WORKSHOP REPORT: Application of Logic Programming to Legal '
                  'Reasoning',
         'year': '1995'},
 'filled': False,
 'id_citations': 'pvkQAj0AAAAJ:Tyk-4Ss8FVUC',
 'source': 'citations'},
                  {'bib': {'cites': '0',
         'title': 'An Undergraduate Degree in Practical Reasoning',
         'year': '1993'},
 'filled': False,
 'id_citations': 'pvkQAj0AAAAJ:u9iWguZQMMsC',
 'source': 'citations'},
                  {'bib': {'cites': '0', 'title': 'Robert Kowalski', 'year': '1993'},
 'filled': False,
 'id_citations': 'pvkQAj0AAAAJ:rmuvC79q63oC',
 'source': 'citations'},
                  {'bib': {'cites': '0',
         'title': 'The fifth generation project: launching the new era',
         'year': '1993'},
 'filled': False,
 'id_citations': 'pvkQAj0AAAAJ:kNdYIx-mwKoC',
 'source': 'citations'},
                  {'bib': {'cites': '0',
         'title': 'Launching the new era: The fifth generation project: '
                  'personal perspectives',
         'year': '1993'},
 'filled': False,
 'id_citations': 'pvkQAj0AAAAJ:YsMSGLbcyi4C',
 'source': 'citations'},
                  {'bib': {'cites': '0',
         'title': 'Theory and practice in logic programming',
         'year': '1992'},
 'filled': False,
 'id_citations': 'pvkQAj0AAAAJ:qjMakFHDy7sC',
 'source': 'citations'},
                  {'bib': {'cites': '0',
         'title': 'INDIAN IMPORT-EXPORT POLICY AND PROCEDURES AS A LOGIC '
                  'PROGRAM',
         'year': '1989'},
 'filled': False,
 'id_citations': 'pvkQAj0AAAAJ:HE397vMXCloC',
 'source': 'citations'},
                  {'bib': {'cites': '0',
         'title': "TAPSOFT'87, Proceedings of the Intrnational Joint "
                  'Conference en Theory and Practice of Software Development. '
                  'Volume 2: Advanced Seminar on Foundations of Innovative '
                  'Software ‚Ä¶',
         'year': '1989'},
 'filled': False,
 'id_citations': 'pvkQAj0AAAAJ:GtLg2Ama23sC',
 'source': 'citations'},
                  {'bib': {'cites': '0',
         'title': 'The limitations of logic and its role in artificial '
                  'intelligence',
         'year': '1989'},
 'filled': False,
 'id_citations': 'pvkQAj0AAAAJ:WF5omc3nYNoC',
 'source': 'citations'},
                  {'bib': {'cites': '0',
         'title': 'MIT Press Series in Logic Programming: Proceedings of the '
                  'Fifth International Conference and Symposium',
         'year': '1988'},
 'filled': False,
 'id_citations': 'pvkQAj0AAAAJ:YohjEiUPhakC',
 'source': 'citations'},
                  {'bib': {'cites': '0',
         'title': 'Logic Programming: Proceedings of the Fifth International '
                  'Conference and Symposium, University of Whasington, '
                  'Seattle, 1988',
         'year': '1988'},
 'filled': False,
 'id_citations': 'pvkQAj0AAAAJ:WA5NYHcadZ8C',
 'source': 'citations'},
                  {'bib': {'cites': '0',
         'title': 'MIT Press Series in Logic Programming: Proceedings of the '
                  'Fifth International Conference and Symposium',
         'year': '1988'},
 'filled': False,
 'id_citations': 'pvkQAj0AAAAJ:Y0pCki6q_DkC',
 'source': 'citations'},
                  {'bib': {'cites': '0',
         'title': 'Judgment under Uncertainty: Heuristics and Biases',
         'year': '1987'},
 'filled': False,
 'id_citations': 'pvkQAj0AAAAJ:U4n9YNQMCAIC',
 'source': 'citations'},
                  {'bib': {'cites': '0',
         'title': 'Theory and Practice of Software Development 1987, 1: '
                  'Proceedings',
         'year': '1987'},
 'filled': False,
 'id_citations': 'pvkQAj0AAAAJ:tH6gc1N1XXoC',
 'source': 'citations'},
                  {'bib': {'cites': '0',
         'title': 'Analyzing curved surfaces using reflective map techniques',
         'year': '1986'},
 'filled': False,
 'id_citations': 'pvkQAj0AAAAJ:cK4Rrx0J3m0C',
 'source': 'citations'},
                  {'bib': {'cites': '0',
         'title': 'AND-OR-Graphs, Theorem Proving Graphs',
         'year': '1984'},
 'filled': False,
 'id_citations': 'pvkQAj0AAAAJ:zCSUwVk65WsC',
 'source': 'citations'},
                  {'bib': {'cites': '0',
         'title': 'Linear Resolution with Selection Function',
         'year': '1983'},
 'filled': False,
 'id_citations': 'pvkQAj0AAAAJ:48xauSegjOkC',
 'source': 'citations'},
                  {'bib': {'cites': '0',
         'title': 'LOGIC PROGRAMMING Robert KOWALSKI Department of Computing, '
                  'Imperial College London, UK Invited Paper',
         'year': '1983'},
 'filled': False,
 'id_citations': 'pvkQAj0AAAAJ:9yKSN-GCB0IC',
 'source': 'citations'},
                  {'bib': {'cites': '0',
         'title': 'Papers of the Conference, Les Arcs, France, July 8-11, 1980',
         'year': '1980'},
 'filled': False,
 'id_citations': 'pvkQAj0AAAAJ:L7CI7m0gUJcC',
 'source': 'citations'},
                  {'bib': {'cites': '0', 'title': '^ NewsPaper', 'year': '1979'},
 'filled': False,
 'id_citations': 'pvkQAj0AAAAJ:LhH-TYMQEocC',
 'source': 'citations'},
                  {'bib': {'cites': '0', 'title': 'London, England', 'year': '1978'},
 'filled': False,
 'id_citations': 'pvkQAj0AAAAJ:7wO8s98CvbsC',
 'source': 'citations'},
                  {'bib': {'cites': '0', 'title': 'A tribute to referees', 'year': '1978'},
 'filled': False,
 'id_citations': 'pvkQAj0AAAAJ:7Hz3ACDFbsoC',
 'source': 'citations'},
                  {'bib': {'cites': '0',
         'title': "Herbrand's Theorem: Lecture Notes to Diploma Students of "
                  'the Department of Artificial Intelligence',
         'year': '1971'},
 'filled': False,
 'id_citations': 'pvkQAj0AAAAJ:5nxA0vEk-isC',
 'source': 'citations'},
                  {'bib': {'cites': '0',
         'title': 'Summary of Research on Efficiency in Theorem-proving',
         'year': '1969'},
 'filled': False,
 'id_citations': 'pvkQAj0AAAAJ:UeHWp8X0CEIC',
 'source': 'citations'},
                  {'bib': {'cites': '0', 'title': 'Pascal and Francis Bibliographic Databases'},
 'filled': False,
 'id_citations': 'pvkQAj0AAAAJ:LdasjJ6CEcoC',
 'source': 'citations'},
                  {'bib': {'cites': '0',
         'title': 'weft-wb-28838. kuliahkaryawan. my. id Layanan Informasi 17 '
                  'Jam'},
 'filled': False,
 'id_citations': 'pvkQAj0AAAAJ:v1_lew4L6wgC',
 'source': 'citations'},
                  {'bib': {'cites': '0', 'title': 'The Technical Contribution of Marek Sergot'},
 'filled': False,
 'id_citations': 'pvkQAj0AAAAJ:buQ7SEKw-1sC',
 'source': 'citations'},
                  {'bib': {'cites': '0', 'title': 'Journal Administrator'},
 'filled': False,
 'id_citations': 'pvkQAj0AAAAJ:sJsF-0ZLhtgC',
 'source': 'citations'},
                  {'bib': {'cites': '0', 'title': 'Na, me Indez'},
 'filled': False,
 'id_citations': 'pvkQAj0AAAAJ:2tRrZ1ZAMYUC',
 'source': 'citations'},
                  {'bib': {'cites': '0', 'title': 'M. BRUYNOOGHE'},
 'filled': False,
 'id_citations': 'pvkQAj0AAAAJ:LgRImbQfgY4C',
 'source': 'citations'},
                  {'bib': {'cites': '0', 'title': 'Kling, RE, 147'},
 'filled': False,
 'id_citations': 'pvkQAj0AAAAJ:Bg7qf7VwUHIC',
 'source': 'citations'},
                  {'bib': {'cites': '0', 'title': 'JA ROBINSON'},
 'filled': False,
 'id_citations': 'pvkQAj0AAAAJ:vDZJ-YLwNdEC',
 'source': 'citations'},
                  {'bib': {'cites': '0', 'title': 'JA ROBINSON'},
 'filled': False,
 'id_citations': 'pvkQAj0AAAAJ:artPoR2Yc-kC',
 'source': 'citations'},
                  {'bib': {'cites': '0', 'title': 'JL LASSEZ JA ROBINSON'},
 'filled': False,
 'id_citations': 'pvkQAj0AAAAJ:gKiMpY-AVTkC',
 'source': 'citations'},
                  {'bib': {'cites': '0', 'title': 'A Non-Modal Deontic Logic'},
 'filled': False,
 'id_citations': 'pvkQAj0AAAAJ:cWzG1nlazyYC',
 'source': 'citations'},
                  {'bib': {'cites': '0',
         'title': 'PANEL: ARTIFICIAL INTELLIGENCE AND LEGAL RESPONSIBILITY'},
 'filled': False,
 'id_citations': 'pvkQAj0AAAAJ:mNrWkgRL2YcC',
 'source': 'citations'},
                  {'bib': {'cites': '0',
         'title': 'The Sad State Concerning the Relationships between Logic, '
                  'Rules and Logic Programming'},
 'filled': False,
 'id_citations': 'pvkQAj0AAAAJ:WZBGuue-350C',
 'source': 'citations'},
                  {'bib': {'cites': '0',
         'title': 'Towards a Logic-Based Framework for Computing'},
 'filled': False,
 'id_citations': 'pvkQAj0AAAAJ:7T2F9Uy0os0C',
 'source': 'citations'},
                  {'bib': {'cites': '0',
         'title': 'Can Artificial Intelligence Improve Human Reasoning A '
                  'Review by George F. Luger Professor of Computer Science '
                  'Linguistics and Psychology University of New Mexico'},
 'filled': False,
 'id_citations': 'pvkQAj0AAAAJ:BrmTIyaxlBUC',
 'source': 'citations'},
                  {'bib': {'cites': '0',
         'title': 'From Mathematical Logic, to Natural Language, Artificial '
                  'Intelligence, and Human Thinking (A short essay in honour '
                  'of Andrzej Mostowski)'},
 'filled': False,
 'id_citations': 'pvkQAj0AAAAJ:roLk4NBRz8UC',
 'source': 'citations'},
                  {'bib': {'cites': '0',
         'title': 'Argument and Reconciliation Robert A. Kowalski, Francesca '
                  'Toni'},
 'filled': False,
 'id_citations': 'pvkQAj0AAAAJ:eQOLeE2rZwMC',
 'source': 'citations'}],
 'url_picture': 'https://scholar.google.com/citations?view_op=medium_photo&user=pvkQAj0AAAAJ'}
#+end_example
** 188 publications
*** 1979 Logic for problem solving :filled:
#+begin_example
{'bib': {'abstract': 'Investigates the application of logic to problem solving '
                     'and computer programming. Requires no previous knowledge '
                     'in this field, and therefore can be used as an '
                     'introduction to logic, the theory of problem-solving and '
                     'computer programming. Annotation copyrighted by Book '
                     'News, Inc., Portland, OR',
         'author': 'Robert Kowalski',
         'cites': '2755',
         'cites_id': '9051435949280420777',
         'publisher': 'Ediciones D√≠az de Santos',
         'title': 'Logic for problem solving',
         'url': 'http://books.google.com/books?hl=en&lr=&id=cpzcwedpQ-MC&oi=fnd&pg=PA298&dq=info:qWMPEAopnX0J:scholar.google.com&ots=rpH-qWytn3&sig=Q1QGvyxJlMtdq1hPgL6FyE7-9KU',
         'volume': '7',
         'year': '1979'},
 'citations_link': '/scholar?cites=9051435949280420777',
 'cites_per_year': {1981: 30,
                    1982: 48,
                    1983: 89,
                    1984: 102,
                    1985: 116,
                    1986: 177,
                    1987: 171,
                    1988: 133,
                    1989: 124,
                    1990: 147,
                    1991: 118,
                    1992: 126,
                    1993: 85,
                    1994: 92,
                    1995: 71,
                    1996: 71,
                    1997: 61,
                    1998: 53,
                    1999: 46,
                    2000: 45,
                    2001: 45,
                    2002: 58,
                    2003: 33,
                    2004: 35,
                    2005: 25,
                    2006: 52,
                    2007: 53,
                    2008: 49,
                    2009: 30,
                    2010: 32,
                    2011: 27,
                    2012: 57,
                    2013: 69,
                    2014: 52,
                    2015: 29,
                    2016: 31,
                    2017: 26,
                    2018: 35,
                    2019: 25,
                    2020: 18},
 'filled': True,
 'id_citations': 'pvkQAj0AAAAJ:YOwf2qJgpHMC',
 'source': 'citations'}
#+end_example
WARNING: caught exception: <class 'KeyError'>
*** 1989 A logic-based calculus of events :filled:
#+begin_example
{'bib': {'abstract': 'We outline an approach for reasoning about events and '
                     'time within a logic programming framework. The notion of '
                     'event is taken to be more primitive than that of time '
                     'and both are represented explicitly by means of Horn '
                     'clauses augmented with negation by failure. The main '
                     'intended applications are the updating of databases and '
                     'narrative understanding. In contrast with conventional '
                     'databases which assume that updates are made in the same '
                     'order as the corresponding events occur in the real '
                     'world, the explicit treatment of events allows us to '
                     'deal with updates which provide new information about '
                     'the past. Default reasoning on the basis of incomplete '
                     'information is obtained as a consequence of using '
                     'negation by failure. Default conclusions are '
                     'automatically withdrawn if the addition of new '
                     'information renders them inconsistent. Because events '
                     'are differentiated from times, we can represent events '
                     'with ‚Ä¶',
         'author': 'Robert Kowalski and Marek Sergot',
         'cites': '2337',
         'cites_id': '13423715589046054686',
         'eprint': 'https://www.researchgate.net/profile/Robert_Kowalski5/publication/226322247_A_logic-based_calculus_of_events/links/53da3cb20cf2a19eee882ec9/A-logic-based-calculus-of-events.pdf',
         'pages': '23-55',
         'publisher': 'Springer, Berlin, Heidelberg',
         'title': 'A logic-based calculus of events',
         'url': 'https://link.springer.com/chapter/10.1007/978-3-642-83397-7_2',
         'year': '1989'},
 'citations_link': '/scholar?cites=13423715589046054686',
 'cites_per_year': {1988: 15,
                    1989: 24,
                    1990: 39,
                    1991: 34,
                    1992: 31,
                    1993: 43,
                    1994: 52,
                    1995: 50,
                    1996: 58,
                    1997: 50,
                    1998: 56,
                    1999: 52,
                    2000: 55,
                    2001: 41,
                    2002: 52,
                    2003: 44,
                    2004: 72,
                    2005: 78,
                    2006: 104,
                    2007: 118,
                    2008: 93,
                    2009: 129,
                    2010: 131,
                    2011: 92,
                    2012: 119,
                    2013: 125,
                    2014: 103,
                    2015: 97,
                    2016: 88,
                    2017: 84,
                    2018: 74,
                    2019: 62,
                    2020: 24},
 'filled': True,
 'id_citations': 'pvkQAj0AAAAJ:_kc_bZDykSQC',
 'source': 'citations'}
#+end_example
WARNING: caught exception: <class 'KeyError'>
*** 1976 The Semantics of Predicate Logic as a Programming Language :filled:
#+begin_example
{'bib': {'abstract': 'Sentences in first-order predicate logic can be usefully '
                     'interpreted as programs. In this paper the operational '
                     'and fixpoint semantics of predicate logic programs are '
                     'defined, and the connections with the proof theory and '
                     'model theory of logic are investigated. It is concluded '
                     'that operational semantics is a part of proof theory and '
                     'that fixpoint semantics is a special case of '
                     'model-theoretic semantics.',
         'author': 'Maarten Van Emden and Robert Kowalski',
         'cites': '1972',
         'cites_id': '1478207132344412150',
         'eprint': 'http://athena.nitc.ac.in/~kmurali/Courses/LogicAug2009/Papers/Kowalski.pdf',
         'journal': 'Journal of the ACM (JACM)',
         'number': '4',
         'pages': '733-742',
         'publisher': 'ACM',
         'title': 'The Semantics of Predicate Logic as a Programming Language',
         'url': 'https://dl.acm.org/doi/abs/10.1145/321978.321991',
         'volume': '23',
         'year': '1976'},
 'citations_link': '/scholar?cites=1478207132344412150',
 'cites_per_year': {1981: 15,
                    1982: 11,
                    1983: 35,
                    1984: 36,
                    1985: 39,
                    1986: 59,
                    1987: 53,
                    1988: 82,
                    1989: 77,
                    1990: 88,
                    1991: 77,
                    1992: 90,
                    1993: 85,
                    1994: 94,
                    1995: 57,
                    1996: 49,
                    1997: 53,
                    1998: 36,
                    1999: 36,
                    2000: 33,
                    2001: 41,
                    2002: 39,
                    2003: 25,
                    2004: 51,
                    2005: 39,
                    2006: 47,
                    2007: 60,
                    2008: 36,
                    2009: 46,
                    2010: 41,
                    2011: 39,
                    2012: 47,
                    2013: 51,
                    2014: 40,
                    2015: 56,
                    2016: 28,
                    2017: 37,
                    2018: 40,
                    2019: 17,
                    2020: 24},
 'filled': True,
 'id_citations': 'pvkQAj0AAAAJ:_OXeSy2IsFwC',
 'source': 'citations'}
#+end_example
| 1976 | The Semantics of Predicate Logic as a Programming Language | Journal of the ACM (JACM) |
*** 1974 Predicate Logic as Programming Language :filled:
#+begin_example
{'bib': {'abstract': 'The purpose of programming languages is to enable the '
                     'communication from man to machine of problems and their '
                     'general means of solution.',
         'author': 'Robert Kowalski',
         'cites': '1442',
         'cites_id': '2715252701047803635',
         'eprint': 'http://www-public.imtbs-tsp.eu/~gibson/Teaching/CSC4504/ReadingMaterial/Kowalski74.pdf',
         'pages': '569-574',
         'title': 'Predicate Logic as Programming Language',
         'url': 'http://www-public.imtbs-tsp.eu/~gibson/Teaching/CSC4504/ReadingMaterial/Kowalski74.pdf',
         'year': '1974'},
 'citations_link': '/scholar?cites=2715252701047803635',
 'cites_per_year': {1981: 23,
                    1982: 27,
                    1983: 45,
                    1984: 55,
                    1985: 61,
                    1986: 59,
                    1987: 52,
                    1988: 53,
                    1989: 37,
                    1990: 41,
                    1991: 36,
                    1992: 30,
                    1993: 36,
                    1994: 37,
                    1995: 25,
                    1996: 26,
                    1997: 40,
                    1998: 27,
                    1999: 20,
                    2000: 17,
                    2001: 27,
                    2002: 29,
                    2003: 29,
                    2004: 27,
                    2005: 17,
                    2006: 45,
                    2007: 49,
                    2008: 41,
                    2009: 35,
                    2010: 36,
                    2011: 22,
                    2012: 30,
                    2013: 31,
                    2014: 31,
                    2015: 27,
                    2016: 20,
                    2017: 27,
                    2018: 29,
                    2019: 20,
                    2020: 18},
 'filled': True,
 'id_citations': 'pvkQAj0AAAAJ:8xutWZnSdmoC',
 'source': 'citations'}
#+end_example
WARNING: caught exception: <class 'KeyError'>
*** 1979 Algorithm= logic+ control :filled:
#+begin_example
{'bib': {'abstract': 'The notion that computation = controlled deduction was '
                     'first proposed by Pay Hayes [19] and more recently by '
                     'Bibel [2] and Vaughn-Pratt [31]. A similar thesis that '
                     'database systems should be regarded as consisting of a '
                     'relational component, which defines the logic of the '
                     'data, and a control component, which stores and '
                     'retrieves it, has been successfully argued by Codd [10]. '
                     "Hewitt's argument [20] for the programming language "
                     'PLANNER, though generally regarded as an argument '
                     'against logic, can also be regarded as an argument for '
                     'the thesis that algorithms be regarded as consisting of '
                     'both logic and control components. In this paper we '
                     'shall explore some of the useful consequences of that '
                     'thesis.',
         'author': 'Robert Kowalski',
         'cites': '1042',
         'cites_id': '3531060096202719670',
         'eprint': 'https://www.emcl-study.eu/fileadmin/user_upload/_imported/fileadmin/downloads/Kowalski-ACM-1979.pdf',
         'journal': 'Communications of the ACM',
         'number': '7',
         'pages': '424-436',
         'publisher': 'ACM',
         'title': 'Algorithm= logic+ control',
         'url': 'https://dl.acm.org/doi/abs/10.1145/359131.359136',
         'volume': '22',
         'year': '1979'},
 'citations_link': '/scholar?cites=3531060096202719670',
 'cites_per_year': {1981: 12,
                    1982: 22,
                    1983: 24,
                    1984: 30,
                    1985: 22,
                    1986: 29,
                    1987: 32,
                    1988: 30,
                    1989: 39,
                    1990: 24,
                    1991: 29,
                    1992: 37,
                    1993: 34,
                    1994: 20,
                    1995: 23,
                    1996: 28,
                    1997: 17,
                    1998: 25,
                    1999: 13,
                    2000: 14,
                    2001: 15,
                    2002: 26,
                    2003: 12,
                    2004: 18,
                    2005: 11,
                    2006: 16,
                    2007: 36,
                    2008: 36,
                    2009: 27,
                    2010: 35,
                    2011: 21,
                    2012: 29,
                    2013: 29,
                    2014: 17,
                    2015: 26,
                    2016: 20,
                    2017: 24,
                    2018: 33,
                    2019: 35,
                    2020: 25},
 'filled': True,
 'id_citations': 'pvkQAj0AAAAJ:qxL8FJ1GzNcC',
 'source': 'citations'}
#+end_example
| 1979 | Algorithm= logic+ control | Communications of the ACM |
*** 1992 Abductive logic programming :filled:
#+begin_example
{'bib': {'abstract': 'This paper is a survey and critical overview of recent '
                     'work on the extension of logic programming to perform '
                     'abductive reasoning (abductive logic programming). We '
                     'outline the general framework of abduction and its '
                     'applications to knowledge assimilation and default '
                     'reasoning; and we introduce an argumentation-theoretic '
                     'approach to the use of abduction as an interpretation '
                     'for negation as failure. We also analyse the links '
                     'between abduction and the extension of logic programming '
                     'obtained by adding a form of explicit negation. Finally '
                     'we discuss the relation between abduction and truth '
                     'maintenance.',
         'author': 'Antonis C Kakas and Robert A.  Kowalski and Francesca Toni',
         'cites': '983',
         'cites_id': '18119357517656745518',
         'eprint': 'https://citeseerx.ist.psu.edu/viewdoc/download?doi=10.1.1.37.3655&rep=rep1&type=pdf',
         'journal': 'Journal of logic and computation',
         'number': '6',
         'pages': '719-770',
         'publisher': 'Oxford University Press',
         'title': 'Abductive logic programming',
         'url': 'https://academic.oup.com/logcom/article-abstract/2/6/719/942121',
         'volume': '2',
         'year': '1992'},
 'citations_link': '/scholar?cites=18119357517656745518',
 'cites_per_year': {1992: 3,
                    1993: 17,
                    1994: 33,
                    1995: 32,
                    1996: 31,
                    1997: 46,
                    1998: 27,
                    1999: 30,
                    2000: 37,
                    2001: 29,
                    2002: 30,
                    2003: 26,
                    2004: 37,
                    2005: 21,
                    2006: 52,
                    2007: 53,
                    2008: 38,
                    2009: 41,
                    2010: 42,
                    2011: 37,
                    2012: 39,
                    2013: 35,
                    2014: 33,
                    2015: 45,
                    2016: 39,
                    2017: 43,
                    2018: 35,
                    2019: 27,
                    2020: 8},
 'filled': True,
 'id_citations': 'pvkQAj0AAAAJ:aqlVkmm33-oC',
 'source': 'citations'}
#+end_example
| 1992 | Abductive logic programming | Journal of logic and computation |
*** 1997 An abstract, argumentation-theoretic approach to default reasoning :filled:
#+begin_example
{'bib': {'abstract': 'We present an abstract framework for default reasoning, '
                     'which includes Theorist, default logic, logic '
                     'programming, autoepistemic logic, non-monotonic modal '
                     'logics, and certain instances of circumscription as '
                     'special cases. The framework can be understood as a '
                     'generalisation of Theorist. The generalisation allows '
                     'any theory formulated in a monotonic logic to be '
                     'extended by a defeasible set of assumptions.',
         'author': 'Andrei Bondarenko and Phan Minh Dung and Robert A Kowalski '
                   'and Francesca Toni',
         'cites': '825',
         'cites_id': '17277057023679542696',
         'eprint': 'https://www.sciencedirect.com/science/article/pii/S0004370297000155/pdf?md5=678506b6c345f5894ecf3e2176953938&pid=1-s2.0-S0004370297000155-main.pdf&_valck=1',
         'journal': 'Artificial intelligence',
         'number': '1-2',
         'pages': '63-101',
         'publisher': 'Elsevier',
         'title': 'An abstract, argumentation-theoretic approach to default '
                  'reasoning',
         'url': 'https://www.sciencedirect.com/science/article/pii/S0004370297000155',
         'volume': '93',
         'year': '1997'},
 'citations_link': '/scholar?cites=17277057023679542696',
 'cites_per_year': {1996: 5,
                    1997: 3,
                    1998: 8,
                    1999: 17,
                    2000: 22,
                    2001: 24,
                    2002: 27,
                    2003: 20,
                    2004: 19,
                    2005: 27,
                    2006: 28,
                    2007: 47,
                    2008: 52,
                    2009: 35,
                    2010: 48,
                    2011: 46,
                    2012: 45,
                    2013: 50,
                    2014: 45,
                    2015: 43,
                    2016: 51,
                    2017: 51,
                    2018: 43,
                    2019: 39,
                    2020: 18},
 'filled': True,
 'id_citations': 'pvkQAj0AAAAJ:mVmsd5A6BfQC',
 'source': 'citations'}
#+end_example
| 1997 | An abstract, argumentation-theoretic approach to default reasoning | Artificial intelligence |
*** 1986 The British Nationality Act as a logic program :filled:
#+begin_example
{'bib': {'abstract': 'The formalization of legislation and the development of '
                     'computer systems to assist with legal problem solving '
                     'provide a rich domain for developing and testing '
                     'artificial-intelligence technology.',
         'author': 'Marek J.  Sergot and Fariba Sadri and Robert A.  Kowalski '
                   'and Frank Kriwaczek and Peter Hammond and H Terese Cory',
         'cites': '581',
         'cites_id': '2717867236127915594',
         'eprint': 'http://www.doc.ic.ac.uk/~rak/papers/British%20Nationality%20Act.pdf',
         'journal': 'Communications of the ACM',
         'number': '5',
         'pages': '370-386',
         'publisher': 'ACM',
         'title': 'The British Nationality Act as a logic program',
         'url': 'https://dl.acm.org/doi/abs/10.1145/5689.5920',
         'volume': '29',
         'year': '1986'},
 'citations_link': '/scholar?cites=2717867236127915594',
 'cites_per_year': {1986: 4,
                    1987: 19,
                    1988: 18,
                    1989: 25,
                    1990: 21,
                    1991: 30,
                    1992: 16,
                    1993: 27,
                    1994: 16,
                    1995: 17,
                    1996: 9,
                    1997: 10,
                    1998: 9,
                    1999: 13,
                    2000: 11,
                    2001: 12,
                    2002: 11,
                    2003: 19,
                    2004: 12,
                    2005: 14,
                    2006: 13,
                    2007: 9,
                    2008: 17,
                    2009: 15,
                    2010: 14,
                    2011: 24,
                    2012: 21,
                    2013: 24,
                    2014: 8,
                    2015: 19,
                    2016: 16,
                    2017: 22,
                    2018: 21,
                    2019: 22,
                    2020: 12},
 'filled': True,
 'id_citations': 'pvkQAj0AAAAJ:QIV2ME_5wuYC',
 'source': 'citations'}
#+end_example
| 1986 | The British Nationality Act as a logic program | Communications of the ACM |
*** 1971 Linear resolution with selection function :filled:
#+begin_example
{'bib': {'abstract': 'Linear resolution with selection function (SL. '
                     'resolution) is a restricted form of linear resolution. '
                     'The main restriction is e~ ected by a selection function '
                     'which chooses fro:~ each clause a sit, gle literal to be '
                     'resolved upon in that clause. This and other '
                     'restrictions are adapted to linear resolution from '
                     "Loveland's model elimination. We show that SL-resolution "
                     'achieves a substantial reduction in the generation of '
                     'redundant and irrelevant derivations and does so without '
                     'significantly increasing the complexity of simplest '
                     'proofs. We base our argument for the increased '
                     'efficiency of SL-resolution upon precise calculation of '
                     'these quantities.',
         'author': 'Robert Kowalski and Donald Kuehner',
         'cites': '543',
         'cites_id': '3398045067704505538',
         'eprint': 'http://www.doc.ic.ac.uk/~rak/papers/sl.pdf',
         'journal': 'Artificial Intelligence',
         'number': '3-4',
         'pages': '227-260',
         'publisher': 'Elsevier',
         'title': 'Linear resolution with selection function',
         'url': 'http://www.doc.ic.ac.uk/~rak/papers/sl.pdf',
         'volume': '2',
         'year': '1971'},
 'citations_link': '/scholar?cites=3398045067704505538',
 'cites_per_year': {1981: 2,
                    1982: 4,
                    1983: 5,
                    1984: 9,
                    1985: 7,
                    1986: 13,
                    1987: 9,
                    1988: 25,
                    1989: 17,
                    1990: 21,
                    1991: 18,
                    1992: 15,
                    1993: 6,
                    1994: 14,
                    1995: 14,
                    1996: 13,
                    1997: 10,
                    1998: 8,
                    1999: 15,
                    2000: 12,
                    2001: 11,
                    2002: 5,
                    2003: 10,
                    2004: 7,
                    2005: 6,
                    2006: 10,
                    2007: 14,
                    2008: 11,
                    2009: 25,
                    2010: 26,
                    2011: 13,
                    2012: 17,
                    2013: 9,
                    2014: 16,
                    2015: 11,
                    2016: 13,
                    2017: 14,
                    2018: 8,
                    2019: 8,
                    2020: 1},
 'filled': True,
 'id_citations': 'pvkQAj0AAAAJ:9ZlFYXVOiuMC',
 'source': 'citations'}
#+end_example
| 1971 | Linear resolution with selection function | Artificial Intelligence |
WARNING: caught exception: <class 'AttributeError'>
*** 1989 Abduction Compared with Negation by Failure. :filled:
#+begin_example
{'bib': {'abstract': 'Horn clause logic programming can be extended to include '
                     'abduction with integrity constraints. In the resulting '
                     'extension of logic programming, negation by failure can '
                     'be simulated by making negative conditions abducible and '
                     'by imposing appropriate denials and disjunctions as '
                     'integrity constraints. This gives an alternative '
                     'semantics for negation by failure, which generalises the '
                     'stable model semantics of negation by failure.',
         'author': 'Kave Eshghi and Robert A Kowalski',
         'cites': '520',
         'cites_id': '13961702652996240892',
         'eprint': 'https://www.researchgate.net/profile/Kave_Eshghi/publication/220985753_Abduction_Compared_with_Negation_by_Failure/links/0c960534f68b82c624000000.pdf',
         'journal': 'ICLP',
         'pages': '234-255',
         'title': 'Abduction Compared with Negation by Failure.',
         'url': 'https://www.researchgate.net/profile/Kave_Eshghi/publication/220985753_Abduction_Compared_with_Negation_by_Failure/links/0c960534f68b82c624000000.pdf',
         'volume': '89',
         'year': '1989'},
 'citations_link': '/scholar?cites=13961702652996240892',
 'cites_per_year': {1990: 13,
                    1991: 21,
                    1992: 22,
                    1993: 35,
                    1994: 42,
                    1995: 24,
                    1996: 35,
                    1997: 31,
                    1998: 18,
                    1999: 22,
                    2000: 24,
                    2001: 15,
                    2002: 18,
                    2003: 22,
                    2004: 22,
                    2005: 14,
                    2006: 15,
                    2007: 24,
                    2008: 10,
                    2009: 23,
                    2010: 11,
                    2011: 5,
                    2012: 10,
                    2013: 6,
                    2014: 7,
                    2015: 2,
                    2016: 2,
                    2017: 4,
                    2018: 5,
                    2019: 2},
 'filled': True,
 'id_citations': 'pvkQAj0AAAAJ:4DMP91E08xMC',
 'source': 'citations'}
#+end_example
| 1989 | Abduction Compared with Negation by Failure. | ICLP |
*** 1998 The role of abduction in logic programming :filled:
#+begin_example
{'bib': {'abstract': 'This paper extends and updates our earlier survey and '
                     'analysis of work on the extension of logic programming '
                     'to perform abductive reasoning [Kakas et al., 1993]. The '
                     'purpose of the paper is to provide a critical overview '
                     'of some of the main research results, in order to '
                     'develop a common framework for evaluating these results, '
                     'to identify the main unresolved problems, and to '
                     'indicate directions for future work. The emphasis is not '
                     'on technical details but on relationships and common '
                     'features of different approaches. Some of the main '
                     'issues we will consider are the contributions that '
                     'abduction can make to the problems of reasoning with '
                     'incomplete or negative information, the evolution of '
                     'knowledge, and the semantics of logic programming and '
                     'its extensions. We also discuss recent work on the '
                     'argumentation-theoretic interpretation of abduction, '
                     'which was introduced in the earlier version of this '
                     'paper.',
         'author': 'Antonis C Kakas and Robert A Kowalski and Francesca Toni',
         'cites': '495',
         'cites_id': '12034464412079083178',
         'eprint': 'http://citeseerx.ist.psu.edu/viewdoc/download?doi=10.1.1.71.4337&rep=rep1&type=pdf',
         'journal': 'Handbook of logic in artificial intelligence and logic '
                    'programming',
         'pages': '235-324',
         'title': 'The role of abduction in logic programming',
         'url': 'http://books.google.com/books?hl=en&lr=&id=d2_i0qeP6yUC&oi=fnd&pg=PA235&dq=info:qs4NGJ8BA6cJ:scholar.google.com&ots=-vQJksKolm&sig=TSdLVn0fWwXt9aeGT1Rhrja7Fxs',
         'volume': '5',
         'year': '1998'},
 'citations_link': '/scholar?cites=12034464412079083178',
 'cites_per_year': {1997: 6,
                    1998: 11,
                    1999: 12,
                    2000: 16,
                    2001: 32,
                    2002: 27,
                    2003: 24,
                    2004: 32,
                    2005: 28,
                    2006: 21,
                    2007: 30,
                    2008: 33,
                    2009: 26,
                    2010: 27,
                    2011: 31,
                    2012: 12,
                    2013: 14,
                    2014: 16,
                    2015: 25,
                    2016: 26,
                    2017: 20,
                    2018: 13,
                    2019: 5,
                    2020: 2},
 'filled': True,
 'id_citations': 'pvkQAj0AAAAJ:dhFuZR0502QC',
 'source': 'citations'}
#+end_example
| 1998 | The role of abduction in logic programming | Handbook of logic in artificial intelligence and logic programming |
*** 1975 A proof procedure using connection graphs :filled:
#+begin_example
{'bib': {'abstract': 'Various deficiencies of resolution systems are '
                     'investigated and a new theorem-proving system designed '
                     'to remedy those deficiencms is presented The system is '
                     'notable for eliminating redundancies present in '
                     'SL-resolutlon, for incorporating preprocessing '
                     'procedures, for liberahzing the order in which subgoals '
                     'can be activated, for incorporating multidirectmnal '
                     'searches, and for giving immediate access to pairs of '
                     'clauses which resolve Examples of how the new system '
                     'copes with the defic2encies of other theorem-proving '
                     'systems are chosen from the areas of predicate logic '
                     'programming and language parsing. The paper emphasizes '
                     'the historical development of the new system, beginning '
                     'as a supplement to SL-resolution in the form of '
                     'classificatmn trees and incorporating an analogue of the '
                     'Waltz algorithm for picture Interpretation The paper '
                     'ends with a discussion of the opportunities for using '
                     'look-ahead to ‚Ä¶',
         'author': 'Robert Kowalski',
         'cites': '408',
         'cites_id': '393553071557622806',
         'eprint': 'https://www.doc.ic.ac.uk/~rak/papers/connection%20graphs.pdf',
         'journal': 'Journal of the ACM (JACM)',
         'number': '4',
         'pages': '572-595',
         'publisher': 'ACM',
         'title': 'A proof procedure using connection graphs',
         'url': 'https://dl.acm.org/doi/pdf/10.1145/321906.321919',
         'volume': '22',
         'year': '1975'},
 'citations_link': '/scholar?cites=393553071557622806',
 'cites_per_year': {1980: 10,
                    1981: 13,
                    1982: 15,
                    1983: 12,
                    1984: 8,
                    1985: 15,
                    1986: 30,
                    1987: 17,
                    1988: 18,
                    1989: 12,
                    1990: 10,
                    1991: 22,
                    1992: 10,
                    1993: 10,
                    1994: 11,
                    1995: 5,
                    1996: 14,
                    1997: 7,
                    1998: 5,
                    1999: 6,
                    2000: 8,
                    2001: 11,
                    2002: 11,
                    2003: 4,
                    2004: 3,
                    2005: 3,
                    2006: 8,
                    2007: 5,
                    2008: 11,
                    2009: 6,
                    2010: 6,
                    2011: 8,
                    2012: 8,
                    2013: 7,
                    2014: 6,
                    2015: 6,
                    2016: 3,
                    2017: 1,
                    2018: 1},
 'filled': True,
 'id_citations': 'pvkQAj0AAAAJ:7PzlFSSx8tAC',
 'source': 'citations'}
#+end_example
| 1975 | A proof procedure using connection graphs | Journal of the ACM (JACM) |
*** 1997 The IFF proof procedure for abductive logic programming :filled:
#+begin_example
{'bib': {'abstract': 'In this paper, we outline a proof procedure which '
                     'combines reasoning with defined predicates together with '
                     'reasoning with undefined, abducible, predicates. Defined '
                     'predicates are defined in if-and-only-if form. Abducible '
                     'predicates are constrained by means of integrity '
                     'constraints. Given an initial query, the task of the '
                     'proof procedure is to construct a definition of the '
                     'abducible predicates and a substitution for the '
                     'variables in the query, such that both the resulting '
                     'instance of the query and the integrity constraints are '
                     'implied by the extended set of definitions.',
         'author': 'Tze Ho Fung and Robert Kowalski',
         'cites': '276',
         'cites_id': '15320214205840335614',
         'eprint': 'https://www.sciencedirect.com/science/article/pii/S0743106697000265/pdf?md5=fb33c6a2d8bf60da3b767bfedf86d9aa&pid=1-s2.0-S0743106697000265-main.pdf&_valck=1',
         'journal': 'The Journal of logic programming',
         'number': '2',
         'pages': '151-165',
         'publisher': 'North-Holland',
         'title': 'The IFF proof procedure for abductive logic programming',
         'url': 'https://www.sciencedirect.com/science/article/pii/S0743106697000265',
         'volume': '33',
         'year': '1997'},
 'citations_link': '/scholar?cites=15320214205840335614',
 'cites_per_year': {1996: 1,
                    1997: 1,
                    1998: 12,
                    1999: 12,
                    2000: 9,
                    2001: 7,
                    2002: 17,
                    2003: 13,
                    2004: 26,
                    2005: 19,
                    2006: 20,
                    2007: 24,
                    2008: 15,
                    2009: 14,
                    2010: 17,
                    2011: 8,
                    2012: 10,
                    2013: 10,
                    2014: 3,
                    2015: 9,
                    2016: 8,
                    2017: 4,
                    2018: 9,
                    2019: 1},
 'filled': True,
 'id_citations': 'pvkQAj0AAAAJ:W7OEmFMy1HYC',
 'source': 'citations'}
#+end_example
| 1997 | The IFF proof procedure for abductive logic programming | The Journal of logic programming |
*** 2006 Dialectic proof procedures for assumption-based, admissible argumentation :filled:
#+begin_example
{'bib': {'abstract': 'We present a family of dialectic proof procedures for '
                     'the admissibility semantics of assumption-based '
                     'argumentation. These proof procedures are defined for '
                     'any conventional logic formulated as a collection of '
                     'inference rules and show how any such logic can be '
                     'extended to a dialectic argumentation system.',
         'author': 'Phan Minh Dung and Robert A Kowalski and Francesca Toni',
         'cites': '273',
         'cites_id': '11000848196547459541',
         'eprint': 'https://www.sciencedirect.com/science/article/pii/S0004370205001256/pdf?md5=f64df1d87752d4571d8b6cb8226f8c10&pid=1-s2.0-S0004370205001256-main.pdf',
         'journal': 'Artificial Intelligence',
         'number': '2',
         'pages': '114-159',
         'publisher': 'Elsevier',
         'title': 'Dialectic proof procedures for assumption-based, admissible '
                  'argumentation',
         'url': 'https://www.sciencedirect.com/science/article/pii/S0004370205001256',
         'volume': '170',
         'year': '2006'},
 'citations_link': '/scholar?cites=11000848196547459541',
 'cites_per_year': {2005: 2,
                    2006: 14,
                    2007: 32,
                    2008: 35,
                    2009: 21,
                    2010: 24,
                    2011: 27,
                    2012: 18,
                    2013: 15,
                    2014: 16,
                    2015: 11,
                    2016: 12,
                    2017: 18,
                    2018: 9,
                    2019: 13,
                    2020: 5},
 'filled': True,
 'id_citations': 'pvkQAj0AAAAJ:hC7cP41nSMkC',
 'source': 'citations'}
#+end_example
| 2006 | Dialectic proof procedures for assumption-based, admissible argumentation | Artificial Intelligence |
*** 1991 Logic programs with exceptions :filled:
#+begin_example
{'bib': {'abstract': 'We extend logic programming to deal with default '
                     'reasoning by allowing the explicit representation of '
                     'exceptions in addition to general rules. To formalise '
                     'this extension, we modify the answer set semantics of '
                     'Gelfond and Lifschitz, which allows both classical '
                     'negation and negation as failure.',
         'author': 'Robert A Kowalski and Fariba Sadri',
         'cites': '239',
         'cites_id': '10981005324178484337',
         'eprint': 'http://www.doc.ic.ac.uk/~rak/papers/Rules%20and%20exceptions.pdf',
         'journal': 'New Generation Computing',
         'number': '3-4',
         'pages': '387-400',
         'publisher': 'Springer-Verlag',
         'title': 'Logic programs with exceptions',
         'url': 'https://link.springer.com/content/pdf/10.1007/BF03037170.pdf',
         'volume': '9',
         'year': '1991'},
 'citations_link': '/scholar?cites=10981005324178484337',
 'cites_per_year': {1990: 10,
                    1991: 11,
                    1992: 13,
                    1993: 19,
                    1994: 22,
                    1995: 24,
                    1996: 17,
                    1997: 15,
                    1998: 9,
                    1999: 7,
                    2000: 4,
                    2001: 8,
                    2002: 12,
                    2003: 7,
                    2004: 7,
                    2005: 5,
                    2006: 9,
                    2007: 8,
                    2008: 2,
                    2009: 4,
                    2010: 2,
                    2011: 3,
                    2012: 5,
                    2013: 3,
                    2014: 1,
                    2015: 3,
                    2016: 2},
 'filled': True,
 'id_citations': 'pvkQAj0AAAAJ:ZeXyd9-uunAC',
 'source': 'citations'}
#+end_example
| 1991 | Logic programs with exceptions | New Generation Computing |
*** 1988 The early years of logic programming :filled:
#+begin_example
{'bib': {'abstract': 'This firsthand recollection of those early days of logic '
                     'programming traces the shared influences and '
                     'inspirations that connected Edinburgh, Scotland, and '
                     'Marseilles, France.',
         'author': 'Robert A Kowalski',
         'cites': '223',
         'cites_id': '16560191658576515013',
         'eprint': 'http://citeseerx.ist.psu.edu/viewdoc/download?doi=10.1.1.645.2034&rep=rep1&type=pdf',
         'journal': 'Communications of the ACM',
         'number': '1',
         'pages': '38-43',
         'publisher': 'ACM',
         'title': 'The early years of logic programming',
         'url': 'https://dl.acm.org/doi/pdf/10.1145/35043.35046',
         'volume': '31',
         'year': '1988'},
 'citations_link': '/scholar?cites=16560191658576515013',
 'cites_per_year': {1988: 3,
                    1989: 3,
                    1990: 6,
                    1991: 3,
                    1992: 7,
                    1993: 3,
                    1994: 2,
                    1995: 5,
                    1996: 5,
                    1997: 2,
                    1998: 5,
                    1999: 1,
                    2000: 4,
                    2001: 4,
                    2002: 4,
                    2003: 1,
                    2004: 4,
                    2005: 10,
                    2006: 11,
                    2007: 14,
                    2008: 15,
                    2009: 7,
                    2010: 13,
                    2011: 10,
                    2012: 5,
                    2013: 15,
                    2014: 10,
                    2015: 12,
                    2016: 13,
                    2017: 12,
                    2018: 7},
 'filled': True,
 'id_citations': 'pvkQAj0AAAAJ:r0BpntZqJG4C',
 'source': 'citations'}
#+end_example
| 1988 | The early years of logic programming | Communications of the ACM |
*** 2009 Assumption-based argumentation :filled:
#+begin_example
{'bib': {'abstract': 'Assumption-Based Argumentation (ABA) [4, 3, 27, 11, 12, '
                     '20, 22] was developed, starting in the 90s, as a '
                     'computational framework to reconcile and generalise most '
                     'existing approaches to default reasoning [24, 25, 4, 3, '
                     '27, 26]. ABA was inspired by Dung‚Äôs preferred extension '
                     'semantics for logic programming [9, 7], with its '
                     'dialectical interpretation of the acceptability of '
                     'negation-as-failure assumptions based on the notion of '
                     '‚Äúno-evidence-to-the-contrary‚Äù [9, 7], by the Kakas, '
                     'Kowalski and Toni interpretation of the preferred '
                     'extension semantics in argumentation-theoretic terms '
                     '[24, 25], and by Dung‚Äôs abstract argumentation (AA) [6, '
                     '8].',
         'author': 'Phan Minh Dung and Robert A Kowalski and Francesca Toni',
         'cites': '222',
         'cites_id': '16096009526020519035',
         'eprint': 'http://citeseerx.ist.psu.edu/viewdoc/download?doi=10.1.1.188.2433&rep=rep1&type=pdf',
         'pages': '199-218',
         'publisher': 'Springer, Boston, MA',
         'title': 'Assumption-based argumentation',
         'url': 'https://link.springer.com/chapter/10.1007/978-0-387-98197-0_10',
         'year': '2009'},
 'citations_link': '/scholar?cites=16096009526020519035',
 'cites_per_year': {2009: 4,
                    2010: 11,
                    2011: 11,
                    2012: 14,
                    2013: 22,
                    2014: 25,
                    2015: 27,
                    2016: 23,
                    2017: 21,
                    2018: 18,
                    2019: 28,
                    2020: 14},
 'filled': True,
 'id_citations': 'pvkQAj0AAAAJ:RGFaLdJalmkC',
 'source': 'citations'}
#+end_example
WARNING: caught exception: <class 'KeyError'>
*** 1992 Database updates in the event calculus :filled:
#+begin_example
{'bib': {'abstract': 'This paper investigates a special case of the event '
                     'calculus, concerned with database updates. It discusses '
                     'the way relational databases, historical databases, '
                     'modal logic, the situation calculus, and case semantics '
                     'deal with database updates and compares the event '
                     'calculus with the situation calculus in detail. It '
                     'argues that the event calculus can overcome the '
                     'computational aspects of the frame problem in the '
                     'situation calculus and that it can be implemented with '
                     'an efficiency approaching that of destructive assignment '
                     'in relational databases.',
         'author': 'Robert Kowalski',
         'cites': '219',
         'cites_id': '12969963759208095800',
         'eprint': 'https://www.sciencedirect.com/science/article/pii/074310669290041Z/pdf?md5=225e80229e38243a3b26d7c495af099b&pid=1-s2.0-074310669290041Z-main.pdf&_valck=1',
         'journal': 'The Journal of Logic Programming',
         'number': '1-2',
         'pages': '121-146',
         'publisher': 'North-Holland',
         'title': 'Database updates in the event calculus',
         'url': 'https://www.sciencedirect.com/science/article/pii/074310669290041Z',
         'volume': '12',
         'year': '1992'},
 'citations_link': '/scholar?cites=12969963759208095800',
 'cites_per_year': {1991: 2,
                    1992: 1,
                    1993: 6,
                    1994: 14,
                    1995: 12,
                    1996: 12,
                    1997: 11,
                    1998: 9,
                    1999: 11,
                    2000: 7,
                    2001: 3,
                    2002: 6,
                    2003: 5,
                    2004: 7,
                    2005: 10,
                    2006: 7,
                    2007: 13,
                    2008: 4,
                    2009: 10,
                    2010: 10,
                    2011: 6,
                    2012: 5,
                    2013: 3,
                    2014: 6,
                    2015: 7,
                    2016: 4,
                    2017: 7,
                    2018: 1},
 'filled': True,
 'id_citations': 'pvkQAj0AAAAJ:qUcmZB5y_30C',
 'source': 'citations'}
#+end_example
| 1992 | Database updates in the event calculus | The Journal of Logic Programming |
*** 1988 A theorem-proving approach to database integrity :filled:
#+begin_example
{'bib': {'abstract': 'We propose an extension of the SLDNF proof procedure for '
                     'checking integrity constraints in deductive databases. '
                     'To achieve the effect of the simplification methods '
                     'investigated by Nicolas [1982], Lloyd, Sonenberg, and '
                     'Topor [1986], and Decker [1986], we use clauses '
                     'corresponding to the updates as top clauses for the '
                     'search space. This builds in the assumption that the '
                     'database satisfied its integrity constraints prior to '
                     'the transaction, and that, therefore, any violation of '
                     'the constraints in the updated database must involve at '
                     'least one of the updates in the transaction. Different '
                     'simplification methods can be simulated by different '
                     'strategies for literal selection and search.',
         'author': 'Fariba Sadri and Robert Kowalski',
         'cites': '217',
         'cites_id': '7361827294512593992',
         'eprint': 'https://spiral.imperial.ac.uk/bitstream/10044/1/47238/2/Sadri-F-1988-PhD-Thesis.pdf',
         'pages': '313-362',
         'publisher': 'Morgan Kaufmann',
         'title': 'A theorem-proving approach to database integrity',
         'url': 'https://www.sciencedirect.com/science/article/pii/B9780934613408500130',
         'year': '1988'},
 'citations_link': '/scholar?cites=7361827294512593992',
 'cites_per_year': {1987: 3,
                    1988: 3,
                    1989: 8,
                    1990: 11,
                    1991: 9,
                    1992: 18,
                    1993: 14,
                    1994: 14,
                    1995: 19,
                    1996: 10,
                    1997: 13,
                    1998: 7,
                    1999: 5,
                    2000: 4,
                    2001: 6,
                    2002: 2,
                    2003: 5,
                    2004: 6,
                    2005: 4,
                    2006: 10,
                    2007: 9,
                    2008: 4,
                    2009: 8,
                    2010: 3,
                    2011: 5,
                    2012: 1,
                    2013: 3,
                    2014: 2,
                    2015: 1,
                    2016: 1,
                    2017: 2,
                    2018: 1},
 'filled': True,
 'id_citations': 'pvkQAj0AAAAJ:IWHjjKOFINEC',
 'source': 'citations'}
#+end_example
WARNING: caught exception: <class 'KeyError'>
*** 1999 From logic programming towards multi‚Äêagent systems :filled:
#+begin_example
{'bib': {'abstract': 'In this paper we present an extension of logic '
                     'programming (LP) that is suitable not only for the '
                     '‚Äúrational‚Äù component of a single agent but also for the '
                     '‚Äúreactive‚Äù component and that can encompass multi‚Äêagent '
                     'systems. We modify an earlier abductive proof procedure '
                     'and embed it within an agent cycle. The proof procedure '
                     'incorporates abduction, definitions and integrity '
                     'constraints within a dynamic environment, where changes '
                     'can be observed as inputs. The definitions allow '
                     'rational planning behaviour and the integrity '
                     'constraints allow reactive, condition‚Äêaction type '
                     'behaviour. The agent cycle provides a resource‚Äêbounded '
                     'mechanism that allows the agent‚Äôs thinking to be '
                     'interrupted for the agent to record and assimilate '
                     'observations as input and execute actions as output, '
                     'before resuming further thinking. We argue that these '
                     'extensions of LP, accommodating multi‚Äêtheories embedded '
                     'in a shared ‚Ä¶',
         'author': 'Robert Kowalski and Fariba Sadri',
         'cites': '212',
         'cites_id': '15219924353082016921',
         'eprint': 'https://www.researchgate.net/profile/Robert_Kowalski5/publication/220643203_From_Logic_Programming_Towards_Multi-Agent_Systems/links/53da3cb70cf2a19eee882ed1/From-Logic-Programming-Towards-Multi-Agent-Systems.pdf',
         'journal': 'Annals of Mathematics and Artificial Intelligence',
         'number': '3-4',
         'pages': '391-419',
         'publisher': 'Kluwer Academic Publishers',
         'title': 'From logic programming towards multi‚Äêagent systems',
         'url': 'https://link.springer.com/article/10.1023/A:1018934223383',
         'volume': '25',
         'year': '1999'},
 'citations_link': '/scholar?cites=15219924353082016921',
 'cites_per_year': {1999: 2,
                    2000: 9,
                    2001: 13,
                    2002: 29,
                    2003: 14,
                    2004: 23,
                    2005: 14,
                    2006: 9,
                    2007: 15,
                    2008: 12,
                    2009: 9,
                    2010: 14,
                    2011: 6,
                    2012: 7,
                    2013: 8,
                    2014: 3,
                    2015: 6,
                    2016: 5,
                    2017: 1,
                    2018: 5,
                    2019: 4,
                    2020: 1},
 'filled': True,
 'id_citations': 'pvkQAj0AAAAJ:-f6ydRqryjwC',
 'source': 'citations'}
#+end_example
| 1999 | From logic programming towards multi‚Äêagent systems | Annals of Mathematics and Artificial Intelligence |
*** 1996 Abstract argumentation :filled:
#+begin_example
{'bib': {'abstract': 'In this paper we explore the thesis that the role of '
                     'argumentation in practical reasoning in general and '
                     'legal reasoning in particular is to justify the use of '
                     'defeasible rules to derive a conclusion in preference to '
                     'the use of other defeasible rules to derive a '
                     'conflicting conclusion. The defeasibility of rules is '
                     'expressed by means of non-provability claims as '
                     'additional conditions of the rules.',
         'author': 'Robert A Kowalski and Francesca Toni',
         'cites': '203',
         'cites_id': '10116175147289536241',
         'pages': '119-140',
         'publisher': 'Springer, Dordrecht',
         'title': 'Abstract argumentation',
         'url': 'https://link.springer.com/chapter/10.1007/978-94-011-5668-4_4',
         'year': '1996'},
 'citations_link': '/scholar?cites=10116175147289536241',
 'cites_per_year': {1997: 4,
                    1998: 5,
                    1999: 9,
                    2000: 13,
                    2001: 9,
                    2002: 12,
                    2003: 7,
                    2004: 7,
                    2005: 11,
                    2006: 10,
                    2007: 17,
                    2008: 11,
                    2009: 13,
                    2010: 6,
                    2011: 5,
                    2012: 7,
                    2013: 8,
                    2014: 9,
                    2015: 5,
                    2016: 9,
                    2017: 10,
                    2018: 10,
                    2019: 1,
                    2020: 3},
 'filled': True,
 'id_citations': 'pvkQAj0AAAAJ:hFOr9nPyWt4C',
 'source': 'citations'}
#+end_example
WARNING: caught exception: <class 'KeyError'>
*** 1983 Logic Programming. :filled:
#+begin_example
{'bib': {'abstract': 'The driving force behind logic programming is the idea '
                     'that a single formalism suffices for both logic and '
                     'computation, and that logic subsumes computation. But '
                     'logic, as this series of volumes proves, is a broad '
                     'church, with many denominations and communities, '
                     'coexisting in varying degrees of harmony. Computing is, '
                     'similarly, made up of many competing approaches and '
                     'divided into largely disjoint areas, such as '
                     'programming, databases, and artificial intelligence. On '
                     'the surface, it might seem that both logic and computing '
                     'suffer from a similar lack of cohesion. But logic is in '
                     'better shape, with well-understood relationships between '
                     'different formalisms. For example, first-order logic '
                     'extends propositional logic, higher-order logic extends '
                     'first-order logic, and modal logic extends classical '
                     'logic. In contrast, in Computing, there is hardly any '
                     'relationship between, for example, Turing machines as a '
                     'model of computation and relational algebra as a model '
                     'of database queries. Logic programming aims to remedy '
                     'this deficiency and to unify different areas of '
                     'computing by exploiting the greater generality of logic. '
                     'It does so by building upon and extending one of the '
                     'simplest, yet most powerful logics imaginable, namely '
                     'the logic of Horn clauses. In this paper, which extends '
                     'a shorter history of logic programming (LP) in the 1970s '
                     '[Kowalski, 2013], I present a personal view of the '
                     'history of LP, focusing on logical, rather than on '
                     'technological issues. I assume that the reader has some '
                     'background in logic, but not necessarily in LP. As a '
                     'consequence, this paper might also serve a secondary '
                     'function, as a survey of some of the main developments '
                     'in the logic ‚Ä¶',
         'author': 'Robert A Kowalski and Kenneth A Bowen',
         'cites': '177',
         'cites_id': '14278852496697987861',
         'eprint': 'https://citeseerx.ist.psu.edu/viewdoc/download?doi=10.1.1.693.5563&rep=rep1&type=pdf',
         'pages': '133-145',
         'title': 'Logic Programming.',
         'url': 'https://citeseerx.ist.psu.edu/viewdoc/download?doi=10.1.1.693.5563&rep=rep1&type=pdf',
         'year': '1983'},
 'citations_link': '/scholar?cites=14278852496697987861',
 'cites_per_year': {1982: 1,
                    1983: 3,
                    1984: 9,
                    1985: 9,
                    1986: 21,
                    1987: 15,
                    1988: 14,
                    1989: 10,
                    1990: 8,
                    1991: 12,
                    1992: 7,
                    1993: 3,
                    1994: 1,
                    1995: 4,
                    1996: 4,
                    1997: 1,
                    1998: 1,
                    1999: 2,
                    2000: 1,
                    2001: 1,
                    2002: 3,
                    2003: 5,
                    2004: 3,
                    2005: 1,
                    2006: 2,
                    2007: 2,
                    2008: 1,
                    2009: 4,
                    2010: 3,
                    2011: 5,
                    2012: 6,
                    2013: 6,
                    2014: 4},
 'filled': True,
 'id_citations': 'pvkQAj0AAAAJ:Ak0FvsSvgGUC',
 'source': 'citations'}
#+end_example
WARNING: caught exception: <class 'KeyError'>
*** 1993 An assumption-based framework for non-monotonic reasoning :filled:
#+begin_example
{'bib': {'abstract': 'The notion of assumption-based framework generalises and '
                     'refines the use of abduction to give a formalisation of '
                     'non-monotonic reasoning. In this framework, a sentence '
                     'is a non-monotonic consequence of a theory if it can be '
                     'derived monotonically from a theory extended by means of '
                     'acceptable assumptions. The notion of acceptability for '
                     'such assumptions is formulated in terms of their ability '
                     'successfully to" counterattack" any" attacking" set of '
                     'assumptions. One set of assumptions is said to" attack" '
                     'another if the first set monotonically implies a '
                     'consequence which is inconsistent with an assumption in '
                     'the second set. This argumentation-theoretic criterion '
                     'of acceptability is based on notions first introduced '
                     'for logic programming and used to give a unified account '
                     'of such diverse semantics for logic programming as '
                     'stable models, partial stable models, preferred '
                     'extensions, stable theories, well-founded semantics, and '
                     'stationary semantics. The new framework makes it '
                     'possible to generalise various improvements first '
                     'introduced for the semantics of logic programming and to '
                     'apply these improvements to other formalisms for '
                     'non-monotonic reasoning. The paper investigates '
                     'applications of the framework to logic programming, '
                     'abductive logic programming, logic programs extended '
                     'with" classical" negation, default logic, autoepistemic '
                     'logic, and non-monotonic modal logic.',
         'author': 'Andrei Bondarenko and Francesca Toni and Robert A Kowalski',
         'cites': '167',
         'cites_id': '9184899856778731210',
         'eprint': 'http://citeseerx.ist.psu.edu/viewdoc/download?doi=10.1.1.37.5099&rep=rep1&type=pdf',
         'journal': 'Logic programming and non-monotonic reasoning (Lisbon, '
                    '1993)',
         'pages': '171-189',
         'title': 'An assumption-based framework for non-monotonic reasoning',
         'url': 'http://books.google.com/books?hl=en&lr=&id=fiYIwgs__f8C&oi=fnd&pg=PA171&dq=info:yh7VjMFRd38J:scholar.google.com&ots=HLfBeJMkcV&sig=lj-fg_KZG821F6KTcpDpbw_7TjU',
         'year': '1993'},
 'citations_link': '/scholar?cites=9184899856778731210',
 'cites_per_year': {1993: 2,
                    1994: 9,
                    1995: 18,
                    1996: 10,
                    1997: 9,
                    1998: 4,
                    1999: 5,
                    2000: 9,
                    2001: 1,
                    2002: 1,
                    2003: 1,
                    2004: 1,
                    2005: 2,
                    2006: 8,
                    2007: 9,
                    2008: 10,
                    2009: 7,
                    2010: 4,
                    2011: 5,
                    2012: 3,
                    2013: 11,
                    2014: 4,
                    2015: 7,
                    2016: 11,
                    2017: 7,
                    2018: 6,
                    2019: 2},
 'filled': True,
 'id_citations': 'pvkQAj0AAAAJ:RHpTSmoSYBkC',
 'source': 'citations'}
#+end_example
| 1993 | An assumption-based framework for non-monotonic reasoning | Logic programming and non-monotonic reasoning (Lisbon, 1993) |
*** 1979 Logic and semantic networks :filled:
#+begin_example
{'bib': {'abstract': 'An extended form of semantic network is defined, which '
                     'can be regarded as a syntactic variant of the clausal '
                     'form of logic. By virtue of its relationship with logic, '
                     'the extended semantic network is provided with a precise '
                     'semantics, inference rules, and a procedural '
                     'interpretation. On the other hand, by regarding semantic '
                     'networks as an abstract data structure for the '
                     'representation of clauses, we provide a theorem-prover '
                     'with a potentially useful indexing scheme and '
                     'path-following strategy for guiding the search for a '
                     'proof.',
         'author': 'Amaryllis Deliyanni and Robert A Kowalski',
         'cites': '156',
         'cites_id': '7101193796924079165',
         'eprint': 'http://citeseerx.ist.psu.edu/viewdoc/download?doi=10.1.1.133.575&rep=rep1&type=pdf',
         'journal': 'Communications of the ACM',
         'number': '3',
         'pages': '184-192',
         'publisher': 'ACM',
         'title': 'Logic and semantic networks',
         'url': 'https://dl.acm.org/doi/abs/10.1145/359080.359090',
         'volume': '22',
         'year': '1979'},
 'citations_link': '/scholar?cites=7101193796924079165',
 'cites_per_year': {1981: 4,
                    1982: 4,
                    1983: 5,
                    1984: 7,
                    1985: 10,
                    1986: 15,
                    1987: 4,
                    1988: 15,
                    1989: 4,
                    1990: 9,
                    1991: 6,
                    1992: 1,
                    1993: 3,
                    1994: 10,
                    1995: 2,
                    1996: 1,
                    1997: 1,
                    1998: 4,
                    1999: 1,
                    2000: 1,
                    2001: 5,
                    2002: 2,
                    2003: 3,
                    2004: 3,
                    2005: 4,
                    2006: 9,
                    2007: 5,
                    2008: 2,
                    2009: 3,
                    2010: 1,
                    2011: 2,
                    2012: 2,
                    2013: 1},
 'filled': True,
 'id_citations': 'pvkQAj0AAAAJ:TQgYirikUcIC',
 'source': 'citations'}
#+end_example
| 1979 | Logic and semantic networks | Communications of the ACM |
*** 1978 Logic for data description :filled:
#+begin_example
{'bib': {'abstract': 'Logic is useful both for describing static data bases as '
                     'well as for processing data bases which change. Both the '
                     'static and dynamic management of data bases depends upon '
                     'the form of definitions: whether data is defined by '
                     'means of complete if-and-only-if definitions or only by '
                     'means of the if-halves, whether the only-if half of an '
                     'if-and-only-if definition is stated explicitly or is '
                     'assumed implicitly, and whether the only-if assumption '
                     'is understood as a statement of the object language (in '
                     'the data base) or as a statement of the meta-language '
                     '(about the data base). Similar considerations apply to '
                     'the processing of computer programs. When logic is used '
                     'to describe information, the conventional distinction '
                     'between data bases and programs no longer applies.',
         'author': 'Robert Kowalski',
         'cites': '154',
         'cites_id': '1146034259546335595',
         'pages': '77-103',
         'publisher': 'Springer, Boston, MA',
         'title': 'Logic for data description',
         'url': 'https://link.springer.com/chapter/10.1007/978-1-4684-3384-5_4',
         'year': '1978'},
 'citations_link': '/scholar?cites=1146034259546335595',
 'cites_per_year': {1982: 5,
                    1983: 4,
                    1984: 6,
                    1985: 7,
                    1986: 11,
                    1987: 5,
                    1988: 5,
                    1989: 7,
                    1990: 8,
                    1991: 10,
                    1992: 9,
                    1993: 10,
                    1994: 3,
                    1995: 4,
                    1996: 6,
                    1997: 2,
                    1998: 1,
                    1999: 2,
                    2000: 3,
                    2001: 4,
                    2002: 2,
                    2003: 3,
                    2004: 1,
                    2005: 7,
                    2006: 5,
                    2007: 3,
                    2008: 1,
                    2009: 5,
                    2010: 3,
                    2011: 2,
                    2012: 2,
                    2013: 1,
                    2014: 1,
                    2015: 1,
                    2016: 1},
 'filled': True,
 'id_citations': 'pvkQAj0AAAAJ:R3hNpaxXUhUC',
 'source': 'citations'}
#+end_example
WARNING: caught exception: <class 'KeyError'>
*** 2011 Computational logic and human thinking: how to be artificially intelligent :filled:
#+begin_example
{'bib': {'abstract': 'The practical benefits of computational logic need not '
                     'be limited to mathematics and computing. As this book '
                     'shows, ordinary people in their everyday lives can '
                     'profit from the recent advances that have been developed '
                     'for artificial intelligence. The book draws upon related '
                     'developments in various fields from philosophy to '
                     'psychology and law. It pays special attention to the '
                     'integration of logic with decision theory, and the use '
                     'of logic to improve the clarity and coherence of '
                     'communication in natural languages such as English. This '
                     'book is essential reading for teachers and researchers '
                     'who may be out of touch with the latest developments in '
                     'computational logic. It will also be useful in any '
                     'undergraduate course that teaches practical thinking, '
                     'problem solving or communication skills. Its informal '
                     'presentation makes the book accessible to readers from '
                     'any background, but optional, more formal, chapters are '
                     'also included for those who are more technically '
                     'oriented.',
         'author': 'Robert Kowalski',
         'cites': '147',
         'cites_id': '5272393076230814909',
         'eprint': 'http://104.236.162.154/PHI_319_420/Kyotoslides_long.pdf',
         'publisher': 'Cambridge University Press',
         'title': 'Computational logic and human thinking: how to be '
                  'artificially intelligent',
         'url': 'http://books.google.com/books?hl=en&lr=&id=lRvWWjs8vu8C&oi=fnd&pg=PA9&dq=info:vXz3iJFNK0kJ:scholar.google.com&ots=Na9YfXSygV&sig=2DjR4icJkc-OHlz1z7eQ8AeKZWY',
         'year': '2011'},
 'citations_link': '/scholar?cites=5272393076230814909',
 'cites_per_year': {2010: 1,
                    2011: 4,
                    2012: 15,
                    2013: 17,
                    2014: 11,
                    2015: 20,
                    2016: 18,
                    2017: 22,
                    2018: 12,
                    2019: 12,
                    2020: 9},
 'filled': True,
 'id_citations': 'pvkQAj0AAAAJ:CHSYGLWDkRkC',
 'source': 'citations'}
#+end_example
WARNING: caught exception: <class 'KeyError'>
*** 1987 Integrity checking in deductive databases :filled:
#+begin_example
{'bib': {'abstract': 'We describe the theory and implementation of a general '
                     'theorem-proving technique for checking integrity of '
                     'deductive databases recently proposed by Sadri and '
                     'Kowalski. The method uses an extension of the SLDNF '
                     'proof procedure and achieves the effect of the '
                     'simplification algorithms of Nicolas, Lloyd, Topor et '
                     'al, and Decker by reasoning forwards from the update and '
                     'thus focusing on the relevant parts of the database and '
                     'the relevant constraints.',
         'author': 'Robert Kowalski and Fariba Sadri and Paul Soper',
         'cites': '147',
         'cites_id': '2346337543286435132',
         'title': 'Integrity checking in deductive databases',
         'url': 'http://citeseerx.ist.psu.edu/viewdoc/summary?doi=10.1.1.133.3268',
         'year': '1987'},
 'citations_link': '/scholar?cites=2346337543286435132',
 'cites_per_year': {1988: 4,
                    1989: 6,
                    1990: 6,
                    1991: 12,
                    1992: 12,
                    1993: 10,
                    1994: 15,
                    1995: 7,
                    1996: 5,
                    1997: 8,
                    1998: 4,
                    1999: 3,
                    2000: 3,
                    2001: 4,
                    2002: 1,
                    2003: 1,
                    2004: 3,
                    2005: 4,
                    2006: 5,
                    2007: 3,
                    2008: 5,
                    2009: 3,
                    2010: 6,
                    2011: 4,
                    2012: 6,
                    2013: 3,
                    2014: 2,
                    2015: 1},
 'filled': True,
 'id_citations': 'pvkQAj0AAAAJ:_Qo2XoVZTnwC',
 'source': 'citations'}
#+end_example
WARNING: caught exception: <class 'KeyError'>
*** 1968 Semantic trees in automatic theorem proving :filled:
#+begin_example
{'bib': {'abstract': 'We investigate in this paper the application of am '
                     'odified version of semantic trees (Robinson 1968) to the '
                     'problem of finding efficient rules of proof for '
                     'mechanical theorem-proving. It is not our purpose to '
                     'develop the general theory of these trees. We '
                     'concentrate instead on those cases of semantic tree '
                     'construction where we have found improvements of '
                     'existing proof strategies. The paper is virtually '
                     'self-contained and to the extent that it is not, '
                     "Robinson's review paper (1967) contains a clear "
                     'exposition of the necessary preliminaries. After dealing '
                     'with notational matters we define a notion of semantic '
                     'tree for the predicate calculus without equality. A '
                     "version of Herbrand's theorem is then proved. The "
                     'completeness of clash resolution (Robinson 1967) is '
                     'proved and it is shown that restrictions may be placed '
                     'upon the generation of all factors when resolving a '
                     'latent clash. The completeness of binary resolution is '
                     'proved by specializing the notion of clash, and an '
                     'ordering principle is shown to be complete when used in '
                     "conjunction with it. Slagle's AM-clashes (1967) are "
                     'shown to be complete by another specialization, and some '
                     "clarification is presented of the r√¥le of Slagle's model "
                     'M at the general level. A further specialization of '
                     'AM-clashes is then made to the case of hyper-resolution '
                     '(Robinson 1965a) and renaming (Meltzer 1966). It is '
                     'shown in this case how the restrictions on generating '
                     "factors and Slagle's A-ordering can be combined to give "
                     'a highly efficient refutation procedure. Moreover, '
                     'additional restrictions on the generation of factors are '
                     'obtained for all cases of AM-clashes by employing '
                     'throughout a modified notion of A-ordering. In the ‚Ä¶',
         'author': 'Robert Kowalski and Patrick J Hayes',
         'cites': '141',
         'cites_id': '12522086353130377770',
         'publisher': 'Edinburgh University',
         'title': 'Semantic trees in automatic theorem proving',
         'url': 'http://scholar.google.com/scholar?cluster=12522086353130377770&hl=en&oi=scholarr',
         'year': '1968'},
 'citations_link': '/scholar?cites=12522086353130377770',
 'cites_per_year': {1982: 2,
                    1983: 5,
                    1984: 1,
                    1985: 3,
                    1986: 2,
                    1987: 2,
                    1988: 2,
                    1989: 2,
                    1990: 1,
                    1991: 2,
                    1992: 4,
                    1993: 2,
                    1994: 4,
                    1995: 4,
                    1996: 7,
                    1997: 3,
                    1998: 6,
                    1999: 3,
                    2000: 3,
                    2001: 3,
                    2002: 5,
                    2003: 2,
                    2004: 2,
                    2005: 6,
                    2006: 1,
                    2007: 3,
                    2008: 6,
                    2009: 1,
                    2010: 1,
                    2011: 2,
                    2012: 1,
                    2013: 3,
                    2014: 2,
                    2015: 5,
                    2016: 4,
                    2017: 3,
                    2018: 2},
 'filled': True,
 'id_citations': 'pvkQAj0AAAAJ:4JMBOYKVnBMC',
 'source': 'citations'}
#+end_example
WARNING: caught exception: <class 'KeyError'>
*** 1990 Problems and promises of computational logic :filled:
#+begin_example
{'bib': {'abstract': 'The ultimate goal of the Basic Research Action, '
                     'Compulog, is to develop the use of logic for all aspects '
                     'of computation. This includes not only the development '
                     'of a single logic for representing programs, program '
                     'specifications, databases, and knowledge representations '
                     'in artificial intelligence, but also the development of '
                     'logic-based management tools. I shall argue that, for '
                     'these purposes, two major extensions of logic '
                     'programming are needed ‚Äî abduction and metalevel '
                     'reasoning. I shall also argue that extensions of full '
                     'first-order logic may not be necessary.',
         'author': 'Robert A Kowalski',
         'cites': '138',
         'cites_id': '14163638198449612100',
         'pages': '1-36',
         'publisher': 'Springer, Berlin, Heidelberg',
         'title': 'Problems and promises of computational logic',
         'url': 'https://link.springer.com/chapter/10.1007/978-3-642-76274-1_1',
         'year': '1990'},
 'citations_link': '/scholar?cites=14163638198449612100',
 'cites_per_year': {1991: 8,
                    1992: 8,
                    1993: 17,
                    1994: 17,
                    1995: 11,
                    1996: 5,
                    1997: 9,
                    1998: 5,
                    1999: 9,
                    2000: 5,
                    2001: 5,
                    2002: 3,
                    2003: 3,
                    2004: 4,
                    2005: 9,
                    2006: 2,
                    2007: 4,
                    2008: 1,
                    2009: 1,
                    2010: 2,
                    2011: 1,
                    2012: 2},
 'filled': True,
 'id_citations': 'pvkQAj0AAAAJ:e5wmG9Sq2KIC',
 'source': 'citations'}
#+end_example
WARNING: caught exception: <class 'KeyError'>
*** 1996 Towards a unified agent architecture that combines rationality with reactivity :filled:
#+begin_example
{'bib': {'abstract': 'In this paper we analyse the differences between '
                     'rational and reactive agent architectures, and propose a '
                     'uniform agent architecture that aims to capture both as '
                     'special cases. For this purpose we employ a proof '
                     "procedure, to control the agent's behaviour, which "
                     'combines definitions with integrity constraints. The '
                     'proof procedure is general, and has been shown elsewhere '
                     'to unify abductive logic programming, constraint logic '
                     'programming and semantic query optimisation. We also '
                     'employ a resource-bounded formalisation of the proof '
                     "procedure which allows the agent's reasoning to be "
                     'interrupted and resumed, so that observations and '
                     'actions can be performed.',
         'author': 'Robert Kowalski and Fariba Sadri',
         'cites': '120',
         'cites_id': '11357030229210106119',
         'eprint': 'https://www.researchgate.net/profile/Robert_Kowalski5/publication/225214858_Towards_a_unified_agent_architecture_that_combines_rationality_with_reactivity/links/53da3cb20cf2e38c6336653a/Towards-a-unified-agent-architecture-that-combines-rationality-with-reactivity.pdf',
         'pages': '135-149',
         'publisher': 'Springer, Berlin, Heidelberg',
         'title': 'Towards a unified agent architecture that combines '
                  'rationality with reactivity',
         'url': 'https://link.springer.com/chapter/10.1007/BFb0031739',
         'year': '1996'},
 'citations_link': '/scholar?cites=11357030229210106119',
 'cites_per_year': {1996: 2,
                    1997: 5,
                    1998: 15,
                    1999: 12,
                    2000: 2,
                    2001: 11,
                    2002: 11,
                    2003: 13,
                    2004: 6,
                    2005: 4,
                    2006: 3,
                    2007: 9,
                    2008: 4,
                    2009: 2,
                    2010: 6,
                    2011: 1,
                    2012: 6,
                    2013: 1,
                    2014: 1,
                    2015: 1,
                    2016: 3,
                    2017: 1},
 'filled': True,
 'id_citations': 'pvkQAj0AAAAJ:j3f4tGmQtD8C',
 'source': 'citations'}
#+end_example
WARNING: caught exception: <class 'KeyError'>
*** 1984 The relation between logic programming and logic specification :filled:
#+begin_example
{'bib': {'abstract': 'Formal logic is widely accepted as a program '
                     'specification language in computing science. It is '
                     'ideally suited to the representation of knowledge and '
                     'the description of problems without regard to the choice '
                     'of programming language. Its use as a specification '
                     'language is compatible not only with conventional '
                     'programming languages but also with programming '
                     'languages based entirely on logic itself. In this paper '
                     'I shall investigate the relation that holds when both '
                     'programs and program specifications are expressed in '
                     'formal logic. In many cases, when a specification '
                     'completely defines the relations to be computed, there '
                     'is no syntactic distinction between specification and '
                     'program. Moreover the same mechanism that is used to '
                     'execute logic programs, namely automated deduction, can '
                     'also be used to execute logic specifications. Thus all '
                     'relations defined by complete specifications are '
                     'executable. The only ‚Ä¶',
         'author': 'R Kowalski',
         'cites': '108',
         'cites_id': '10135945322553499618',
         'eprint': 'http://www.doc.ic.ac.uk/~rak/papers/logic%20programming%20and%20specification.pdf',
         'journal': 'Philosophical Transactions of the Royal Society of '
                    'London. Series A, Mathematical and Physical Sciences',
         'number': '1522',
         'pages': '345-361',
         'publisher': 'The Royal Society',
         'title': 'The relation between logic programming and logic '
                  'specification',
         'url': 'https://royalsocietypublishing.org/doi/abs/10.1098/rsta.1984.0064',
         'volume': '312',
         'year': '1984'},
 'citations_link': '/scholar?cites=10135945322553499618',
 'cites_per_year': {1985: 1,
                    1986: 2,
                    1987: 9,
                    1988: 3,
                    1989: 10,
                    1990: 9,
                    1991: 8,
                    1992: 9,
                    1993: 4,
                    1994: 3,
                    1995: 2,
                    1996: 4,
                    1997: 8,
                    1998: 1,
                    1999: 1,
                    2000: 3,
                    2001: 2,
                    2002: 1,
                    2003: 4,
                    2004: 1,
                    2005: 3,
                    2006: 3,
                    2007: 3,
                    2008: 3,
                    2009: 2,
                    2010: 2,
                    2011: 2,
                    2012: 1,
                    2013: 1,
                    2014: 2},
 'filled': True,
 'id_citations': 'pvkQAj0AAAAJ:TFP_iSt0sucC',
 'source': 'citations'}
#+end_example
| 1984 | The relation between logic programming and logic specification | Philosophical Transactions of the Royal Society of London. Series A, Mathematical and Physical Sciences |
*** 1974 Logic for problem solving :filled:
#+begin_example
{'bib': {'abstract': 'It has been fascinating to reflect and comment on the '
                     'way the topics addressed in this book have developed '
                     'over the past 40 years or so, since the first version of '
                     'the book appeared as lecture notes in 1974. Many of the '
                     'developments have had an impact, not only in computing, '
                     'but also more widely in such fields as mathematical, '
                     'philosophical and informal logic. But just as '
                     'interesting (and perhaps more important) some of these '
                     'developments have taken different directions from the '
                     'ones that I anticipated at the time.',
         'author': 'Robert Kowalski',
         'cites': '102',
         'cites_id': '12721926988644639247',
         'eprint': 'https://www.researchgate.net/profile/Robert_Kowalski5/publication/312526241_LOGIC_FOR_PROBLEM_SOLVING_REVISITED/links/5880aaed45851503b6edd48c.pdf',
         'pages': '8-9',
         'publisher': 'Department of Computational Logic, Edinburgh University',
         'title': 'Logic for problem solving',
         'url': 'https://www.researchgate.net/profile/Robert_Kowalski5/publication/312526241_LOGIC_FOR_PROBLEM_SOLVING_REVISITED/links/5880aaed45851503b6edd48c.pdf',
         'year': '1974'},
 'citations_link': '/scholar?cites=12721926988644639247',
 'cites_per_year': {1980: 7,
                    1981: 5,
                    1982: 2,
                    1983: 1,
                    1984: 2,
                    1985: 2,
                    1986: 2,
                    1987: 2,
                    1988: 2,
                    1989: 3,
                    1990: 2,
                    1991: 2,
                    1992: 3,
                    1993: 1,
                    1994: 1,
                    1995: 1,
                    1996: 1,
                    1997: 1,
                    1998: 1,
                    1999: 2,
                    2000: 1,
                    2001: 3,
                    2002: 1,
                    2003: 3,
                    2004: 4,
                    2005: 2,
                    2006: 1,
                    2007: 2,
                    2008: 1,
                    2009: 1},
 'filled': True,
 'id_citations': 'pvkQAj0AAAAJ:ML0RJ9NH7IQC',
 'source': 'citations'}
#+end_example
WARNING: caught exception: <class 'KeyError'>
*** 1970 Search strategies for theorem proving :filled:
#+begin_example
{'bib': {'abstract': 'In particular the admissibility and optimality theorems '
                     'of Hart, Nilsson and Raphael generalize for the classes '
                     'D and Du of diagonal search strategies for abstract '
                     'theorem-proving problems. In addition the subclass Du of '
                     'D is shown to be optimal for 2. Implementation of '
                     'diagonal search is treated in some detail for '
                     'theorem-proving by resolution rules (Robinson 1965).',
         'author': 'Robert Kowalski',
         'cites': '97',
         'cites_id': '4116793782681118159',
         'journal': 'Machine intelligence',
         'pages': '181-201',
         'publisher': 'American-Elsevier',
         'title': 'Search strategies for theorem proving',
         'url': 'http://scholar.google.com/scholar?cluster=4116793782681118159&hl=en&oi=scholarr',
         'volume': '5',
         'year': '1970'},
 'citations_link': '/scholar?cites=4116793782681118159',
 'cites_per_year': {1982: 2,
                    1983: 4,
                    1984: 3,
                    1985: 3,
                    1986: 5,
                    1987: 3,
                    1988: 1,
                    1989: 4,
                    1990: 1,
                    1991: 1,
                    1992: 1,
                    1993: 3,
                    1994: 2,
                    1995: 1,
                    1996: 3,
                    1997: 2,
                    1998: 2,
                    1999: 2,
                    2000: 1,
                    2001: 1,
                    2002: 3,
                    2003: 1,
                    2004: 1,
                    2005: 2,
                    2006: 1,
                    2007: 1},
 'filled': True,
 'id_citations': 'pvkQAj0AAAAJ:bEWYMUwI8FkC',
 'source': 'citations'}
#+end_example
| 1970 | Search strategies for theorem proving | Machine intelligence |
*** 1995 Using meta-logic to reconcile reactive with rational agents :filled:
#+begin_example
{'bib': {'abstract': 'In this paper I outline an attempt to reconcile the '
                     'traditional Arti cial Intelligence notion of a '
                     'logic-based rational agent with the contrary notion of a '
                     'reactive agent that acts\\instinctively" in response to '
                     'conditions that arise in its environment. For this '
                     'purpose, I will use the tools of meta-logic programming '
                     'to de ne the observation-thought-action cycle of an '
                     'agent that combines the ability to perform '
                     'resource-bounded reasoning, which can be interrupted and '
                     'resumed any time, with the ability to act when it is '
                     'necessary.',
         'author': 'Robert A Kowalski',
         'cites': '89',
         'cites_id': '2712974609327979699',
         'eprint': 'https://www.researchgate.net/profile/Robert_Kowalski5/publication/2678306_Using_Meta-Logic_to_Reconcile_Reactive_With_Rational_Agents/links/5440fb780cf2a6a049a377fe/Using-Meta-Logic-to-Reconcile-Reactive-With-Rational-Agents.pdf',
         'journal': 'Meta-logics and logic programming',
         'pages': '227-242',
         'publisher': 'MIT Press Cambridge, MA',
         'title': 'Using meta-logic to reconcile reactive with rational agents',
         'url': 'https://www.researchgate.net/profile/Robert_Kowalski5/publication/2678306_Using_Meta-Logic_to_Reconcile_Reactive_With_Rational_Agents/links/5440fb780cf2a6a049a377fe/Using-Meta-Logic-to-Reconcile-Reactive-With-Rational-Agents.pdf',
         'year': '1995'},
 'citations_link': '/scholar?cites=2712974609327979699',
 'cites_per_year': {1995: 1,
                    1996: 10,
                    1997: 8,
                    1998: 5,
                    1999: 10,
                    2000: 7,
                    2001: 7,
                    2002: 5,
                    2003: 1,
                    2004: 4,
                    2005: 2,
                    2006: 4,
                    2007: 6,
                    2008: 4,
                    2009: 1,
                    2010: 2,
                    2011: 2,
                    2012: 3,
                    2013: 1,
                    2014: 3,
                    2015: 2,
                    2016: 1},
 'filled': True,
 'id_citations': 'pvkQAj0AAAAJ:iH-uZ7U-co4C',
 'source': 'citations'}
#+end_example
| 1995 | Using meta-logic to reconcile reactive with rational agents | Meta-logics and logic programming |
*** 1995 Variants of the Event Calculus. :filled:
#+begin_example
{'bib': {'abstract': 'The event calculus was proposed as a formalism for '
                     'reasoning about time and events. Through the years, '
                     'however, a much simpler variant (SEC) of the original '
                     'calculus (EC) has proved more useful in practice. We '
                     'argue that EC has the advantage of being more general '
                     'than SEC, but the disadvantage of being too complex and '
                     'in some cases erroneous. SEC has the advantage of '
                     'simplicity, but the disadvantage of being too '
                     'specialised. This paper has two main objectives. The '
                     'first is to show the formal relationship between the two '
                     'calculi. The second is to propose a new variant (NEC) of '
                     'the event calculus, which is essentially SEC in iff-form '
                     'augmented with integrity constraints, and to argue that '
                     'NEC combines the generality of EC with the simplicity of '
                     'SEC. We argue that NEC also demonstrates the more '
                     'general potential of using theories consisting of '
                     'iff-definitions and integrity constraints as a new logic '
                     'programming paradigm.',
         'author': 'Fariba Sadri and Robert A Kowalski',
         'cites': '80',
         'cites_id': '9977369892463126460',
         'eprint': 'http://www.academia.edu/download/52349219/Variants_of_the_Event_Calculus20170328-31360-11zh77m.pdf',
         'pages': '67-81',
         'title': 'Variants of the Event Calculus.',
         'url': 'http://books.google.com/books?hl=en&lr=&id=vpGEyZWP1dYC&oi=fnd&pg=PA67&dq=info:vCfxCA69dooJ:scholar.google.com&ots=jFWdj5oqcl&sig=v104InO4sI1ysusqAdqV6MzkE9c',
         'year': '1995'},
 'citations_link': '/scholar?cites=9977369892463126460',
 'cites_per_year': {1996: 2,
                    1997: 8,
                    1998: 9,
                    1999: 6,
                    2000: 6,
                    2001: 2,
                    2002: 4,
                    2003: 4,
                    2004: 6,
                    2005: 3,
                    2006: 8,
                    2007: 3,
                    2008: 2,
                    2009: 5,
                    2010: 1,
                    2011: 4,
                    2012: 1,
                    2013: 2,
                    2014: 1,
                    2015: 1},
 'filled': True,
 'id_citations': 'pvkQAj0AAAAJ:isC4tDSrTZIC',
 'source': 'citations'}
#+end_example
WARNING: caught exception: <class 'KeyError'>
*** 2005 The logical way to be artificially intelligent :filled:
#+begin_example
{'bib': {'abstract': 'Abductive logic programming (ALP) can be used to model '
                     'reactive, proactive and pre-active thinking in '
                     'intelligent agents. Reactive thinking assimilates '
                     'observations of changes in the environment, whereas '
                     'proactive thinking reduces goals to sub-goals and '
                     'ultimately to candidate actions. Pre-active thinking '
                     'generates logical consequences of candidate actions, to '
                     'help in deciding between the alternatives. These '
                     'different ways of thinking are compatible with any way '
                     'of deciding between alternatives, including the use of '
                     'both decision theory and heuristics.',
         'author': 'Robert Kowalski',
         'cites': '74',
         'cites_id': '10785521323699289623',
         'eprint': 'ftp://nozdr.ru/biblio/kolxoz/Cs/CsLn/C/Computational%20Logic%20in%20Multi-Agent%20Systems,%206%20conf.(LNCS3900,%20Springer,%202006)(ISBN%203540339965)(443s).pdf#page=17',
         'pages': '1-22',
         'publisher': 'Springer, Berlin, Heidelberg',
         'title': 'The logical way to be artificially intelligent',
         'url': 'https://link.springer.com/chapter/10.1007/11750734_1',
         'year': '2005'},
 'citations_link': '/scholar?cites=10785521323699289623',
 'cites_per_year': {2006: 3,
                    2007: 6,
                    2008: 35,
                    2009: 8,
                    2010: 10,
                    2011: 1,
                    2012: 2,
                    2013: 1,
                    2014: 1,
                    2015: 1,
                    2016: 1,
                    2017: 4,
                    2018: 1},
 'filled': True,
 'id_citations': 'pvkQAj0AAAAJ:O3NaXMp0MMsC',
 'source': 'citations'}
#+end_example
WARNING: caught exception: <class 'KeyError'>
*** 1994 The Situation Calculus and Event Calculus Compared. :filled:
#+begin_example
{'bib': {'abstract': 'The situation calculus and event calculus both formalise '
                     'common sense reasoning about the initiation and '
                     'persistence of properties and relationships over the '
                     'course of time. The main difference is that, whereas the '
                     'situation calculus deals with transitions between global '
                     'situations, the original event calculus was designed to '
                     'deal with the effect of actions on local states of '
                     'affairs. In this paper, to facilitate comparison, we '
                     'deal with a special case of the event calculus where, '
                     'like the situation calculus, actions bring about '
                     'transitions between global situations.',
         'author': 'Robert A Kowalski and Fariba Sadri',
         'cites': '74',
         'cites_id': '2266032003129815139',
         'eprint': 'https://www.researchgate.net/profile/Robert_Kowalski5/publication/221135726_The_Situation_Calculus_and_Event_Calculus_Compared/links/55cddfd408aee19936f80caf.pdf',
         'journal': 'ILPS',
         'pages': '539-553',
         'title': 'The Situation Calculus and Event Calculus Compared.',
         'url': 'https://www.researchgate.net/profile/Robert_Kowalski5/publication/221135726_The_Situation_Calculus_and_Event_Calculus_Compared/links/55cddfd408aee19936f80caf.pdf',
         'volume': '94',
         'year': '1994'},
 'citations_link': '/scholar?cites=2266032003129815139',
 'cites_per_year': {1994: 1,
                    1995: 5,
                    1996: 8,
                    1997: 10,
                    1998: 4,
                    1999: 3,
                    2000: 5,
                    2001: 5,
                    2002: 2,
                    2003: 2,
                    2004: 2,
                    2005: 3,
                    2006: 2,
                    2007: 3,
                    2008: 3,
                    2009: 5,
                    2010: 3,
                    2011: 1,
                    2012: 1,
                    2013: 1,
                    2014: 1,
                    2015: 2,
                    2016: 1},
 'filled': True,
 'id_citations': 'pvkQAj0AAAAJ:k_IJM867U9cC',
 'source': 'citations'}
#+end_example
| 1994 | The Situation Calculus and Event Calculus Compared. | ILPS |
*** 1984 Logic as a database language :filled:
#+begin_example
{'bib': {'abstract': 'The author sketches the application of logic programming '
                     'as a database language. His paper can be divided into '
                     'three parts. The first part (Sections 2-10) reviews main '
                     'features of logic programming. Emphasis is laid on the '
                     'procedural interpretation of logical clauses in PROLOG '
                     'and related languages. The central part (Sections 11-15) '
                     'presents extensions needed to express database queries '
                     'and updates, if a database is regarded as a collection '
                     'of assertions given as logical clauses. A set '
                     'constructor is used to handle set-oriented queries and '
                     'to define aggregations. Database updating is reduced to '
                     'only adding event records with a time parameter. Then '
                     'the database information also being time-tagged is '
                     'derived according to rules and constraints. The '
                     'semantics of these extensions is explained by using a '
                     'combination of object language and metalanguage. In the '
                     'final part (Sections 16-17) theoretical differences ‚Ä¶',
         'author': 'Robert Kowalski',
         'cites': '71',
         'cites_id': '8296352095503033675',
         'pages': '103-132',
         'title': 'Logic as a database language',
         'url': 'https://dl.acm.org/doi/abs/10.5555/4114.4122',
         'year': '1984'},
 'citations_link': '/scholar?cites=8296352095503033675',
 'cites_per_year': {1983: 4,
                    1984: 13,
                    1985: 9,
                    1986: 10,
                    1987: 5,
                    1988: 7,
                    1989: 4,
                    1990: 4,
                    1991: 3,
                    1992: 2,
                    1993: 1,
                    1994: 1,
                    1995: 1,
                    1996: 1,
                    1997: 2,
                    1998: 1},
 'filled': True,
 'id_citations': 'pvkQAj0AAAAJ:maZDTaKrznsC',
 'source': 'citations'}
#+end_example
WARNING: caught exception: <class 'KeyError'>
*** 1995 Legislation as logic programs :filled:
#+begin_example
{'bib': {'abstract': 'The linguistic style in which legislation is normally '
                     'written has many similarities with the language of logic '
                     'programming. However, examples of legal language taken '
                     'from the British Nationality Act 1981, the University of '
                     'Michigan lease termination clause, and the London '
                     'Underground emergency notice suggest several ways in '
                     'which the basic model of logic programming could '
                     'usefully be extended. These extensions include the '
                     'introduction of types, relative clauses, both ordinary '
                     'negation and negation by failure, integrity constraints, '
                     'metalevel reasoning and procedural notation.',
         'author': 'Robert A Kowalski',
         'cites': '70',
         'cites_id': '14104187271526070392',
         'eprint': 'https://www.doc.ic.ac.uk/~rak/papers/law.pdf',
         'pages': '325-356',
         'publisher': 'Springer, Dordrecht',
         'title': 'Legislation as logic programs',
         'url': 'https://link.springer.com/chapter/10.1007/978-94-015-8531-6_14',
         'year': '1995'},
 'citations_link': '/scholar?cites=14104187271526070392',
 'cites_per_year': {1994: 2,
                    1995: 3,
                    1996: 5,
                    1997: 1,
                    1998: 3,
                    1999: 3,
                    2000: 3,
                    2001: 1,
                    2002: 6,
                    2003: 3,
                    2004: 1,
                    2005: 1,
                    2006: 4,
                    2007: 8,
                    2008: 4,
                    2009: 2,
                    2010: 5,
                    2011: 4,
                    2012: 2,
                    2013: 2,
                    2014: 2},
 'filled': True,
 'id_citations': 'pvkQAj0AAAAJ:M3NEmzRMIkIC',
 'source': 'citations'}
#+end_example
WARNING: caught exception: <class 'KeyError'>
*** 1982 Logic as a computer language :filled:
#+begin_example
{'bib': {'author': 'Robert Kowalski',
         'cites': '59',
         'cites_id': '1106679653668471769',
         'publisher': 'Imperial College of Science and Technology. Department '
                      'of Computing',
         'title': 'Logic as a computer language',
         'url': 'http://www.opengrey.eu/item/display/10068/626421',
         'year': '1982'},
 'citations_link': '/scholar?cites=1106679653668471769',
 'cites_per_year': {1981: 1,
                    1982: 6,
                    1983: 3,
                    1984: 2,
                    1985: 5,
                    1986: 6,
                    1987: 5,
                    1988: 5,
                    1989: 3,
                    1990: 2,
                    1991: 1,
                    1992: 1,
                    1993: 1,
                    1994: 1,
                    1995: 2,
                    1996: 1,
                    1997: 1,
                    1998: 2,
                    1999: 1,
                    2000: 1,
                    2001: 2,
                    2002: 1,
                    2003: 2,
                    2004: 1,
                    2005: 1},
 'filled': True,
 'id_citations': 'pvkQAj0AAAAJ:CaZNVDsoPx4C',
 'source': 'citations'}
#+end_example
WARNING: caught exception: <class 'KeyError'>
*** 1990 The use of logical models in legal problem solving :filled:
#+begin_example
{'bib': {'abstract': ' The authors describe a logic programming approach to '
                     'the representation of legislative texts. They consider '
                     'the potential uses of simple systems which incorporate a '
                     'single, fixed interpretation of a text. These include '
                     'assisting in the routine administration of complex areas '
                     'of the law. The authors also consider the possibility of '
                     'constructing more complex systems which incorporate '
                     'several, possibly conflicting interpretations. Such '
                     'systems are needed for dealing with ambiguity and '
                     'vagueness in the law. Moreover, they are more suitable '
                     'than single interpretation systems for helping to test '
                     'proposed legislation and for helping to give citizens '
                     'advice.',
         'author': 'Robert Kowalski and Marek Sergot',
         'cites': '55',
         'cites_id': '18374563604014099809',
         'journal': 'Ratio Juris',
         'number': '2',
         'pages': '201-218',
         'publisher': 'Blackwell Publishing Ltd',
         'title': 'The use of logical models in legal problem solving',
         'url': 'https://onlinelibrary.wiley.com/doi/abs/10.1111/j.1467-9337.1990.tb00058.x',
         'volume': '3',
         'year': '1990'},
 'citations_link': '/scholar?cites=18374563604014099809',
 'cites_per_year': {1989: 1,
                    1990: 2,
                    1991: 8,
                    1992: 2,
                    1993: 5,
                    1994: 1,
                    1995: 6,
                    1996: 6,
                    1997: 1,
                    1998: 2,
                    1999: 1,
                    2000: 3,
                    2001: 1,
                    2002: 3,
                    2003: 3,
                    2004: 1,
                    2005: 3,
                    2006: 2,
                    2007: 1,
                    2008: 1,
                    2009: 2},
 'filled': True,
 'id_citations': 'pvkQAj0AAAAJ:YFjsv_pBGBYC',
 'source': 'citations'}
#+end_example
| 1990 | The use of logical models in legal problem solving | Ratio Juris |
*** 1997 Reconciling the event calculus with the situation calculus :filled:
#+begin_example
{'bib': {'abstract': 'In this paper, to compare the situation calculus and '
                     'event calculus we formulate both as logic programs and '
                     'prove properties of these by reasoning with their '
                     'completions augmented with induction. We thus show that '
                     'the situation calculus and event calculus imply one '
                     'another. Whereas our derivation of the event calculus '
                     'from the situation calculus requires the use of '
                     'induction, our derivation of the situation calculus from '
                     'the event calculus does not. We also show that in '
                     'certain concrete applications, such as the missing car '
                     'example, conclusions that seem to require the use of '
                     'induction in the situation calculus can be derived '
                     'without induction in the event calculus. To compare the '
                     'two calculi, we need to make a number of small '
                     'modifications to both. As a by-product of these '
                     'modifications, the resulting calculi can be used to '
                     'reason about both actual and hypothetical states of '
                     'affairs, including counterfactual ones. We ‚Ä¶',
         'author': 'Robert Kowalski and Fariba Sadri',
         'cites': '53',
         'cites_id': '5778046685521130634',
         'eprint': 'https://www.sciencedirect.com/science/article/pii/S0743106696001379/pdf?md5=51f2bd55021a7905fd90ccf33c1b2639&pid=1-s2.0-S0743106696001379-main.pdf&_valck=1',
         'journal': 'The Journal of Logic Programming',
         'number': '1-3',
         'pages': '39-58',
         'publisher': 'North-Holland',
         'title': 'Reconciling the event calculus with the situation calculus',
         'url': 'https://www.sciencedirect.com/science/article/pii/S0743106696001379',
         'volume': '31',
         'year': '1997'},
 'citations_link': '/scholar?cites=5778046685521130634',
 'cites_per_year': {1997: 1,
                    1998: 2,
                    1999: 2,
                    2000: 1,
                    2001: 2,
                    2002: 1,
                    2003: 1,
                    2004: 2,
                    2005: 6,
                    2006: 5,
                    2007: 5,
                    2008: 7,
                    2009: 5,
                    2010: 2,
                    2011: 2,
                    2012: 1,
                    2013: 2,
                    2014: 2,
                    2015: 1,
                    2016: 3},
 'filled': True,
 'id_citations': 'pvkQAj0AAAAJ:blknAaTinKkC',
 'source': 'citations'}
#+end_example
| 1997 | Reconciling the event calculus with the situation calculus | The Journal of Logic Programming |
*** 1998 Executing suspended logic programs :filled:
#+begin_example
{'bib': {'abstract': 'We present an extension of Logic Programming (LP) which, '
                     'in addition to ordinary LP clauses, also includes '
                     'integrity constraints, explicit representation of '
                     'disjunction in the bodies of clauses and in goals, and '
                     'suspension of atoms as in concurrent logic languages. '
                     'The resulting framework aims to unify Constraint Logic '
                     'Programming (CLP), Abductive Logic Programming (ALP) and '
                     'Semantic Query Optimisation (SQO) in deductive '
                     'databases. We present a proof procedure for the new '
                     'framework, simplifying and generalising previously '
                     'proposed proof procedures for ALP. We discuss '
                     'applications of the framework, formulating traditional '
                     'problems from LP, ALP, CLP and SQO.',
         'author': 'Robert A Kowalski and Francesca Toni and Gerhard Wetzel',
         'cites': '52',
         'cites_id': '6736226704179465978',
         'eprint': 'https://www.researchgate.net/profile/Francesca_Toni/publication/2505501_Executing_Suspended_Logic_Programs/links/02e7e5176c2466419a000000/Executing-Suspended-Logic-Programs.pdf',
         'journal': 'Fundamenta Informaticae',
         'number': '3',
         'pages': '203-224',
         'publisher': 'IOS Press',
         'title': 'Executing suspended logic programs',
         'url': 'https://content.iospress.com/articles/fundamenta-informaticae/fi34-3-01',
         'volume': '34',
         'year': '1998'},
 'citations_link': '/scholar?cites=6736226704179465978',
 'cites_per_year': {1997: 1,
                    1998: 3,
                    1999: 3,
                    2000: 3,
                    2001: 5,
                    2002: 4,
                    2003: 3,
                    2004: 4,
                    2005: 5,
                    2006: 1,
                    2007: 3,
                    2008: 4,
                    2009: 4,
                    2010: 2,
                    2011: 1,
                    2012: 2,
                    2013: 1,
                    2014: 1,
                    2015: 1,
                    2016: 1},
 'filled': True,
 'id_citations': 'pvkQAj0AAAAJ:hMod-77fHWUC',
 'source': 'citations'}
#+end_example
| 1998 | Executing suspended logic programs | Fundamenta Informaticae |
*** 1991 A Metalogic Programming Approach to multiagent knowledge and belief' :filled:
#+begin_example
{'bib': {'abstract': 'We investigate, within a logic programming framework, '
                     'the use of the provability predicate demo (A, P) to '
                     'represent that an agent named A be-lieves a sentence '
                     'named P. This use of the provability predicate extends '
                     'its more usual metaprogramming applications and '
                     'motivates its use within an amalgamation of object '
                     'language and metalanguage. We study the application of '
                     'the amalgamated logic programming language to the wise '
                     'man problem in detail.',
         'author': 'RA Kowalski and Jin-Sang Kim',
         'cites': '49',
         'cites_id': '8899417824177522442',
         'eprint': 'https://pdfs.semanticscholar.org/b82b/ab27f5d1c857decc905b686ce331afe61ae6.pdf',
         'journal': 'Artificial intelligence and mathematical theory of '
                    'computation',
         'pages': '231-246',
         'title': 'A Metalogic Programming Approach to multiagent knowledge '
                  "and belief'",
         'url': 'http://books.google.com/books?hl=en&lr=&id=6F99T53jYbgC&oi=fnd&pg=PA231&dq=info:CofhJVwVgXsJ:scholar.google.com&ots=5S7acL4M4x&sig=XV7TLS7-QY8MivWuVt5VdtoQX88',
         'year': '1991'},
 'citations_link': '/scholar?cites=8899417824177522442',
 'cites_per_year': {1991: 1,
                    1992: 2,
                    1993: 2,
                    1994: 7,
                    1995: 2,
                    1996: 2,
                    1997: 3,
                    1998: 3,
                    1999: 1,
                    2000: 4,
                    2001: 2,
                    2002: 3,
                    2003: 4,
                    2004: 1,
                    2005: 1,
                    2006: 2,
                    2007: 2,
                    2008: 2,
                    2009: 2,
                    2010: 1,
                    2011: 1,
                    2012: 1},
 'filled': True,
 'id_citations': 'pvkQAj0AAAAJ:JV2RwH3_ST0C',
 'source': 'citations'}
#+end_example
| 1991 | A Metalogic Programming Approach to multiagent knowledge and belief' | Artificial intelligence and mathematical theory of computation |
*** 1989 The treatment of negation in logic programs for representing legislation :filled:
#+begin_example
{'bib': {'abstract': 'Logic programs represent knowledge in the form of '
                     'implications A if B 1 and‚Ä¶ B n, n‚â• 0 where the '
                     'conclusion A is an atomic formula and each condition B i '
                     'is either an atomic formula or the negation of an atomic '
                     'formula. Any variables are assumed to be universally '
                     'quantified, with a scope which is the entire sentence. A '
                     'negated condition ‚Äúnot A i‚Äù is deemed to hold if the '
                     'corresponding positive condition A i can be shown to '
                     'fail to hold. This interpretation of negative conditions '
                     'is called negation by failure (NBF)[Cl 78]. It has the '
                     'characteristic that only the positive ‚Äúif-half‚Äù of a '
                     'definition needs to be given explicity. The negative '
                     '‚Äúonly-if‚Äù half is given implicitly by NBF.',
         'author': 'Robert Kowalski',
         'cites': '48',
         'cites_id': '459157097267110730',
         'eprint': 'http://www.doc.ic.ac.uk/~rak/papers/negation%20legislation.pdf',
         'pages': '11-15',
         'title': 'The treatment of negation in logic programs for '
                  'representing legislation',
         'url': 'https://dl.acm.org/doi/abs/10.1145/74014.74016',
         'year': '1989'},
 'citations_link': '/scholar?cites=459157097267110730',
 'cites_per_year': {1989: 1,
                    1990: 2,
                    1991: 6,
                    1992: 2,
                    1993: 6,
                    1994: 2,
                    1995: 3,
                    1996: 4,
                    1997: 2,
                    1998: 2,
                    1999: 1,
                    2000: 1,
                    2001: 1,
                    2002: 2,
                    2003: 3,
                    2004: 2,
                    2005: 1,
                    2006: 1,
                    2007: 1,
                    2008: 2,
                    2009: 1,
                    2010: 1},
 'filled': True,
 'id_citations': 'pvkQAj0AAAAJ:NMxIlDl6LWMC',
 'source': 'citations'}
#+end_example
WARNING: caught exception: <class 'KeyError'>
*** 1994 Logic without model theory :filled:
#+begin_example
{'bib': {'abstract': 'Arguably, model theory serves two main functions:(1) to '
                     'explain the relationship between language and '
                     'experience, and (2) to specify the notion of logical '
                     'consequence. In this paper I shall propose the notion '
                     "ofknowledge assimilation', the assimilation of new "
                     'information into a knowledge base, as an alternative '
                     'understanding of the way in which a knowledge base '
                     'formulated in logic relates to externally generated '
                     'input sentences that describe experience. I shall argue '
                     'that the notion of logical consequence can also be '
                     'understood within a knowledge assimilation framework, in '
                     'terms of sentences that must hold no matter what stream '
                     'of input sentences might arise in the future.',
         'author': 'Robert Kowalski',
         'cites': '42',
         'cites_id': '6859785291575394114',
         'eprint': 'https://www.researchgate.net/profile/Robert_Kowalski5/publication/2805733_Logic_without_Model_Theory/links/5440fb770cf2e6f0c0f413a9.pdf',
         'journal': 'What is a logical system',
         'pages': '35-71',
         'publisher': 'Oxford University Press',
         'title': 'Logic without model theory',
         'url': 'https://www.researchgate.net/profile/Robert_Kowalski5/publication/2805733_Logic_without_Model_Theory/links/5440fb770cf2e6f0c0f413a9.pdf',
         'year': '1994'},
 'citations_link': '/scholar?cites=6859785291575394114',
 'cites_per_year': {1994: 3,
                    1995: 3,
                    1996: 1,
                    1997: 3,
                    1998: 2,
                    1999: 2,
                    2000: 2,
                    2001: 1,
                    2002: 1,
                    2003: 1,
                    2004: 2,
                    2005: 5,
                    2006: 1,
                    2007: 1,
                    2008: 3,
                    2009: 2,
                    2010: 2,
                    2011: 2,
                    2012: 2,
                    2013: 2},
 'filled': True,
 'id_citations': 'pvkQAj0AAAAJ:GnPB-g6toBAC',
 'source': 'citations'}
#+end_example
| 1994 | Logic without model theory | What is a logical system |
*** 1982 Logic as a computer language for children :filled:
#+begin_example
{'bib': {'abstract': 'For many years the artificial intelligence community has '
                     'engaged in a debate about the relative merits of '
                     'procedural versus declarative representations of '
                     'knowledge. This debate has spilled over into the '
                     'educational arena, where computational geometry as '
                     'realized in Logo is represented as superior to classical '
                     'nonprocedural geometry.',
         'author': 'Robert A Kowalski',
         'cites': '42',
         'cites_id': '14186975727542391026',
         'eprint': 'https://www.doc.ic.ac.uk/~rak/papers/Logic%20for%20Children.pdf',
         'pages': '2-10',
         'title': 'Logic as a computer language for children',
         'url': 'https://www.doc.ic.ac.uk/~rak/papers/Logic%20for%20Children.pdf',
         'year': '1982'},
 'citations_link': '/scholar?cites=14186975727542391026',
 'cites_per_year': {1983: 1,
                    1984: 1,
                    1985: 5,
                    1986: 3,
                    1987: 2,
                    1988: 3,
                    1989: 1,
                    1990: 1,
                    1991: 1,
                    1992: 3,
                    1993: 2,
                    1994: 4,
                    1995: 1,
                    1996: 1,
                    1997: 1,
                    1998: 1,
                    1999: 3,
                    2000: 2,
                    2001: 4,
                    2002: 1},
 'filled': True,
 'id_citations': 'pvkQAj0AAAAJ:BqipwSGYUEgC',
 'source': 'citations'}
#+end_example
WARNING: caught exception: <class 'KeyError'>
*** 1970 The case for using equality axioms in automatic demonstration :filled:
#+begin_example
{'bib': {'abstract': 'Preliminaries. If L is a literal then ILl denotes the '
                     'atom A such that L= Aor L= X. An expression (literal, '
                     'clause, set of clauses) is a ground expression if it '
                     'contains no variables. Constants are function symbols '
                     'with no arguments. A set of expressions E is unifiable '
                     'with unifier cr if Eois a. singleton. If E is unifiable '
                     'then there is a substitution e, called a most general '
                     'unifier (mgu) of E, such that e unifies E and for any '
                     'unifier cr of E, 0= e for some SimiJarly a family of '
                     'sets of expressions is simultaneously unifiable with '
                     'simultaneous unifier o: if E (T is a singleton for each '
                     'E¬£ t.. If e is simultaneously unifiable then there '
                     'exists a simUltaneous unifier e of¬£, such that for any '
                     "simultaneous unifier cr of C-'0= e A for some A e is "
                     'called a most general simultaneous unifier (mgsu) of A '
                     'set of ground clauses e-=[A l,‚Ä¢‚Ä¢‚Ä¢, An, B J where, for 1 '
                     'si s n, Ai=',
         'author': 'Robert Kowalski',
         'cites': '42',
         'cites_id': '9210965167354960200',
         'pages': '112-127',
         'publisher': 'Springer, Berlin, Heidelberg',
         'title': 'The case for using equality axioms in automatic '
                  'demonstration',
         'url': 'https://link.springer.com/content/pdf/10.1007/BFb0060628.pdf',
         'year': '1970'},
 'citations_link': '/scholar?cites=9210965167354960200',
 'cites_per_year': {1981: 2,
                    1982: 2,
                    1983: 1,
                    1984: 1,
                    1985: 2,
                    1986: 1,
                    1987: 3,
                    1988: 5,
                    1989: 2,
                    1990: 2,
                    1991: 1,
                    1992: 1,
                    1993: 2,
                    1994: 1,
                    1995: 2,
                    1996: 2,
                    1997: 1},
 'filled': True,
 'id_citations': 'pvkQAj0AAAAJ:ns9cj8rnVeAC',
 'source': 'citations'}
#+end_example
WARNING: caught exception: <class 'KeyError'>
*** 2012 A logic-based framework for reactive systems :filled:
#+begin_example
{'bib': {'abstract': 'We sketch a logic-based framework in which computation '
                     'consists of performing actions to generate a sequence of '
                     'states, with the purpose of making a set of reactive '
                     'rules in the logical form antecedents ( consequents all '
                     'true. The antecedents of the rules are conjunctions of '
                     'past or present conditions and events, and the '
                     'consequents of the rules are disjunctions of '
                     'conjunctions of future conditions and actions. The '
                     'antecedents can be viewed as complex/composite events, '
                     'and the consequents as complex/composite/macro actions '
                     'or processes.',
         'author': 'Robert Kowalski and Fariba Sadri',
         'cites': '39',
         'cites_id': '13893270751185945926',
         'eprint': 'https://www.researchgate.net/profile/Robert_Kowalski5/publication/262159115_A_Logic-Based_Framework_for_Reactive_Systems/links/53fb92070cf2dca8fffe7f48.pdf',
         'pages': '1-15',
         'publisher': 'Springer, Berlin, Heidelberg',
         'title': 'A logic-based framework for reactive systems',
         'url': 'https://link.springer.com/chapter/10.1007/978-3-642-32689-9_1',
         'year': '2012'},
 'citations_link': '/scholar?cites=13893270751185945926',
 'cites_per_year': {2012: 1,
                    2013: 4,
                    2014: 5,
                    2015: 8,
                    2016: 6,
                    2017: 7,
                    2018: 4,
                    2019: 3},
 'filled': True,
 'id_citations': 'pvkQAj0AAAAJ:_B80troHkn4C',
 'source': 'citations'}
#+end_example
WARNING: caught exception: <class 'KeyError'>
*** 2009 Integrating logic programming and production systems in abductive logic programming agents :filled:
#+begin_example
{'bib': {'abstract': 'In this paper we argue the case for integrating the '
                     'distinctive functionalities of logic programs and '
                     'production systems within an abductive logic programming '
                     'agent framework. In this framework, logic programs '
                     'function as an agent‚Äôs beliefs and production rules '
                     'function as the agent‚Äôs goals. The semantics and proof '
                     'procedures are based on abductive logic programming, in '
                     'which logic programs are integrated with integrity '
                     'constraints that behave like production rules.',
         'author': 'Robert Kowalski and Fariba Sadri',
         'cites': '39',
         'cites_id': '5855475592648876503',
         'eprint': 'http://citeseerx.ist.psu.edu/viewdoc/download?doi=10.1.1.437.4389&rep=rep1&type=pdf',
         'pages': '1-23',
         'publisher': 'Springer, Berlin, Heidelberg',
         'title': 'Integrating logic programming and production systems in '
                  'abductive logic programming agents',
         'url': 'https://link.springer.com/chapter/10.1007/978-3-642-05082-4_1',
         'year': '2009'},
 'citations_link': '/scholar?cites=5855475592648876503',
 'cites_per_year': {2010: 1,
                    2011: 6,
                    2012: 10,
                    2013: 3,
                    2014: 6,
                    2015: 4,
                    2016: 3,
                    2017: 3,
                    2018: 1},
 'filled': True,
 'id_citations': 'pvkQAj0AAAAJ:b0M2c_1WBrUC',
 'source': 'citations'}
#+end_example
WARNING: caught exception: <class 'KeyError'>
*** 2011 Abductive logic programming agents with destructive databases :filled:
#+begin_example
{'bib': {'abstract': 'In this paper we present an agent language that combines '
                     'agent functionality with a state transition theory and '
                     'model-theoretic semantics. The language is based on '
                     'abductive logic programming (ALP), but employs a '
                     'simplified state-free syntax, with an operational '
                     'semantics that uses destructive updates to manipulate a '
                     'database, which represents the current state of the '
                     'environment. The language builds upon the ALP '
                     'combination of logic programs, to represent an agent‚Äôs '
                     'beliefs, and integrity constraints, to represent the '
                     'agent‚Äôs goals. Logic programs are used to define '
                     'macro-actions, intensional predicates, and plans to '
                     'reduce goals to sub-goals including actions. Integrity '
                     'constraints are used to represent reactive rules, which '
                     'are triggered by the current state of the database and '
                     'recent agent actions and external events. The execution '
                     'of actions and the assimilation of observations generate '
                     'a sequence ‚Ä¶',
         'author': 'Robert Kowalski and Fariba Sadri',
         'cites': '35',
         'cites_id': '17252824125665618863',
         'eprint': 'https://core.ac.uk/download/pdf/207911237.pdf',
         'journal': 'Annals of Mathematics and Artificial Intelligence',
         'number': '1-2',
         'pages': '129-158',
         'publisher': 'Springer Netherlands',
         'title': 'Abductive logic programming agents with destructive '
                  'databases',
         'url': 'https://link.springer.com/article/10.1007/s10472-011-9253-y',
         'volume': '62',
         'year': '2011'},
 'citations_link': '/scholar?cites=17252824125665618863',
 'cites_per_year': {2012: 5,
                    2013: 12,
                    2014: 3,
                    2015: 3,
                    2016: 6,
                    2017: 3,
                    2018: 2},
 'filled': True,
 'id_citations': 'pvkQAj0AAAAJ:u-x6o8ySG0sC',
 'source': 'citations'}
#+end_example
| 2011 | Abductive logic programming agents with destructive databases | Annals of Mathematics and Artificial Intelligence |
*** 1991 Logic programming in artificial intelligence :filled:
#+begin_example
{'bib': {'author': 'Robert A Kowalski',
         'cites': '32',
         'cites_id': '5164864557759992086',
         'pages': '596-603',
         'title': 'Logic programming in artificial intelligence',
         'url': 'https://dl.acm.org/doi/abs/10.5555/1631171.1631259',
         'year': '1991'},
 'citations_link': '/scholar?cites=5164864557759992086',
 'cites_per_year': {1992: 2,
                    1993: 7,
                    1994: 4,
                    1995: 7,
                    1996: 3,
                    1997: 2,
                    1998: 1,
                    1999: 1,
                    2000: 2,
                    2001: 1,
                    2002: 1,
                    2003: 1},
 'filled': True,
 'id_citations': 'pvkQAj0AAAAJ:J_g5lzvAfSwC',
 'source': 'citations'}
#+end_example
WARNING: caught exception: <class 'KeyError'>
*** 1972 AND/OR graphs, theorem-proving graphs and bi-directional search :filled:
#+begin_example
{'bib': {'abstract': 'And-or graphs and theorem-proving graphs determine the '
                     'same kind of search space and differ only in the '
                     'direction of search: from axioms to goals, in the case '
                     'of theorem-proving graphs, and in the opposite '
                     'direction, from goals to axioms, in the case of and-or '
                     'graphs. Bi-directional search strategies combine both '
                     'directions of search. We investigate the construction of '
                     'a single general algorithm which covers uni-directional '
                     'search both for and-or graphs and for theorem-proving '
                     'graphs, bi-directional search for path-finding problems '
                     'and search for a simplest solution as well as search for '
                     'any solution. We obtain a general theory of completeness '
                     'which applies to search spaces with infinite '
                     'or-branching. In the case of search for any solution, we '
                     'argue against the application of strategies designed for '
                     'finding simplest solutions, but argue for assigning a '
                     'major role in guiding the search to the use of symbol '
                     'complexity (the number of symbol occurrences in a '
                     'derivation).',
         'author': 'R Kowalski',
         'cites': '31',
         'cites_id': '5018359898017888931',
         'title': 'AND/OR graphs, theorem-proving graphs and bi-directional '
                  'search',
         'url': 'http://citeseerx.ist.psu.edu/viewdoc/summary?doi=10.1.1.693.3245',
         'year': '1972'},
 'citations_link': '/scholar?cites=5018359898017888931',
 'cites_per_year': {1979: 1,
                    1980: 1,
                    1981: 1,
                    1982: 1,
                    1983: 2,
                    1984: 1,
                    1985: 1,
                    1986: 1,
                    1987: 1,
                    1988: 2,
                    1989: 1,
                    1990: 2,
                    1991: 1,
                    1992: 2},
 'filled': True,
 'id_citations': 'pvkQAj0AAAAJ:3fE2CSJIrl8C',
 'source': 'citations'}
#+end_example
WARNING: caught exception: <class 'KeyError'>
*** 1988 Logic-based open systems :filled:
#+begin_example
{'bib': {'author': 'Robert Kowalski',
         'cites': '29',
         'cites_id': '9084262396859469937',
         'title': 'Logic-based open systems',
         'url': 'http://scholar.google.com/scholar?cluster=9084262396859469937&hl=en&oi=scholarr',
         'year': '1988'},
 'citations_link': '/scholar?cites=9084262396859469937',
 'cites_per_year': {1987: 2,
                    1988: 1,
                    1989: 1,
                    1990: 1,
                    1991: 1,
                    1992: 1,
                    1993: 1,
                    1994: 1,
                    1995: 3,
                    1996: 2,
                    1997: 2,
                    1998: 1,
                    1999: 1,
                    2000: 3,
                    2001: 1,
                    2002: 1,
                    2003: 2,
                    2004: 1},
 'filled': True,
 'id_citations': 'pvkQAj0AAAAJ:u_35RYKgDlwC',
 'source': 'citations'}
#+end_example
WARNING: caught exception: <class 'KeyError'>
*** 1985 Computer Representation of the Law. :filled:
#+begin_example
{'bib': {'abstract': 'For the purposes of this discussion there are three main '
                     'types of law: definitional, normative and case law; and '
                     'there are a variety of computer representations of '
                     'knowledge and problem-solving which can be applied to '
                     'law. The social implications of representing the law by '
                     'means of computer depend upon both the type of law and '
                     'the technical means of computer implementation.',
         'author': 'Robert A Kowalski and Marek J Sergot',
         'cites': '29',
         'cites_id': '3595885095530255148',
         'eprint': 'https://www.researchgate.net/profile/Robert_Kowalski5/publication/220814653_Computer_Representation_of_the_Law/links/53da3cb50cf2631430c804bb.pdf',
         'pages': '1269-1270',
         'title': 'Computer Representation of the Law.',
         'url': 'https://www.researchgate.net/profile/Robert_Kowalski5/publication/220814653_Computer_Representation_of_the_Law/links/53da3cb50cf2631430c804bb.pdf',
         'year': '1985'},
 'citations_link': '/scholar?cites=3595885095530255148',
 'cites_per_year': {1986: 2,
                    1987: 1,
                    1988: 1,
                    1989: 1,
                    1990: 1,
                    1991: 1,
                    1992: 1,
                    1993: 2,
                    1994: 4,
                    1995: 3,
                    1996: 2,
                    1997: 1,
                    1998: 4,
                    1999: 1,
                    2000: 1,
                    2001: 1,
                    2002: 2},
 'filled': True,
 'id_citations': 'pvkQAj0AAAAJ:35N4QoGY0k4C',
 'source': 'citations'}
#+end_example
WARNING: caught exception: <class 'KeyError'>
*** 2012 A formal representation of the WHO and UNICEF estimates of national immunization coverage: a computational logic approach :filled:
#+begin_example
{'bib': {'abstract': 'Production of official statistics frequently requires '
                     'expert judgement to evaluate and reconcile data of '
                     'unknown and varying quality from multiple and '
                     'potentially conflicting sources. Moreover, exceptional '
                     'events may be difficult to incorporate in modelled '
                     'estimates. Computational logic provides a methodology '
                     "and tools for incorporating analyst's judgement, "
                     'integrating multiple data sources and modelling methods, '
                     'ensuring transparency and replicability, and making '
                     'documentation computationally accessible. '
                     'Representations using computational logic can be '
                     'implemented in a variety of computer-based languages for '
                     'automated production. Computational logic complements '
                     'standard mathematical and statistical techniques and '
                     'extends the flexibility of mathematical and statistical '
                     'modelling. A basic overview of computational logic is '
                     'presented and its application to official statistics is '
                     'illustrated with the WHO & UNICEF estimates of national '
                     'immunization coverage.',
         'author': 'Anthony Burton and Robert Kowalski and Marta Gacic-Dobo '
                   'and Rouslan Karimov and David Brown',
         'cites': '27',
         'cites_id': '9702504125249410476',
         'eprint': 'https://journals.plos.org/plosone/article?id=10.1371/journal.pone.0047806',
         'journal': 'PLoS One',
         'number': '10',
         'pages': 'e47806',
         'publisher': 'Public Library of Science',
         'title': 'A formal representation of the WHO and UNICEF estimates of '
                  'national immunization coverage: a computational logic '
                  'approach',
         'url': 'https://journals.plos.org/plosone/article?id=10.1371/journal.pone.0047806',
         'volume': '7',
         'year': '2012'},
 'citations_link': '/scholar?cites=9702504125249410476',
 'cites_per_year': {2012: 1,
                    2013: 1,
                    2014: 5,
                    2015: 2,
                    2016: 4,
                    2017: 2,
                    2018: 5,
                    2019: 5,
                    2020: 2},
 'filled': True,
 'id_citations': 'pvkQAj0AAAAJ:LPZeul_q3PIC',
 'source': 'citations'}
#+end_example
| 2012 | A formal representation of the WHO and UNICEF estimates of national immunization coverage: a computational logic approach | PLoS One |
*** 1995 Reduction of Abductive Logic Programs to Normal Logic Programs. :filled:
#+begin_example
{'bib': {'abstract': 'In this paper we study a form of abductive logic '
                     'programming which combines default and non-default '
                     'abducibles and employs retractibles in integrity '
                     'constraints. We also present a transformation from '
                     'abductive to normal logic programs, which is correct and '
                     'complete with respect to many semantics. These are all '
                     'the semantics that can be formulated in an argumentation '
                     'framework. A simplified form of the event calculus is '
                     'used as an illustration.',
         'author': 'Francesca Toni and Robert A Kowalski',
         'cites': '26',
         'cites_id': '10021228362134239022',
         'eprint': 'http://www.doc.ic.ac.uk/~rak/papers/reduction.pdf',
         'journal': 'ICLP',
         'pages': '367-381',
         'title': 'Reduction of Abductive Logic Programs to Normal Logic '
                  'Programs.',
         'url': 'http://books.google.com/books?hl=en&lr=&id=vpGEyZWP1dYC&oi=fnd&pg=PA367&dq=info:LrcUwhmOEosJ:scholar.google.com&ots=jFWdj5oqgh&sig=XjgxM354TO_qEko4M1p5yMEHdv0',
         'volume': '95',
         'year': '1995'},
 'citations_link': '/scholar?cites=10021228362134239022',
 'cites_per_year': {1994: 1,
                    1995: 2,
                    1996: 4,
                    1997: 3,
                    1998: 1,
                    1999: 2,
                    2000: 2,
                    2001: 1,
                    2002: 1,
                    2003: 4,
                    2004: 1,
                    2005: 1,
                    2006: 1,
                    2007: 1,
                    2008: 1},
 'filled': True,
 'id_citations': 'pvkQAj0AAAAJ:RYcK_YlVTxYC',
 'source': 'citations'}
#+end_example
| 1995 | Reduction of Abductive Logic Programs to Normal Logic Programs. | ICLP |
*** 1994 Argument and reconciliation :filled:
#+begin_example
{'bib': {'abstract': 'We outline a formal theory of argumentationtheoretic '
                     'reasoning which unifies and generalises many existing '
                     'approaches to default reasoning, and which promises to '
                     'be useful for practical reasoning in general and legal '
                     'reasoning in particular. We discuss an extension of the '
                     'argumentation theory to the problem of reconciling '
                     'conflicting arguments. 1 Introduction The purpose of '
                     'this paper is to outline a formal theory of '
                     'argumentation-theoretic reasoning, which promises to '
                     'have relevance for practical reasoning in general and '
                     'for legal reasoning in particular. The theory originates '
                     'from research on the semantics of logic programming [9]; '
                     'but its main accomplishment until now has been to '
                     'provide a unifying framework for many previous '
                     'approaches to the formalisation of default reasoning [4, '
                     '1, 2]. The theory is based on the conventional notion of '
                     'a formal deductive system, but focuses on the problem of '
                     'determining what" assumptions" can acceptably be used to '
                     'extend a given set of" facts" f...',
         'author': 'Robert A Kowalski and Francesca Toni',
         'cites': '26',
         'cites_id': '2395835283463642761',
         'title': 'Argument and reconciliation',
         'url': 'http://citeseerx.ist.psu.edu/viewdoc/summary?doi=10.1.1.37.1883',
         'year': '1994'},
 'citations_link': '/scholar?cites=2395835283463642761',
 'cites_per_year': {1995: 1,
                    1996: 2,
                    1997: 1,
                    1998: 3,
                    1999: 4,
                    2000: 2,
                    2001: 3,
                    2002: 2,
                    2003: 2,
                    2004: 1,
                    2005: 1,
                    2006: 2,
                    2007: 1,
                    2008: 1},
 'filled': True,
 'id_citations': 'pvkQAj0AAAAJ:NaGl4SEjCO4C',
 'source': 'citations'}
#+end_example
WARNING: caught exception: <class 'KeyError'>
*** 1993 Launching the new era :filled:
#+begin_example
{'bib': {'abstract': 'Other aspects of KL1 considered in the Task Group '
                     'included data types and object-oriented programming. It '
                     'was argued that program codes and character strings must '
                     'be supported as built-in data types. The initial '
                     'report," Conceptual Specification of the Fifth '
                     'Generation Kernel Language Version 1 (KL1)," which was '
                     'published as an ICOT Technical Memorandum in September '
                     '1983, comprised six sections:',
         'author': 'Kazuhiro Fuchi and Robert Kowalski and Koichi Furukawa and '
                   'Kazunori Ueda and Ken Kahn and Takashi Chikayama and Evan '
                   'Tick',
         'cites': '26',
         'cites_id': '13258674504464338115',
         'journal': 'Communications of the ACM',
         'number': '3',
         'pages': '49-100',
         'publisher': 'ACM',
         'title': 'Launching the new era',
         'url': 'https://dl.acm.org/doi/abs/10.1145/153520.153541',
         'volume': '36',
         'year': '1993'},
 'citations_link': '/scholar?cites=13258674504464338115',
 'cites_per_year': {1993: 2,
                    1994: 1,
                    1995: 2,
                    1996: 1,
                    1997: 1,
                    1998: 1,
                    1999: 1,
                    2000: 1,
                    2001: 1,
                    2002: 3,
                    2003: 6,
                    2004: 2,
                    2005: 1,
                    2006: 1},
 'filled': True,
 'id_citations': 'pvkQAj0AAAAJ:SeFeTyx0c_EC',
 'source': 'citations'}
#+end_example
| 1993 | Launching the new era | Communications of the ACM |
*** 1987 Directions for logic programming :filled:
#+begin_example
{'bib': {'abstract': 'As a first approximation logic programming, is the '
                     'observation that procedures = Horn clauses + backward '
                     'reasoning.',
         'author': 'Robert Kowalski',
         'cites': '26',
         'cites_id': '1847781698772132604',
         'pages': '128-146',
         'publisher': 'Springer, Berlin, Heidelberg',
         'title': 'Directions for logic programming',
         'url': 'https://link.springer.com/content/pdf/10.1007/978-3-642-88719-2_12.pdf',
         'year': '1987'},
 'citations_link': '/scholar?cites=1847781698772132604',
 'cites_per_year': {1986: 3,
                    1987: 1,
                    1988: 1,
                    1989: 5,
                    1990: 1,
                    1991: 2,
                    1992: 2,
                    1993: 2,
                    1994: 1,
                    1995: 1,
                    1996: 3,
                    1997: 1},
 'filled': True,
 'id_citations': 'pvkQAj0AAAAJ:g5m5HwL7SMYC',
 'source': 'citations'}
#+end_example
WARNING: caught exception: <class 'KeyError'>
*** 1985 Logic programming :filled:
#+begin_example
{'bib': {'author': 'Robert Kowalski',
         'cites': '25',
         'cites_id': '297673916441804840',
         'journal': 'Byte',
         'number': '8',
         'pages': '161-&',
         'publisher': 'BYTE PUBL INC',
         'title': 'Logic programming',
         'url': 'http://scholar.google.com/scholar?cluster=297673916441804840&hl=en&oi=scholarr',
         'volume': '10',
         'year': '1985'},
 'citations_link': '/scholar?cites=297673916441804840',
 'cites_per_year': {1985: 1,
                    1986: 3,
                    1987: 5,
                    1988: 3,
                    1989: 2,
                    1990: 4,
                    1991: 1,
                    1992: 1,
                    1993: 1,
                    1994: 1,
                    1995: 1},
 'filled': True,
 'id_citations': 'pvkQAj0AAAAJ:WHdLCjDvYFkC',
 'source': 'citations'}
#+end_example
| 1985 | Logic programming | Byte |
*** 1984 Software engineering and artificial intelligence in new generation computing :filled:
#+begin_example
{'bib': {'abstract': 'SPL Insight, a company of the British SPL consortium '
                     'devoted to advanced information technology studies, has '
                     'given its 1984 Award to Professor Bob Kowalski for his '
                     'achievements in Fifth Generation computing. Professor '
                     'Kowalski delivered an Award Lecture on May 15, 1984 in '
                     'London. He and SPL Insight have kindly given permission '
                     'to reproduce his lecture here.',
         'author': 'Robert Kowalski',
         'cites': '25',
         'cites_id': '18052798206221285206',
         'eprint': 'http://www.doc.ic.ac.uk/~rak/papers/AIandSE.pdf',
         'journal': 'Future Generation Computer Systems',
         'number': '1',
         'pages': '39-49',
         'publisher': 'North-Holland',
         'title': 'Software engineering and artificial intelligence in new '
                  'generation computing',
         'url': 'https://www.sciencedirect.com/science/article/pii/0167739X84900207',
         'volume': '1',
         'year': '1984'},
 'citations_link': '/scholar?cites=18052798206221285206',
 'cites_per_year': {1985: 1,
                    1986: 2,
                    1987: 3,
                    1988: 4,
                    1989: 2,
                    1990: 2,
                    1991: 2,
                    1992: 1,
                    1993: 2,
                    1994: 1,
                    1995: 1,
                    1996: 1,
                    1997: 1,
                    1998: 1,
                    1999: 1},
 'filled': True,
 'id_citations': 'pvkQAj0AAAAJ:M05iB0D1s5AC',
 'source': 'citations'}
#+end_example
| 1984 | Software engineering and artificial intelligence in new generation computing | Future Generation Computer Systems |
*** 1986 L√≥gica, programaci√≥n e inteligencia artificial :filled:
#+begin_example
{'bib': {'author': 'Robert Kowalski',
         'cites': '23',
         'cites_id': '10548724141674667557',
         'publisher': 'D√≠az de Santos',
         'title': 'L√≥gica, programaci√≥n e inteligencia artificial',
         'url': 'http://scholar.google.com/scholar?cluster=10548724141674667557&hl=en&oi=scholarr',
         'year': '1986'},
 'citations_link': '/scholar?cites=10548724141674667557',
 'cites_per_year': {1988: 1,
                    1989: 1,
                    1990: 3,
                    1991: 1,
                    1992: 2,
                    1993: 1,
                    1994: 2,
                    1995: 2,
                    1996: 3,
                    1997: 1,
                    1998: 1,
                    1999: 1,
                    2000: 1,
                    2001: 1,
                    2002: 1,
                    2003: 1},
 'filled': True,
 'id_citations': 'pvkQAj0AAAAJ:8AbLer7MMksC',
 'source': 'citations'}
#+end_example
WARNING: caught exception: <class 'KeyError'>
*** 1981 Prolog as a logic programming language :filled:
#+begin_example
{'bib': {'author': 'RA Kowalski',
         'cites': '23',
         'cites_id': '10428499737275701678',
         'publisher': 'Department of Computing Imperial College of Science & '
                      'Technology University of London',
         'title': 'Prolog as a logic programming language',
         'url': 'http://www.opengrey.eu/item/display/10068/625768',
         'year': '1981'},
 'citations_link': '/scholar?cites=10428499737275701678',
 'cites_per_year': {1983: 3,
                    1984: 5,
                    1985: 1,
                    1986: 1,
                    1987: 1,
                    1988: 2,
                    1989: 2,
                    1990: 2,
                    1991: 1,
                    1992: 1,
                    1993: 1,
                    1994: 1},
 'filled': True,
 'id_citations': 'pvkQAj0AAAAJ:vV6vV6tmYwMC',
 'source': 'citations'}
#+end_example
WARNING: caught exception: <class 'KeyError'>
*** 1986 The limitation of logic :filled:
#+begin_example
{'bib': {'abstract': 'Feigenbaum C4], commenting on the Fifth Gerieration '
                     'Project, has said that logic is not important, but '
                     'knowledge is. I agree that knowledge is more important '
                     'than logic. But logic is important too. Knowledge-based '
                     'systems need both knowledge and formalism. Although '
                     'knowledge is more important than formalism, formalism is '
                     'important because the use of a poor formalism can '
                     'interfere with the representation of knowledge and can '
                     'restrict the uses to which that knowledge can be put. I '
                     'believe that logic is the least restrictive and most '
                     'appropriate formalism for knowledge-based systems.',
         'author': 'Robert Kowalski',
         'cites': '21',
         'cites_id': '7347416920941037928',
         'eprint': 'https://www.researchgate.net/profile/Robert_Kowalski5/publication/221476821_The_limitation_of_logic/links/53da3cb40cf2a19eee882ecc/The-limitation-of-logic.pdf',
         'pages': '7-13',
         'title': 'The limitation of logic',
         'url': 'https://dl.acm.org/doi/pdf/10.1145/324634.325168',
         'year': '1986'},
 'citations_link': '/scholar?cites=7347416920941037928',
 'cites_per_year': {1987: 1,
                    1988: 3,
                    1989: 1,
                    1990: 1,
                    1991: 1,
                    1992: 1,
                    1993: 1,
                    1994: 1,
                    1995: 3,
                    1996: 2,
                    1997: 1,
                    1998: 2,
                    1999: 1,
                    2000: 1},
 'filled': True,
 'id_citations': 'pvkQAj0AAAAJ:HoB7MX3m0LUC',
 'source': 'citations'}
#+end_example
WARNING: caught exception: <class 'KeyError'>
*** 1986 Formalisation of the British nationality act :filled:
#+begin_example
{'bib': {'abstract': 'The formalisation of the British Nationality Act in the '
                     'programming language PROLOG represents a convergence of '
                     'two historically independent developments: the logical '
                     'analysis of legislation on the one hand and the '
                     'computerisation of logic on the other hand. The key to '
                     'both is the representation of knowledge by means of '
                     'Horn-clauses, rules of the form:',
         'author': 'Marek Sergot and Therese Cory and Peter Hammond and Robert '
                   'Kowalski and Frank Kriwaczek and Fariba Sadri',
         'cites': '21',
         'cites_id': '3014996352432117615',
         'journal': 'International Review of Law, Computers & Technology',
         'number': '1',
         'pages': '40-52',
         'publisher': 'Taylor & Francis Group',
         'title': 'Formalisation of the British nationality act',
         'url': 'https://www.tandfonline.com/doi/abs/10.1080/13600869.1986.9966229',
         'volume': '2',
         'year': '1986'},
 'citations_link': '/scholar?cites=3014996352432117615',
 'cites_per_year': {1987: 2,
                    1988: 6,
                    1989: 1,
                    1990: 1,
                    1991: 1,
                    1992: 2,
                    1993: 4,
                    1994: 2,
                    1995: 1,
                    1996: 1},
 'filled': True,
 'id_citations': 'pvkQAj0AAAAJ:lSLTfruPkqcC',
 'source': 'citations'}
#+end_example
| 1986 | Formalisation of the British nationality act | International Review of Law, Computers & Technology |
*** 2010 An agent language with destructive assignment and model-theoretic semantics :filled:
#+begin_example
{'bib': {'abstract': 'In this paper we present an agent language that combines '
                     'agent functionality with an action theory and '
                     'model-theoretic semantics. The language is based on '
                     'abductive logic programming (ALP), but employs a '
                     'simplified state-free syntax, with an operational '
                     'semantics that uses destructive assignment to manipulate '
                     'a database, which represents the current state of the '
                     'environment. The language builds upon the ALP '
                     'combination of logic programs, to represent an agent‚Äôs '
                     'beliefs, and integrity constraints, to represent the '
                     'agent‚Äôs goals. Logic programs are used to define '
                     'macro-actions, intensional predicates, and plans to '
                     'reduce goals to sub-goals including actions. Integrity '
                     'constraints are used to represent reactive rules, which '
                     'are triggered by the current state of the database and '
                     'recent agent actions and external events. The execution '
                     'of actions and the assimilation of observations generate '
                     'a sequence of ‚Ä¶',
         'author': 'Robert Kowalski and Fariba Sadri',
         'cites': '18',
         'cites_id': '2602043606674068046',
         'eprint': 'https://core.ac.uk/download/pdf/191234768.pdf',
         'pages': '200-218',
         'publisher': 'Springer, Berlin, Heidelberg',
         'title': 'An agent language with destructive assignment and '
                  'model-theoretic semantics',
         'url': 'https://link.springer.com/chapter/10.1007/978-3-642-14977-1_16',
         'year': '2010'},
 'citations_link': '/scholar?cites=2602043606674068046',
 'cites_per_year': {2010: 2,
                    2011: 2,
                    2012: 4,
                    2013: 2,
                    2014: 1,
                    2015: 2,
                    2016: 2,
                    2017: 1,
                    2018: 1},
 'filled': True,
 'id_citations': 'pvkQAj0AAAAJ:xtRiw3GOFMkC',
 'source': 'citations'}
#+end_example
WARNING: caught exception: <class 'KeyError'>
*** 1984 Logic programming in the fifth generation :filled:
#+begin_example
{'bib': {'abstract': 'The Japanese Fifth Generation Computer Systems (FGCS) '
                     'project has chosen logic programming for its core '
                     'programming language. It has recognized the major '
                     'contribution that logic programming has to make not only '
                     'in artificial intelligence but in database systems and '
                     'software specification as well. It has recognized and '
                     'intends to exploit the greater potential that logic '
                     'programming has to offer for taking advantage of the '
                     'parallelism possible with innovative multiprocessor '
                     'computer architectures.',
         'author': 'Robert Kowalski',
         'cites': '18',
         'cites_id': '2578852785715563599',
         'journal': 'The Knowledge Engineering Review',
         'number': '1',
         'pages': '26-38',
         'publisher': 'Cambridge University Press',
         'title': 'Logic programming in the fifth generation',
         'url': 'https://www.cambridge.org/core/journals/knowledge-engineering-review/article/logic-programming-in-the-fifth-generation/09466F2D6AF422E936B204D62D7D99A2',
         'volume': '1',
         'year': '1984'},
 'citations_link': '/scholar?cites=2578852785715563599',
 'cites_per_year': {1983: 2,
                    1984: 2,
                    1985: 3,
                    1986: 2,
                    1987: 1,
                    1988: 1,
                    1989: 1,
                    1990: 1,
                    1991: 2,
                    1992: 1,
                    1993: 1},
 'filled': True,
 'id_citations': 'pvkQAj0AAAAJ:ldfaerwXgEUC',
 'source': 'citations'}
#+end_example
| 1984 | Logic programming in the fifth generation | The Knowledge Engineering Review |
*** 1996 An agent architecture that unifies rationality with reactivity :filled:
#+begin_example
{'bib': {'abstract': 'In this paper we analyse the similarities and '
                     'differences between rational and reactive agent '
                     'architectures, and propose a unified architecture that '
                     'aims to capture both as special cases. For this purpose '
                     'we employ a proof procedure as the thinking component of '
                     'the agent. The proof procedure combines definitions with '
                     'integrity constraints. It uses definitions, in logic '
                     'programming manner, for" rational" reduction of goals to '
                     'subgoals. It uses integrity constraints for reactive, '
                     'condition-action rule behaviour. We also employ a '
                     'resource-bounded formalisation of the proof procedure, '
                     "so that the agent's thinking can be interrupted and "
                     'resumed to record and assimilate observations as input '
                     'and to execute atomic actions as output.',
         'author': 'Robert Kowalski and Fariba Sadri',
         'cites': '17',
         'cites_id': '6343512855472533490',
         'eprint': 'http://citeseerx.ist.psu.edu/viewdoc/download?doi=10.1.1.65.2695&rep=rep1&type=pdf',
         'journal': 'Proc. of Logic and databases, Italy',
         'title': 'An agent architecture that unifies rationality with '
                  'reactivity',
         'url': 'http://citeseerx.ist.psu.edu/viewdoc/download?doi=10.1.1.65.2695&rep=rep1&type=pdf',
         'year': '1996'},
 'citations_link': '/scholar?cites=6343512855472533490',
 'cites_per_year': {1998: 1,
                    1999: 3,
                    2000: 1,
                    2001: 3,
                    2002: 1,
                    2003: 2,
                    2004: 1,
                    2005: 1,
                    2006: 1,
                    2007: 1,
                    2008: 1,
                    2009: 1},
 'filled': True,
 'id_citations': 'pvkQAj0AAAAJ:pqnbT2bcN3wC',
 'source': 'citations'}
#+end_example
| 1996 | An agent architecture that unifies rationality with reactivity | Proc. of Logic and databases, Italy |
*** 1983 Nitrogen in a crop-pest interaction; cereal aphids 1979 :filled:
#+begin_example
{'bib': {'author': 'R Kowalski and PE Visser',
         'cites': '17',
         'cites_id': '6829742821323822548',
         'journal': 'Symposium of the British Ecological Society',
         'title': 'Nitrogen in a crop-pest interaction; cereal aphids 1979',
         'url': 'http://agris.fao.org/agris-search/search.do?recordID=US201302677873',
         'year': '1983'},
 'citations_link': '/scholar?cites=6829742821323822548',
 'cites_per_year': {1983: 1,
                    1984: 1,
                    1985: 2,
                    1986: 2,
                    1987: 2,
                    1988: 2,
                    1989: 1,
                    1990: 1,
                    1991: 1,
                    1992: 1,
                    1993: 1,
                    1994: 1,
                    1995: 1},
 'filled': True,
 'id_citations': 'pvkQAj0AAAAJ:nVrZBo8bIpAC',
 'source': 'citations'}
#+end_example
| 1983 | Nitrogen in a crop-pest interaction; cereal aphids 1979 | Symposium of the British Ecological Society |
*** 2016 Programming in logic without logic programming :filled:
#+begin_example
{'bib': {'abstract': 'In previous work, we proposed a logic-based framework in '
                     'which computation is the execution of actions in an '
                     'attempt to make reactive rules of the form if antecedent '
                     'then consequent true in a canonical model of a logic '
                     'program determined by an initial state, sequence of '
                     'events, and the resulting sequence of subsequent states. '
                     'In this model-theoretic semantics, reactive rules are '
                     'the driving force, and logic programs play only a '
                     'supporting role.',
         'author': 'Robert Kowalski and Fariba Sadri',
         'cites': '16',
         'cites_id': '9419427504400663044',
         'eprint': 'https://arxiv.org/pdf/1601.00529',
         'journal': 'arXiv preprint arXiv:1601.00529',
         'title': 'Programming in logic without logic programming',
         'url': 'https://arxiv.org/abs/1601.00529',
         'year': '2016'},
 'citations_link': '/scholar?cites=9419427504400663044',
 'cites_per_year': {2015: 1, 2016: 1, 2017: 3, 2018: 5, 2019: 2},
 'filled': True,
 'id_citations': 'pvkQAj0AAAAJ:sSrBHYA8nusC',
 'source': 'citations'}
#+end_example
| 2016 | Programming in logic without logic programming | arXiv preprint arXiv:1601.00529 |
WARNING: caught exception: <class 'AttributeError'>
*** 1994 Towards a declarative and efficient glass-box clp language :filled:
#+begin_example
{'bib': {'abstract': 'this paper to improve its efficiency.[CaLa94] describes '
                     'an efficient program to solve a JSSP, whose performance '
                     'is comparable with those of OR algorithms. For example, '
                     'it solves the 10\\Theta10 JSS benchmark in about 20 '
                     'minutes. This program is implemented in a hybrid '
                     '(procedural and declarative) glass-box CLP language. In '
                     'this paper we have illustrated how it might be possible '
                     'to encode the techniques suggested in [CaLa94] in a '
                     'purely declarative glass-box CLP language. FPRs are '
                     'similar both in syntax and semantics to the CHRs defined '
                     'in [Fr92], but FPRs are used in the context of '
                     'if-and-only-if definitions, while CHRs are used with '
                     'Prolog-style programs. The explicit representation of '
                     'disjunctions in our approach is important, because it '
                     'enables us to reduce disjuncts to false without '
                     'splitting. This strategy seems to be built into many OR '
                     "algorithms. It is not clear how Fruhwirth's CHR approach "
                     'could achieve a similar behaviour without the '
                     'implementation of a meta-interpreter. To conclude, '
                     'although there is already a rather large number of (C) '
                     'LP languages, an efficient glassbox language which is '
                     'purely declarative, yet allows a procedural reading of '
                     'its propagation rules seems to have a great potential.',
         'author': 'Robert Kowalski and Francesca Toni and Gerhard Wetzel',
         'cites': '15',
         'cites_id': '17279487896178964120',
         'title': 'Towards a declarative and efficient glass-box clp language',
         'url': 'http://citeseerx.ist.psu.edu/viewdoc/summary?doi=10.1.1.37.1002',
         'year': '1994'},
 'citations_link': '/scholar?cites=17279487896178964120',
 'cites_per_year': {1995: 1,
                    1996: 3,
                    1997: 2,
                    1998: 2,
                    1999: 2,
                    2000: 1,
                    2001: 1,
                    2002: 1,
                    2003: 1,
                    2004: 1},
 'filled': True,
 'id_citations': 'pvkQAj0AAAAJ:3s1wT3WcHBgC',
 'source': 'citations'}
#+end_example
WARNING: caught exception: <class 'KeyError'>
*** 2012 Teleo-reactive abductive logic programs :filled:
#+begin_example
{'bib': {'abstract': 'Teleo-reactive (TR) programs are a variety of production '
                     'systems with a destructively updated database that '
                     'represents the current state of the environment. They '
                     'combine proactive behaviour, which is goal-oriented, '
                     'with reactive behaviour, which is sensitive to the '
                     'changing environment. They can take advantage of '
                     'situations in which the environment opportunistically '
                     'solves the system‚Äôs goals, recover gracefully when the '
                     'environment destroys solutions of its goals, and abort '
                     'durative actions when higher priority goals need more '
                     'urgent attention.',
         'author': 'Robert A Kowalski and Fariba Sadri',
         'cites': '13',
         'cites_id': '6156703210357882926',
         'eprint': 'https://core.ac.uk/download/pdf/189208619.pdf',
         'pages': '12-32',
         'publisher': 'Springer, Berlin, Heidelberg',
         'title': 'Teleo-reactive abductive logic programs',
         'url': 'https://link.springer.com/chapter/10.1007/978-3-642-29414-3_3',
         'year': '2012'},
 'citations_link': '/scholar?cites=6156703210357882926',
 'cites_per_year': {2013: 3, 2014: 5, 2015: 3, 2016: 1, 2017: 1},
 'filled': True,
 'id_citations': 'pvkQAj0AAAAJ:B3FOqHPlNUQC',
 'source': 'citations'}
#+end_example
WARNING: caught exception: <class 'KeyError'>
*** 1994 Temporal database technology for air traffic flow management :filled:
#+begin_example
{'bib': {'abstract': 'The function of air traffic flow management (ATFM) is to '
                     'ensure that air traffic operates within adequate margins '
                     'of safety. Existing ATFM systems are manual which are '
                     'over-conservative in. operation resulting in '
                     'under-utilisation of available airspace. As well as '
                     'being costly, such systems are unable to cope with '
                     'increased demand for air travel in regions such as '
                     'Europe. Attempts are currently being made to provide '
                     'computer-based decision support for ATFM. Computerised '
                     'decision support for ATFM ensures that safety margins '
                     'are maintained while at the same time increasing the '
                     'effective capacity of the airspace by more efficient '
                     'flight scheduling. At the heart of such a system is '
                     'active temporal database technology which aids the air '
                     'traffic controllers by keeping track of airspace '
                     'occupancy (a time-map of spatio-temporal trajectories of '
                     'aircraft) in controlled regions of airspace, enabling '
                     'flow managers to ‚Ä¶',
         'author': 'Suryanarayana M Sripada and BL Rosser and JM Bedford and '
                   'Robert A Kowalski',
         'cites': '13',
         'cites_id': '515337610728946013',
         'eprint': 'http://www.doc.ic.ac.uk/~rak/papers/airtraffic.pdf',
         'pages': '28-41',
         'publisher': 'Springer, Berlin, Heidelberg',
         'title': 'Temporal database technology for air traffic flow '
                  'management',
         'url': 'https://link.springer.com/chapter/10.1007/3-540-58183-9_39',
         'year': '1994'},
 'citations_link': '/scholar?cites=515337610728946013',
 'cites_per_year': {1995: 2,
                    1996: 1,
                    1997: 2,
                    1998: 1,
                    1999: 1,
                    2000: 2,
                    2001: 2,
                    2002: 1,
                    2003: 1},
 'filled': True,
 'id_citations': 'pvkQAj0AAAAJ:zA6iFVUQeVQC',
 'source': 'citations'}
#+end_example
WARNING: caught exception: <class 'KeyError'>
*** 1970 Studies in the completeness and efficiency of theorem-proving by resolution :filled:
#+begin_example
{'bib': {'abstract': 'Inference systems Œ§ and search strategies E for T are '
                     'distinguished from proof procedures Œ≤ = (T,E) The '
                     'completeness of procedures is studied by studying '
                     'separately the completeness of inference systems and of '
                     'search strategies. Completeness proofs for resolution '
                     'systems are obtained by the construction of semantic '
                     'trees. These systems include minimal Œ±-restricted binary '
                     'resolution, minimal Œ±-restricted M-clash resolution and '
                     'maximal pseudo-clash resolution. Certain refinements of '
                     'hyper-resolution systems with equality axioms are shown '
                     'to be complete and equivalent to refinements of the '
                     'pararmodulation method for dealing with equality. The '
                     'completeness and efficiency of search strategies for '
                     'theorem-proving problems is studied in sufficient '
                     'generality to include the case of search strategies for '
                     'path-search problems in graphs. The notion of '
                     'theorem-proving problem is defined abstractly so as to '
                     'be dual to that of and" or tree. Special attention is '
                     'given to resolution problems and to search strategies '
                     'which generate simpler before more complex proofs. For '
                     'efficiency, a proof procedure (T,E) requires an '
                     'efficient search strategy E as well as an inference '
                     'system T which admits both simple proofs and relatively '
                     'few redundant and irrelevant derivations. The theory of '
                     'efficient proof procedures outlined here is applied to '
                     'proving the increased efficiency of the usual method for '
                     'deleting tautologies and subsumed clauses. '
                     'Counter-examples are exhibited for both the completeness '
                     'and efficiency of alternative methods for deleting '
                     'subsumed clauses. The efficiency of resolution '
                     'procedures is improved by replacing the single operation '
                     'of resolving a ‚Ä¶',
         'author': 'Robert Anthony Kowalski',
         'cites': '13',
         'cites_id': '950428158183004708',
         'eprint': 'https://era.ed.ac.uk/bitstream/handle/1842/6674/Kowalski1970.pdf?sequence=1&isAllowed=y',
         'publisher': 'The University of Edinburgh',
         'title': 'Studies in the completeness and efficiency of '
                  'theorem-proving by resolution',
         'url': 'https://era.ed.ac.uk/handle/1842/6674',
         'year': '1970'},
 'citations_link': '/scholar?cites=950428158183004708',
 'cites_per_year': {1970: 2,
                    1971: 1,
                    1972: 3,
                    1973: 1,
                    1974: 2,
                    1975: 2,
                    1976: 1,
                    1977: 1},
 'filled': True,
 'id_citations': 'pvkQAj0AAAAJ:f2IySw72cVMC',
 'source': 'citations'}
#+end_example
WARNING: caught exception: <class 'KeyError'>
*** 2010 Reasoning with conditionals in artificial intelligence :filled:
#+begin_example
{'bib': {'abstract': 'Conditionals of one kind or another are the dominant '
                     'form of knowledge representation in Artificial '
                     'Intelligence. However, despite the fact that they play a '
                     'key role in such different formalisms as production '
                     'systems and logic programming, there has been little '
                     'effort made to study the relationships between these '
                     'different kinds of conditionals. In this paper I present '
                     'a framework that attempts to unify the two kinds of '
                     'conditionals and discuss its potential application to '
                     'the modelling ofhuman reasoning.',
         'author': 'Robert Kowalski',
         'cites': '12',
         'cites_id': '3133067900163150477',
         'eprint': 'http://citeseerx.ist.psu.edu/viewdoc/download?doi=10.1.1.67.1822&rep=rep1&type=pdf',
         'journal': 'Cognition and conditionals: Probability and logic in '
                    'human thinking',
         'pages': '253-288',
         'publisher': 'Oxford University Press Oxford',
         'title': 'Reasoning with conditionals in artificial intelligence',
         'url': 'http://books.google.com/books?hl=en&lr=&id=N2HmyMAW4eoC&oi=fnd&pg=PA253&dq=info:jVJnzqfkeisJ:scholar.google.com&ots=2x9FDsL5gG&sig=SJe7WC7WcJbnQANGl5qLlhk9M5s',
         'year': '2010'},
 'citations_link': '/scholar?cites=3133067900163150477',
 'cites_per_year': {2009: 3,
                    2010: 2,
                    2011: 1,
                    2012: 1,
                    2013: 1,
                    2014: 2,
                    2015: 1,
                    2016: 1},
 'filled': True,
 'id_citations': 'pvkQAj0AAAAJ:P5F9QuxV20EC',
 'source': 'citations'}
#+end_example
| 2010 | Reasoning with conditionals in artificial intelligence | Cognition and conditionals: Probability and logic in human thinking |
*** 2015 Reactive computing as model generation :filled:
#+begin_example
{'bib': {'abstract': 'In this paper we propose a logic-based, framework '
                     'inspired by artificial intelligence, but scaled down for '
                     'practical database and programming applications. '
                     'Computation in the framework is viewed as the task of '
                     'generating a sequence of state transitions, with the '
                     'purpose of making an agent‚Äôs goals all true. States are '
                     'represented by sets of atomic sentences (or facts), '
                     'representing the values of program variables, tuples in '
                     'a coordination language, facts in relational databases, '
                     'or Herbrand models.',
         'author': 'Robert Kowalski and Fariba Sadri',
         'cites': '11',
         'cites_id': '5048111438536598715',
         'eprint': 'https://www.researchgate.net/profile/Robert_Kowalski5/publication/276262084_Reactive_Computing_as_Model_Generation/links/5566ef4108aeab77721cdcc5.pdf',
         'journal': 'New Generation Computing',
         'number': '1',
         'pages': '33-67',
         'publisher': 'Ohmsha',
         'title': 'Reactive computing as model generation',
         'url': 'https://link.springer.com/content/pdf/10.1007/s00354-015-0103-z.pdf',
         'volume': '33',
         'year': '2015'},
 'citations_link': '/scholar?cites=5048111438536598715',
 'cites_per_year': {2015: 3, 2016: 1, 2017: 2, 2018: 5},
 'filled': True,
 'id_citations': 'pvkQAj0AAAAJ:hMsQuOkrut0C',
 'source': 'citations'}
#+end_example
| 2015 | Reactive computing as model generation | New Generation Computing |
*** 2003 Computational logic: logic programming and beyond: essays in honour of Robert A. Kowalski :filled:
#+begin_example
{'bib': {'abstract': 'Alan Robinson This set of essays pays tribute to Bob '
                     'Kowalski on his 60th birthday, an anniversary which '
                     'gives his friends and colleagues an excuse to celebrate '
                     'his career as an original thinker, a charismatic '
                     'communicator, and a forceful intellectual leader. The '
                     'logic programming community hereby and herein conveys '
                     'its respect and thanks to him for his pivotal role in '
                     'creating and fostering the conceptual paradigm which is '
                     'its raison d‚Äô≈ítre. The diversity of interests covered '
                     'here reflects the variety of Bob‚Äôs concerns. Read on. It '
                     'is an intellectual feast. Before you begin, permit me to '
                     'send him a brief personal, but public, message: Bob, how '
                     'right you were, and how wrong I was. I should explain. '
                     'When Bob arrived in Edinburgh in 1967 resolution was as '
                     'yet fairly new, having taken several years to become at '
                     'all widely known. Research groups to investigate various '
                     'aspects of resolution sprang up at several institutions, '
                     'the one organized by Bernard Meltzer at Edinburgh '
                     'University being among the first. For the half-dozen '
                     'years that Bob was a leading member of Bernard‚Äôs group, '
                     'I was a frequent visitor to it, and I saw a lot of him. '
                     'We had many discussions about logic, computation, and '
                     'language.',
         'author': 'Antonis C Kakas and Fariba Sadri',
         'cites': '11',
         'cites_id': '11846772378718880221',
         'publisher': 'Springer',
         'title': 'Computational logic: logic programming and beyond: essays '
                  'in honour of Robert A. Kowalski',
         'url': 'http://books.google.com/books?hl=en&lr=&id=wQVqCQAAQBAJ&oi=fnd&pg=PP3&dq=info:3cFyKLYwaKQJ:scholar.google.com&ots=gnx4by8NSY&sig=_AY1Di38BjVJD7AC9_XH93gs0RI',
         'volume': '2408',
         'year': '2003'},
 'citations_link': '/scholar?cites=11846772378718880221',
 'cites_per_year': {2004: 2,
                    2005: 2,
                    2006: 2,
                    2007: 2,
                    2008: 1,
                    2009: 1,
                    2010: 1},
 'filled': True,
 'id_citations': 'pvkQAj0AAAAJ:KUbvn5osdkgC',
 'source': 'citations'}
#+end_example
WARNING: caught exception: <class 'KeyError'>
*** 2001 Is Logic Really Dead or Only Just Sleeping? :filled:
#+begin_example
{'bib': {'abstract': 'There was a time when Logic was the dominant paradigm '
                     'for human reasoning. As George Boole put it around one '
                     'hundred and fifty years ago,Logic was synonymous with '
                     'the ‚ÄúLaws of Thought‚Äù. Later, for most of the latter '
                     'half of the twentieth century,it was the mainstream of '
                     'Artificial Intelligence. But then it all went wrong. '
                     'Artificial Intelligence researchers, frustrated by the '
                     'lack of progress, blamed many of their problems on the '
                     'logic-based approach. They argued that humans do not '
                     'reason logically, and therefore machines should not be '
                     'designed to reason logically either. Other approaches '
                     'began to make progress where Logic was judged to have '
                     'failed - approaches that were designed to simulate '
                     'directly the neurological mechanisms of animal and human '
                     'intelligence. Insect-like robots began to appear,and the '
                     'beginning of a new Machine Intelligence was born. Logic '
                     'seemed to be dieing - and to be ‚Ä¶',
         'author': 'Robert Kowalski',
         'cites': '11',
         'cites_id': '59906905111942173',
         'pages': '2-3',
         'publisher': 'Springer, Berlin, Heidelberg',
         'title': 'Is Logic Really Dead or Only Just Sleeping?',
         'url': 'https://link.springer.com/chapter/10.1007/3-540-45635-X_2',
         'year': '2001'},
 'citations_link': '/scholar?cites=59906905111942173',
 'cites_per_year': {2002: 3,
                    2003: 2,
                    2004: 1,
                    2005: 1,
                    2006: 1,
                    2007: 1,
                    2008: 2},
 'filled': True,
 'id_citations': 'pvkQAj0AAAAJ:yD5IFk8b50cC',
 'source': 'citations'}
#+end_example
WARNING: caught exception: <class 'KeyError'>
*** 1998 An agent architecture that combines backward and forward reasoning :filled:
#+begin_example
{'bib': {'abstract': 'We present a proof procedure that combines backward '
                     'reasoning with logic programs and forward reasoning with '
                     'integrity constraints. We illustrate the use of the '
                     'proof procedure as the inference engine underlying '
                     'agents. Roughly speaking, the backward reasoning '
                     'component of the proof procedure is responsible for the '
                     'deliberative behaviour of agents, whereas the forward '
                     'reasoning component is responsible for their reactive '
                     'behaviour.',
         'author': 'RA Kowalski and Fariba Sadri and Francesca Toni',
         'cites': '11',
         'cites_id': '17495509735891445563',
         'eprint': 'https://www.researchgate.net/profile/Francesca_Toni/publication/2512745_An_Agent_Architecture_That_Combines_Backward_and_Forward_Reasoning/links/00b495195e26f6656b000000.pdf',
         'journal': 'Proceedings of CADE-15 Workshop on Strategies in '
                    'Automated Deduction',
         'pages': '49-56',
         'title': 'An agent architecture that combines backward and forward '
                  'reasoning',
         'url': 'https://www.researchgate.net/profile/Francesca_Toni/publication/2512745_An_Agent_Architecture_That_Combines_Backward_and_Forward_Reasoning/links/00b495195e26f6656b000000.pdf',
         'year': '1998'},
 'citations_link': '/scholar?cites=17495509735891445563',
 'cites_per_year': {2001: 1,
                    2002: 3,
                    2003: 2,
                    2004: 1,
                    2005: 1,
                    2006: 2,
                    2007: 1},
 'filled': True,
 'id_citations': 'pvkQAj0AAAAJ:4OULZ7Gr8RgC',
 'source': 'citations'}
#+end_example
| 1998 | An agent architecture that combines backward and forward reasoning | Proceedings of CADE-15 Workshop on Strategies in Automated Deduction |
*** 1996 PROCALOG-Programming with Constraints and Abducibles in Logic :filled:
#+begin_example
{'bib': {'author': 'Gerhard Wetzel and Robert A Kowalski and Francesca Toni',
         'cites': '11',
         'cites_id': '14973027086131671925',
         'journal': 'GMD STUDIEN',
         'pages': '25-36',
         'publisher': 'GESELLSCHAFT FUR MATHEMATIK UND DATENVERARBEITUNG',
         'title': 'PROCALOG-Programming with Constraints and Abducibles in '
                  'Logic',
         'url': 'http://scholar.google.com/scholar?cluster=14973027086131671925&hl=en&oi=scholarr',
         'year': '1996'},
 'citations_link': '/scholar?cites=14973027086131671925',
 'cites_per_year': {1997: 5, 1998: 3, 1999: 1, 2000: 1, 2001: 1},
 'filled': True,
 'id_citations': 'pvkQAj0AAAAJ:fPk4N6BV_jEC',
 'source': 'citations'}
#+end_example
| 1996 | PROCALOG-Programming with Constraints and Abducibles in Logic | GMD STUDIEN |
*** 1996 Synthesis of proof procedures for default reasoning :filled:
#+begin_example
{'bib': {'abstract': 'We apply logic program development technology to define '
                     'abstract proof procedures, in the form of logic '
                     'programs, for computing the admissibility semantics for '
                     'default reasoning proposed in [2].',
         'author': 'Phan Minh Dung and Robert A Kowalski and Francesca Toni',
         'cites': '10',
         'cites_id': '14396960760676774439',
         'eprint': 'http://www.academia.edu/download/47465146/Synthesis_of_Proof_Procedures_for_Defaul20160723-10282-s6pxvw.pdf',
         'pages': '313-324',
         'publisher': 'Springer, Berlin, Heidelberg',
         'title': 'Synthesis of proof procedures for default reasoning',
         'url': 'https://link.springer.com/content/pdf/10.1007/3-540-62718-9_18.pdf',
         'year': '1996'},
 'citations_link': '/scholar?cites=14396960760676774439',
 'cites_per_year': {2001: 4, 2002: 2, 2003: 2, 2004: 1, 2005: 1},
 'filled': True,
 'id_citations': 'pvkQAj0AAAAJ:rO6llkc54NcC',
 'source': 'citations'}
#+end_example
WARNING: caught exception: <class 'KeyError'>
*** 2014 A logical characterization of a reactive system language :filled:
#+begin_example
{'bib': {'abstract': 'Typical reactive system languages are programmed by '
                     'means of rules of the form if antecedent then '
                     'consequent. However, despite their seemingly logical '
                     'character, hardly any reactive system languages give '
                     'such rules a logical interpretation. In this paper, we '
                     'investigate a simplified reactive system language KELPS, '
                     'in which rules are universally quantified material '
                     'implications, and computation attempts to generate a '
                     'model that makes the rules true.',
         'author': 'Robert Kowalski and Fariba Sadri',
         'cites': '9',
         'cites_id': '13171897386065421234',
         'eprint': 'https://core.ac.uk/download/pdf/206324311.pdf',
         'pages': '22-36',
         'publisher': 'Springer, Cham',
         'title': 'A logical characterization of a reactive system language',
         'url': 'https://link.springer.com/chapter/10.1007/978-3-319-09870-8_2',
         'year': '2014'},
 'citations_link': '/scholar?cites=13171897386065421234',
 'cites_per_year': {2015: 2, 2016: 4, 2017: 1, 2018: 1},
 'filled': True,
 'id_citations': 'pvkQAj0AAAAJ:vbGhcppDl1QC',
 'source': 'citations'}
#+end_example
WARNING: caught exception: <class 'KeyError'>
*** 2011 Artificial intelligence and human thinking :filled:
#+begin_example
{'bib': {'abstract': 'Research in AI has built upon the tools and techniques '
                     'of many different disciplines, including formal logic, '
                     'probability theory, decision theory, management science, '
                     'linguistics and philosophy. However, the application of '
                     'these disciplines in AI has necessitated the development '
                     'of many enhancements and extensions. Among the most '
                     'powerful of these are the methods of computational '
                     'logic. I will argue that computational logic, embedded '
                     'in an agent cycle, combines and improves upon both '
                     'traditional logic and classical decision theory. I will '
                     'also argue that many of its methods can be used, not '
                     'only in AI, but also in ordinary life, to help people '
                     'improve their own human intelligence without the '
                     'assistance of computers.',
         'author': 'Robert Anthony Kowalski',
         'cites': '9',
         'cites_id': '16803314912992187588',
         'eprint': 'https://citeseerx.ist.psu.edu/viewdoc/download?doi=10.1.1.229.2203&rep=rep1&type=pdf',
         'title': 'Artificial intelligence and human thinking',
         'url': 'https://citeseerx.ist.psu.edu/viewdoc/download?doi=10.1.1.229.2203&rep=rep1&type=pdf',
         'year': '2011'},
 'citations_link': '/scholar?cites=16803314912992187588',
 'cites_per_year': {2011: 1, 2012: 1, 2013: 1, 2014: 1, 2015: 3, 2016: 1},
 'filled': True,
 'id_citations': 'pvkQAj0AAAAJ:u5HHmVD_uO8C',
 'source': 'citations'}
#+end_example
WARNING: caught exception: <class 'KeyError'>
*** 2003 A logic-based approach to conflict resolution :filled:
#+begin_example
{'bib': {'abstract': 'Many real world conflicts can be understood in terms of '
                     'logical inconsistencies between goals. In this paper, I '
                     'present an approach to conflict resolution that unifies '
                     'logic, goalreduction and condition-action rules in a '
                     'cognitive model of intelligent agent. The approach uses '
                     'goal hierarchies to reconcile goal conflicts by finding '
                     'alternative, logically consistent ways of solving '
                     'higher-level goals. It also incorporates the use of '
                     'decision theory to decide between different solutions, '
                     'in the attempt to optimise their expected utility.',
         'author': 'Robert Kowalski',
         'cites': '9',
         'cites_id': '5792543593130920628',
         'eprint': 'https://www.researchgate.net/profile/Robert_Kowalski5/publication/2834297_A_Logic-Based_Approach_to_Conflict_Resolution/links/5440fb770cf2e6f0c0f413a2/A-Logic-Based-Approach-to-Conflict-Resolution.pdf',
         'journal': 'Report, Department of Computing, Imperial College',
         'pages': '1-28',
         'title': 'A logic-based approach to conflict resolution',
         'url': 'https://www.researchgate.net/profile/Robert_Kowalski5/publication/2834297_A_Logic-Based_Approach_to_Conflict_Resolution/links/5440fb770cf2e6f0c0f413a2/A-Logic-Based-Approach-to-Conflict-Resolution.pdf',
         'year': '2003'},
 'citations_link': '/scholar?cites=5792543593130920628',
 'cites_per_year': {2006: 2, 2007: 3, 2008: 1, 2009: 1, 2010: 1, 2011: 1},
 'filled': True,
 'id_citations': 'pvkQAj0AAAAJ:a0OBvERweLwC',
 'source': 'citations'}
#+end_example
| 2003 | A logic-based approach to conflict resolution | Report, Department of Computing, Imperial College |
*** 1996 Logic programming with integrity constraints :filled:
#+begin_example
{'bib': {'abstract': 'Integrity constraints play an important role in '
                     'databases. In this work, we develop a proof procedure '
                     'which uses integrity constraints in logic programming. '
                     'The proof procedure reasons with logic programming '
                     'definitions in if-andonly-if form and with integrity '
                     'constraints in clausal form. It has two main inference '
                     'rules:',
         'author': 'Robert Kowalski',
         'cites': '9',
         'cites_id': '11891469566128051559',
         'pages': '301-302',
         'publisher': 'Springer, Berlin, Heidelberg',
         'title': 'Logic programming with integrity constraints',
         'url': 'https://link.springer.com/content/pdf/10.1007/3-540-61630-6_21.pdf',
         'year': '1996'},
 'citations_link': '/scholar?cites=11891469566128051559',
 'cites_per_year': {1999: 2, 2000: 1, 2001: 1, 2002: 2},
 'filled': True,
 'id_citations': 'pvkQAj0AAAAJ:pyW8ca7W8N0C',
 'source': 'citations'}
#+end_example
WARNING: caught exception: <class 'KeyError'>
*** 2006 Computational logic in an object-oriented world :filled:
#+begin_example
{'bib': {'abstract': 'Logic and object-orientation (OO) are competing ways of '
                     'looking at the world. Both view the world in terms of '
                     'individuals. But logic focuses on the relationships '
                     'between individuals, and OO focuses on the use of '
                     'hierarchical classes of individuals to structure '
                     'information and procedures. In this paper, I investigate '
                     'the similarities and differences between OO and '
                     'abductive logic programming multi-agent systems (ALP '
                     'systems) and argue that ALP systems can combine the '
                     'advantages of logic with the main benefits of OO. In ALP '
                     'systems, relationships between individuals are contained '
                     'in a shared semantic structure and agents interact both '
                     'with one another and with the environment by performing '
                     'observations and actions. In OO systems, on the other '
                     'hand, relationships are associated with objects and are '
                     'represented by attribute-value pairs. Interaction '
                     'between objects is performed by sending and receiving ‚Ä¶',
         'author': 'Bob Kowalski',
         'cites': '8',
         'cites_id': '27527666157205896',
         'eprint': 'ftp://nozdr.ru/biblio/kolxoz/Cs/CsLn/Reasoning,%20Action%20and%20Interaction%20in%20AI%20Theories%20and%20Systems%20(LNCS4155,%20Springer,%202006)(ISBN%203540379010)(351s)_CsLn_.pdf#page=73',
         'pages': '59-82',
         'publisher': 'Springer, Berlin, Heidelberg',
         'title': 'Computational logic in an object-oriented world',
         'url': 'https://link.springer.com/chapter/10.1007/11829263_4',
         'year': '2006'},
 'citations_link': '/scholar?cites=27527666157205896',
 'cites_per_year': {2011: 2, 2012: 2, 2013: 2, 2014: 1},
 'filled': True,
 'id_citations': 'pvkQAj0AAAAJ:QD3KBmkZPeQC',
 'source': 'citations'}
#+end_example
WARNING: caught exception: <class 'KeyError'>
*** 1990 English as a logic programming language :filled:
#+begin_example
{'bib': {'abstract': 'Ordinary English is generally ambiguous, imprecise and '
                     'unclear. This makes it less than ideal both for human '
                     'communication and for communication with computers. To '
                     'improve the use of English for human communication, '
                     'English scholars have identified guidelines for good '
                     'use. These guidelines help to improve clarity by '
                     'reducing ambiguity, and by reducing the distance between '
                     'syntactic form and semantic content.',
         'author': 'Robert Kowalski',
         'cites': '8',
         'cites_id': '11848769553867147710',
         'journal': 'New Generation Computing',
         'number': '2',
         'pages': '91-93',
         'publisher': 'Springer-Verlag',
         'title': 'English as a logic programming language',
         'url': 'https://link.springer.com/content/pdf/10.1007/BF03037468.pdf',
         'volume': '8',
         'year': '1990'},
 'citations_link': '/scholar?cites=11848769553867147710',
 'cites_per_year': {1993: 1,
                    1994: 2,
                    1995: 1,
                    1996: 1,
                    1997: 1,
                    1998: 1,
                    1999: 1},
 'filled': True,
 'id_citations': 'pvkQAj0AAAAJ:D03iK_w7-QYC',
 'source': 'citations'}
#+end_example
| 1990 | English as a logic programming language | New Generation Computing |
*** 2013 Towards a logic-based unifying framework for computing :filled:
#+begin_example
{'bib': {'abstract': 'In this paper we propose a unifying logic-based, '
                     'framework for Computing, inspired by artificial '
                     'intelligence, but scaled down for practical database and '
                     'programming applications. Computation in the framework '
                     'is viewed as the task of generating a sequence of state '
                     'transitions, with the purpose of making an agent‚Äôs goals '
                     'all true. States are represented by sets of atomic '
                     'sentences (or facts), representing the values of program '
                     'variables, tuples in a coordination language, facts in '
                     'relational databases, or Herbrand models. In the '
                     'model-theoretic semantics, the entire sequence of states '
                     'and events are combined into a single model-theoretic '
                     'structure, by associating time stamps with facts. But in '
                     'the operational semantics, facts are updated '
                     'destructively, without time stamps. We show that the '
                     'model generated by destructive updates is identical to '
                     'the model generated by reasoning with facts containing '
                     'time stamps. We also extend the model with intentional '
                     'predicates and composite event predicates defined by '
                     'logic programs containing conditions in first-order '
                     'logic (FOL). We extend the notions of local '
                     'stratification and weak stratification to generate the '
                     'associated model.',
         'author': 'Robert Kowalski and Fariba Sadri',
         'cites': '7',
         'cites_id': '15897331435660959226',
         'eprint': 'https://www.researchgate.net/profile/Robert_Kowalski5/publication/235356939_Towards_a_Logic-Based_Unifying_Framework_for_Computing/links/53da3cb10cf2e38c63366537.pdf',
         'journal': 'arXiv preprint arXiv:1301.6905',
         'title': 'Towards a logic-based unifying framework for computing',
         'url': 'https://www.researchgate.net/profile/Robert_Kowalski5/publication/235356939_Towards_a_Logic-Based_Unifying_Framework_for_Computing/links/53da3cb10cf2e38c63366537.pdf',
         'year': '2013'},
 'citations_link': '/scholar?cites=15897331435660959226',
 'cites_per_year': {2013: 2, 2014: 5},
 'filled': True,
 'id_citations': 'pvkQAj0AAAAJ:5Ul4iDaHHb8C',
 'source': 'citations'}
#+end_example
| 2013 | Towards a logic-based unifying framework for computing | arXiv preprint arXiv:1301.6905 |
*** 2003 Argumentation-theoretic proof procedures for default reasoning :filled:
#+begin_example
{'bib': {'abstract': 'We present a succession of presentations of an '
                     'argumentation-theoretic proof procedure that applies '
                     'uniformly to a wide variety of logics for default '
                     'reasoning, including Theorist, default logic, logic '
                     'programming, autoepistemic logic, non-monotonic modal '
                     'logic and certain instances of circumscription.',
         'author': 'Phan Minh Dung and Robert A Kowalski and Francesca Toni',
         'cites': '7',
         'cites_id': '16708555655993000990',
         'eprint': 'https://www.doc.ic.ac.uk/~ft/PAPERS/arg03.pdf',
         'journal': 'Report Department of Computing, Imperial College London',
         'title': 'Argumentation-theoretic proof procedures for default '
                  'reasoning',
         'url': 'https://www.doc.ic.ac.uk/~ft/PAPERS/arg03.pdf',
         'year': '2003'},
 'citations_link': '/scholar?cites=16708555655993000990',
 'cites_per_year': {1997: 1, 1998: 1, 1999: 2, 2000: 1, 2001: 1, 2002: 1},
 'filled': True,
 'id_citations': 'pvkQAj0AAAAJ:dfsIfKJdRG4C',
 'source': 'citations'}
#+end_example
| 2003 | Argumentation-theoretic proof procedures for default reasoning | Report Department of Computing, Imperial College London |
WARNING: caught exception: <class 'AttributeError'>
*** 1970 An improved theorem-proving system for first-order logic :filled:
#+begin_example
{'bib': {'author': 'Robert Kowalski',
         'cites': '7',
         'cites_id': '3088989711473197486',
         'publisher': 'Edinburgh University',
         'title': 'An improved theorem-proving system for first-order logic',
         'url': 'http://scholar.google.com/scholar?cluster=3088989711473197486&hl=en&oi=scholarr',
         'year': '1970'},
 'citations_link': '/scholar?cites=3088989711473197486',
 'cites_per_year': {1975: 2, 1976: 2, 1977: 1, 1978: 1},
 'filled': True,
 'id_citations': 'pvkQAj0AAAAJ:1taIhTC69MYC',
 'source': 'citations'}
#+end_example
WARNING: caught exception: <class 'KeyError'>
*** 2011 WUENIC‚Äìa case study in rule-based knowledge representation and reasoning :filled:
#+begin_example
{'bib': {'abstract': 'WUENIC is a rule-based system implemented as a logic '
                     'program, developed by WHO and UNICEF for estimating '
                     'global, country by country, infant immunization '
                     'coverage. It possesses many of the characteristics of '
                     'rule-based legislation, facilitating decisions that are '
                     'consistent, transparent and replicable. In this paper, '
                     'we focus on knowledge representation and problem-solving '
                     'issues, including the use of logical rules versus '
                     'production rules, backward versus forward reasoning, and '
                     'rules and exceptions versus argumentation.',
         'author': 'Robert Kowalski and Anthony Burton',
         'cites': '6',
         'cites_id': '4043163082856106379',
         'eprint': 'http://citeseerx.ist.psu.edu/viewdoc/download?doi=10.1.1.229.485&rep=rep1&type=pdf',
         'pages': '112-125',
         'publisher': 'Springer, Berlin, Heidelberg',
         'title': 'WUENIC‚Äìa case study in rule-based knowledge representation '
                  'and reasoning',
         'url': 'https://link.springer.com/chapter/10.1007/978-3-642-32090-3_11',
         'year': '2011'},
 'citations_link': '/scholar?cites=4043163082856106379',
 'cites_per_year': {2016: 2, 2017: 2, 2018: 2},
 'filled': True,
 'id_citations': 'pvkQAj0AAAAJ:2osOgNQ5qMEC',
 'source': 'citations'}
#+end_example
WARNING: caught exception: <class 'KeyError'>
*** 2002 Directions for Logic Programming :filled:
#+begin_example
{'bib': {'abstract': 'Times have changed. Gone are the days when Logic '
                     'Programming looked ready to take over the world. In '
                     'these days of the Internet, object-oriented programming, '
                     'reactive agents and multi-agent systems, we need a '
                     'better understanding of the possible role of Logic '
                     'Programming in the future.',
         'author': 'Robert A Kowalski',
         'cites': '6',
         'cites_id': '13255907215744673934',
         'pages': '26-32',
         'publisher': 'Springer, Berlin, Heidelberg',
         'title': 'Directions for Logic Programming',
         'url': 'https://link.springer.com/chapter/10.1007/3-540-45628-7_3',
         'year': '2002'},
 'citations_link': '/scholar?cites=13255907215744673934',
 'cites_per_year': {2006: 1, 2007: 1, 2008: 1, 2009: 1, 2010: 1, 2011: 1},
 'filled': True,
 'id_citations': 'pvkQAj0AAAAJ:abG-DnoFyZgC',
 'source': 'citations'}
#+end_example
WARNING: caught exception: <class 'KeyError'>
*** 2001 Artificial intelligence and the natural world :filled:
#+begin_example
{'bib': {'abstract': 'Until recently, the symbolic knowledge representation '
                     'school was the dominant school of thought in Artificial '
                     'Intelligence. Its aim was to develop a computational '
                     'theory of intelligence in which all thought was '
                     'represented in symbolic, logical form, and intelligence '
                     'itself was viewed primarily as a goal-oriented '
                     'problem-solving activity. The world, in which thinking '
                     'took place, was given little if any attention.',
         'author': 'Robert Kowalski',
         'cites': '6',
         'cites_id': '7994214518654799176',
         'eprint': 'https://www.doc.ic.ac.uk/~rak/papers/AI%20natural%20world.pdf',
         'journal': 'Cognitive Processing',
         'pages': '547-573',
         'title': 'Artificial intelligence and the natural world',
         'url': 'https://www.doc.ic.ac.uk/~rak/papers/AI%20natural%20world.pdf',
         'volume': '4',
         'year': '2001'},
 'citations_link': '/scholar?cites=7994214518654799176',
 'cites_per_year': {2006: 2, 2007: 2, 2008: 2},
 'filled': True,
 'id_citations': 'pvkQAj0AAAAJ:_xSYboBqXhAC',
 'source': 'citations'}
#+end_example
| 2001 | Artificial intelligence and the natural world | Cognitive Processing |
*** 1987 Changes of free amino acids in the leaves of Triticum aestivum and their implications for the assessment of plant/insect interactions/Ver√§nderungen der freien Aminos√§uren in ‚Ä¶ :filled:
#+begin_example
{'bib': {'abstract': 'Amino acid analyses of leaf samples taken over 24 h '
                     'periods from winter wheat at decimal growth stages 16, '
                     '35 and 61 were conducted. Diurnal variation in the '
                     'concentrations of different individual amino acids '
                     'indicated that no single hour of the day was '
                     'representative of the amino acid status of the plant '
                     'throughout the season. The use of total free protein '
                     'amino acids at any hour was much more representative. '
                     'Concentrations of glutamine + glutamic acid experienced '
                     'changes which were inversely related to those of '
                     'Œ≥-aminobutyric acid and patterns of diurnal '
                     'concentrations of both were reversed from growth stage '
                     '16 to growth stage 61. The total concentration of free '
                     'amino acids was proportional to the available nitrogen '
                     'concentration in the soil over the study period and '
                     'fluctuated far less than that of individual amino acids. '
                     'The implications for studies based on amino acid '
                     'measurements are discussed ‚Ä¶',
         'author': 'R Kowalski and PE Visser',
         'cites': '6',
         'cites_id': '10246155962238468689',
         'journal': 'Zeitschrift f√ºr Pflanzenkrankheiten und '
                    'Pflanzenschutz/Journal of Plant Diseases and Protection',
         'pages': '161-168',
         'publisher': 'Verlag Eugen Ulmer',
         'title': 'Changes of free amino acids in the leaves of Triticum '
                  'aestivum and their implications for the assessment of '
                  'plant/insect interactions/Ver√§nderungen der freien '
                  'Aminos√§uren in ‚Ä¶',
         'url': 'https://www.jstor.org/stable/43383223',
         'year': '1987'},
 'citations_link': '/scholar?cites=10246155962238468689',
 'cites_per_year': {1988: 1, 1989: 2, 1990: 1, 1991: 1, 1992: 1},
 'filled': True,
 'id_citations': 'pvkQAj0AAAAJ:gVv57TyPmFsC',
 'source': 'citations'}
#+end_example
| 1987 | Changes of free amino acids in the leaves of Triticum aestivum and their implications for the assessment of plant/insect interactions/Ver√§nderungen der freien Aminos√§uren in ‚Ä¶ | Zeitschrift f√ºr Pflanzenkrankheiten und Pflanzenschutz/Journal of Plant Diseases and Protection |
*** 1987 Belief revision without constraints :filled:
#+begin_example
{'bib': {'abstract': 'McDermott has a belief revision problem. For many years '
                     'he has championed the cause of logic in AI. His '
                     'Infroduction to Anijcial Intelligence (McDermott and '
                     'Charniak 1985). written with Eugene Charniak, is an '
                     'important contribution to AI, helping to mark its '
                     'transition from a jumble of competing formalisms and '
                     'methodologies to a genuine science. McDermott‚Äôs faith in '
                     'logic was shaken by the problems he encountered when '
                     'trying to reconcile the denotational semantics of logic '
                     'with the uninhibited use of LISP procedures to represent '
                     'default reasoning. For his analysis and presentation of '
                     'these problems (Hanks and McDermott 1986), he and Steve '
                     'Hanks were awarded the Publisher‚Äôs Prize for best '
                     'scientific paper at the 1986 AAAI Conference. Putting '
                     'into practice his analysis of belief revision as '
                     'providing no constraints on how one might go about '
                     'avoiding inconsistencies, he seems to have decided to '
                     'reject ad ‚Ä¶',
         'author': 'Robert Kowalski',
         'cites': '6',
         'cites_id': '17459513510196868455',
         'journal': 'Computational intelligence',
         'number': '1',
         'pages': '194-196',
         'publisher': 'Blackwell Publishing Ltd',
         'title': 'Belief revision without constraints',
         'url': 'https://onlinelibrary.wiley.com/doi/abs/10.1111/j.1467-8640.1987.tb00197.x',
         'volume': '3',
         'year': '1987'},
 'citations_link': '/scholar?cites=17459513510196868455',
 'cites_per_year': {1991: 1, 1992: 1, 1993: 1, 1994: 1, 1995: 2},
 'filled': True,
 'id_citations': 'pvkQAj0AAAAJ:4X0JR2_MtJMC',
 'source': 'citations'}
#+end_example
| 1987 | Belief revision without constraints | Computational intelligence |
*** 1987 Logic Programming in Artificial Intelligence and Software Engineering :filled:
#+begin_example
{'bib': {'abstract': 'I would like to look at the role of logic programming in '
                     'Artificial Intelligence and Software Engineering, and in '
                     'particular at its potential application to the systems '
                     'analysis stage of software development. I shall argue '
                     'that logic programming allows us to execute systems '
                     'analysis; and in some cases the execution is efficient '
                     'enough to avoid the need for separate specifications and '
                     'programs altogether. I would like to look at the British '
                     'Nationality Act as a particular example, which is '
                     'closely related to data processing‚Äîthe execution of '
                     'rules and regulations whether they have legal binding '
                     'authority or not. I would like to mention some of the '
                     'other interrelationships between Software Engineering '
                     'and Al. And finally I shall discuss some of the human '
                     'implications of the technology.',
         'author': 'Robert Kowalski',
         'cites': '6',
         'cites_id': '4819813589525804216',
         'journal': 'Intelligent Knowledge-Based Systems,(eds.) O‚ÄôShea T., '
                    'Self J., Thomas G., Harper and Row',
         'title': 'Logic Programming in Artificial Intelligence and Software '
                  'Engineering',
         'url': 'http://scholar.google.com/scholar?cluster=4819813589525804216&hl=en&oi=scholarr',
         'year': '1987'},
 'citations_link': '/scholar?cites=4819813589525804216',
 'cites_per_year': {1992: 1, 1993: 1, 1994: 1, 1995: 1, 1996: 1, 1997: 1},
 'filled': True,
 'id_citations': 'pvkQAj0AAAAJ:AvfA0Oy_GE0C',
 'source': 'citations'}
#+end_example
| 1987 | Logic Programming in Artificial Intelligence and Software Engineering | Intelligent Knowledge-Based Systems,(eds.) O‚ÄôShea T., Self J., Thomas G., Harper and Row |
*** 2014 Logic for Problem Solving, Revisited :filled:
#+begin_example
{'bib': {'abstract': 'This seminal book of Computer Science is the most cited '
                     'reference on the subject of programming in logic. '
                     'Originally published in 1979, this now classic text was '
                     'the first comprehensive attempt to define the scope of '
                     'logic for problem solving. In this extended edition, '
                     'Robert Kowalski revisits his classic text in the light '
                     'of subsequent developments in a substantial commentary '
                     'of fifty pages. This work investigates the application '
                     'of logic to problem-solving and computer programming. It '
                     'assumes no previous knowledge of these fields, and may '
                     'be appropriate therefore as an introduction to logic, '
                     'the theory of problem-solving, and computer programming. '
                     'At the focal point is Computational Logic. It centers '
                     'around the famous slogan: Algorithm= Logic+ Control, '
                     'which was coined by the author and is explained in this '
                     'book. According to this view, an algorithm consists of a '
                     'problem description (the logic part) and a strategy to '
                     'perform useful computations on this description (the '
                     'control part). This separation of concerns ideally leads '
                     'to declarative programs that are simple to develop, '
                     'clear to understand and easy to maintain.',
         'author': 'Robert Kowalski',
         'cites': '5',
         'cites_id': '15917074094587995144',
         'publisher': 'BoD‚ÄìBooks on Demand',
         'title': 'Logic for Problem Solving, Revisited',
         'url': 'http://books.google.com/books?hl=en&lr=&id=6vh1BQAAQBAJ&oi=fnd&pg=PA1&dq=info:CGR9h47O5NwJ:scholar.google.com&ots=ZV9M6LoDiJ&sig=n_BQQ7OAtoZCK_TAvQb2WryJug8',
         'year': '2014'},
 'citations_link': '/scholar?cites=15917074094587995144',
 'cites_per_year': {2016: 3, 2017: 2},
 'filled': True,
 'id_citations': 'pvkQAj0AAAAJ:LI9QrySNdTsC',
 'source': 'citations'}
#+end_example
WARNING: caught exception: <class 'KeyError'>
*** 2002 Computational logic: Logic programming and beyond :filled:
#+begin_example
{'bib': {'abstract': 'Bob Kowalski together with Alain Colmerauer opened up '
                     'the new field of Logic Programming back in the early '
                     '1970s. Since then the field has expanded in various '
                     'directions and has contributed to the development of '
                     'many other areas in Computer Science. Logic Programming '
                     'has helped to place logic firmly as an integral part of '
                     'the foundations of Computing and Artificial '
                     'Intelligence. In particular, over the last two decades a '
                     'new discipline has emerged under the name of '
                     'Computational Logic which aims to promote logic as a '
                     'unifying basis for problem solving. This broad role of '
                     'logic was at the heart of Bob Kowalski‚Äòs work from the '
                     'very beginning as expounded in his seminal book‚ÄîLogic '
                     'for Problem Solving.‚ÄúHe has been instrumental both in '
                     'shaping this broader scientific field and in setting up '
                     'the Computational Logic community.',
         'author': 'Antonis C Kakas Fariba Sadri',
         'cites': '5',
         'cites_id': '11218617499449822172',
         'eprint': 'http://s2.bitdl.ir/Ebook/Computer%20Science/Discrete%20Mathematics/Computational%20Logic%20-%20Logic%20Programming%20and%20Beyond%20II%20-%20A.%20Kakas,%20F.%20Sadri%20(Springer,%202002)%20WW.pdf',
         'journal': 'Part I',
         'title': 'Computational logic: Logic programming and beyond',
         'url': 'http://s2.bitdl.ir/Ebook/Computer%20Science/Discrete%20Mathematics/Computational%20Logic%20-%20Logic%20Programming%20and%20Beyond%20II%20-%20A.%20Kakas,%20F.%20Sadri%20(Springer,%202002)%20WW.pdf',
         'year': '2002'},
 'citations_link': '/scholar?cites=11218617499449822172',
 'cites_per_year': {2004: 1, 2005: 1, 2006: 1, 2007: 1, 2008: 1},
 'filled': True,
 'id_citations': 'pvkQAj0AAAAJ:d1gkVwhDpl0C',
 'source': 'citations'}
#+end_example
| 2002 | Computational logic: Logic programming and beyond | Part I |
*** 1997 The IFF proof procedure for abductive logic programming :filled:
#+begin_example
{'bib': {'author': 'R Kowalski',
         'cites': '5',
         'cites_id': '11832122604280518339',
         'journal': 'Journal of Logic Programming',
         'pages': '151-166',
         'title': 'The IFF proof procedure for abductive logic programming',
         'url': 'http://scholar.google.com/scholar?cluster=11832122604280518339&hl=en&oi=scholarr',
         'volume': '33',
         'year': '1997'},
 'citations_link': '/scholar?cites=11832122604280518339',
 'cites_per_year': {1997: 1, 1998: 2, 1999: 1, 2000: 1},
 'filled': True,
 'id_citations': 'pvkQAj0AAAAJ:1lhNe0rCu4AC',
 'source': 'citations'}
#+end_example
| 1997 | The IFF proof procedure for abductive logic programming | Journal of Logic Programming |
*** 1995 An argumentation-theoretic approach to logic program transformation :filled:
#+begin_example
{'bib': {'abstract': 'We present a methodology for proving that any program '
                     'transformation which preserves the least Herbrand model '
                     'semantics when applied to sets of Horn clauses also '
                     'preserves all semantics for normal logic programming '
                     'that can be formulated in argumentation-theoretic terms '
                     '[3, 4, 16]. These include stable model, partial stable '
                     'model, preferred extension, stationary expansion, '
                     'complete scenaria, stable theory, acceptability and '
                     'well-founded semantics. We apply our methodology to '
                     'prove that (some forms of) unfolding, folding and goal '
                     'replacement preserve all these semantics. We also show '
                     'the relationship of our methodology to that of Aravindan '
                     'and Dung [1].',
         'author': 'Francesca Toni and Robert A Kowalski',
         'cites': '5',
         'cites_id': '8760566210912798618',
         'eprint': 'http://citeseerx.ist.psu.edu/viewdoc/download?doi=10.1.1.37.3789&rep=rep1&type=pdf',
         'pages': '61-75',
         'publisher': 'Springer, Berlin, Heidelberg',
         'title': 'An argumentation-theoretic approach to logic program '
                  'transformation',
         'url': 'https://link.springer.com/chapter/10.1007/3-540-60939-3_5',
         'year': '1995'},
 'citations_link': '/scholar?cites=8760566210912798618',
 'cites_per_year': {1999: 1, 2000: 1, 2001: 1, 2002: 2},
 'filled': True,
 'id_citations': 'pvkQAj0AAAAJ:1sJd4Hv_s6UC',
 'source': 'citations'}
#+end_example
WARNING: caught exception: <class 'KeyError'>
*** 1987 Teaching Less and Learning More?‚Äêa Personal Experience :filled:
#+begin_example
{'bib': {'abstract': 'The main method of teaching in higher education in Great '
                     'Britain is identified as the lecture. It is argued that '
                     'this is inappropriate because of its failure to engender '
                     'the higher order skills which are demanded by present '
                     'day society. The pressures which maintain the use of '
                     'didactic teaching are identified as the physical and '
                     'financial constraints of the institution, the methods of '
                     'assessment used in courses, and the identification of '
                     'the teacher with the subject rather than the process of '
                     'teaching and learning. None of these pressures are seen '
                     'as insurmountable, and the process of change is viewed '
                     'as one which is largely to be instigated by the teaching '
                     'staff through the introduction of more student‚Äêcentred '
                     'methods.',
         'author': 'Robert Kowalski',
         'cites': '5',
         'cites_id': '14500230764751183090',
         'journal': 'PLET: Programmed Learning & Educational Technology',
         'number': '3',
         'pages': '174-186',
         'publisher': 'Taylor & Francis Group',
         'title': 'Teaching Less and Learning More?‚Äêa Personal Experience',
         'url': 'https://www.tandfonline.com/doi/abs/10.1080/0033039870240303',
         'volume': '24',
         'year': '1987'},
 'citations_link': '/scholar?cites=14500230764751183090',
 'cites_per_year': {1990: 2, 1991: 1, 1992: 1, 1993: 1},
 'filled': True,
 'id_citations': 'pvkQAj0AAAAJ:PVgj2kMGcgYC',
 'source': 'citations'}
#+end_example
| 1987 | Teaching Less and Learning More?‚Äêa Personal Experience | PLET: Programmed Learning & Educational Technology |
*** 2018 Using SWISH to realise interactive web based tutorials for logic based languages :filled:
#+begin_example
{'bib': {'abstract': 'Programming environments have evolved from purely text '
                     'based to using graphical user interfaces, and now we see '
                     'a move towards web based interfaces, such as Jupyter. '
                     'Web based interfaces allow for the creation of '
                     'interactive documents that consist of text and programs, '
                     'as well as their output. The output can be rendered '
                     'using web technology as, eg, text, tables, charts or '
                     'graphs. This approach is particularly suitable for '
                     'capturing data analysis workflows and creating '
                     'interactive educational material. This article describes '
                     'SWISH, a web front-end for Prolog that consists of a web '
                     'server implemented in SWI-Prolog and a client web '
                     'application written in JavaScript. SWISH provides a web '
                     'server where multiple users can manipulate and run the '
                     'same material, and it can be adapted to support Prolog '
                     'extensions. In this paper we describe the architecture '
                     'of SWISH, and describe two case studies of extensions of '
                     'Prolog, namely Probabilistic Logic Programming (PLP) and '
                     'Logic Production System (LPS), which have used SWISH to '
                     'provide tutorial sites.',
         'author': 'Jan Wielemaker and Fabrizio Riguzzi and Bob Kowalski and '
                   'Torbj√∂rn Lager and Fariba Sadri and Miguel Calejo',
         'cites': '4',
         'cites_id': '3744703652448468786',
         'eprint': 'https://arxiv.org/pdf/1808.08042',
         'journal': 'arXiv preprint arXiv:1808.08042',
         'title': 'Using SWISH to realise interactive web based tutorials for '
                  'logic based languages',
         'url': 'https://arxiv.org/abs/1808.08042',
         'year': '2018'},
 'citations_link': '/scholar?cites=3744703652448468786',
 'cites_per_year': {2018: 2, 2019: 2},
 'filled': True,
 'id_citations': 'pvkQAj0AAAAJ:6yz0xqPARnAC',
 'source': 'citations'}
#+end_example
| 2018 | Using SWISH to realise interactive web based tutorials for logic based languages | arXiv preprint arXiv:1808.08042 |
*** 2018 Obligation as optimal goal satisfaction :filled:
#+begin_example
{'bib': {'abstract': 'Formalising deontic concepts, such as obligation, '
                     'prohibition and permission, is normally carried out in a '
                     'modal logic with a possible world semantics, in which '
                     'some worlds are better than others. The main focus in '
                     'these logics is on inferring logical consequences, for '
                     'example inferring that the obligation O q is a logical '
                     'consequence of the obligations O p and O (p ‚Üí q). In '
                     'this paper we propose a non-modal approach in which '
                     'obligations are preferred ways of satisfying goals '
                     'expressed in first-order logic. To say that p is '
                     'obligatory, but may be violated, resulting in a less '
                     'than ideal situation s, means that the task is to '
                     'satisfy the goal p ‚à® s, and that models in which p is '
                     'true are preferred to models in which s is true. '
                     'Whereas, in modal logic, the preference relation between '
                     'possible worlds is part of the semantics of the logic, '
                     'in this non-modal approach, the preference relation '
                     'between first-order models ‚Ä¶',
         'author': 'Robert Kowalski and Ken Satoh',
         'cites': '4',
         'cites_id': '5904255959346621109',
         'eprint': 'https://link.springer.com/article/10.1007/s10992-017-9440-3',
         'journal': 'Journal of Philosophical Logic',
         'number': '4',
         'pages': '579-609',
         'publisher': 'Springer Netherlands',
         'title': 'Obligation as optimal goal satisfaction',
         'url': 'https://link.springer.com/article/10.1007/s10992-017-9440-3',
         'volume': '47',
         'year': '2018'},
 'citations_link': '/scholar?cites=5904255959346621109',
 'cites_per_year': {2017: 1, 2018: 1, 2019: 1},
 'filled': True,
 'id_citations': 'pvkQAj0AAAAJ:a3BOlSfXSfwC',
 'source': 'citations'}
#+end_example
| 2018 | Obligation as optimal goal satisfaction | Journal of Philosophical Logic |
*** 1998 From logic programming to multi-agent systems :filled:
#+begin_example
{'bib': {'abstract': 'In this paper we present an extension of logic '
                     'programming (LP) that is suitable not only for the" '
                     'rational" component of a single agent but also for the" '
                     'reactive" component and which can encompass multi-agent '
                     'systems. The extension to multi-agent systems, in '
                     'particular, arguably brings to LP the main benefits of '
                     'object-orientation, including encapsulation. We modify '
                     'an earlier abductive proof procedure and embed it within '
                     'an agent cycle. The proof procedure incorporates '
                     'abduction, definitions and integrity constraints within '
                     'a dynamic environment, where changes can be observed as '
                     'inputs. The definitions allow rational planning '
                     'behaviour and the integrity constraints allow reactive, '
                     'conditionaction type behaviour. The agent cycle provides '
                     "a resource-bounded mechanism that allows the agent's "
                     'thinking to be interrupted for the agent to record and '
                     'assimilate observations as input and execute actions as '
                     'output, before resuming further thinking. We argue that '
                     'these extensions of LP, accommodating multi-theories '
                     'embedded in a shared environment, provide the necessary '
                     'multi-agent functionality. We argue that our work '
                     "extends Shoham's agent0 and the BDI architecture.",
         'author': 'RA Kowalski and Fariba Sadri',
         'cites': '4',
         'cites_id': '6994458764915942811',
         'eprint': 'https://www.researchgate.net/profile/Fariba_Sadri/publication/2802170_From_Logic_Programming_to_Multi-agent_systems/links/5412f8130cf2fa878ad3cc7f/From-Logic-Programming-to-Multi-agent-systems.pdf',
         'journal': 'Submitted to publication',
         'title': 'From logic programming to multi-agent systems',
         'url': 'https://www.researchgate.net/profile/Fariba_Sadri/publication/2802170_From_Logic_Programming_to_Multi-agent_systems/links/5412f8130cf2fa878ad3cc7f/From-Logic-Programming-to-Multi-agent-systems.pdf',
         'year': '1998'},
 'citations_link': '/scholar?cites=6994458764915942811',
 'cites_per_year': {1999: 1, 2000: 1, 2001: 1, 2002: 1},
 'filled': True,
 'id_citations': 'pvkQAj0AAAAJ:bFI3QPDXJZMC',
 'source': 'citations'}
#+end_example
| 1998 | From logic programming to multi-agent systems | Submitted to publication |
*** 1996 A unifying framework for alp, clp and sqo :filled:
#+begin_example
{'bib': {'abstract': 'This paper presents the TPCALP framework, a '
                     'theorem-proving approach which aims to unify Abductive '
                     'Logic Programming (ALP), Constraint Logic Programming '
                     '(CLP) and Semantic Query Optimization (SQO). The '
                     'framework combines the use of de nitions, as in ordinary '
                     'logic programming, with the use of integrity '
                     'constraints, as in ALP and SQO. The programmer can '
                     'choose to represent knowledge in either form subject to '
                     'the condition that the integrity constraints '
                     'be\\properties" of the de nitions. The paper de nes a '
                     'proof procedure for the framework and presents some '
                     'formal results for the proof procedure with respect to '
                     'the framework semantics. The proof procedure executes de '
                     'nitions in conventional logic programming goal reduction '
                     'manner, and integrity constraints in forward reasoning '
                     'style to check potential answers for consistency. The '
                     'integrity constraints are used to process goals when the '
                     'de nitions cannot be used, either because they are not '
                     'accessible (as in ALP and SQO) or because their use '
                     'would be computationally explosive (as in CLP and more '
                     'generally).',
         'author': 'Robert A Kowalski and Gerhard Wetzel and Francesca Toni',
         'cites': '4',
         'cites_id': '10042311567736905378',
         'eprint': 'https://pdfs.semanticscholar.org/2546/a0ba82cf0066b4560130088f44925b001193.pdf',
         'publisher': 'Technical report, Department of Computing, Imperial '
                      'College, London',
         'title': 'A unifying framework for alp, clp and sqo',
         'url': 'https://pdfs.semanticscholar.org/2546/a0ba82cf0066b4560130088f44925b001193.pdf',
         'year': '1996'},
 'citations_link': '/scholar?cites=10042311567736905378',
 'cites_per_year': {1996: 1, 1997: 1, 1998: 1, 1999: 1},
 'filled': True,
 'id_citations': 'pvkQAj0AAAAJ:Zph67rFs4hoC',
 'source': 'citations'}
#+end_example
WARNING: caught exception: <class 'KeyError'>
*** 1986 An application of general purpose theorem-proving to database integrity :filled:
#+begin_example
{'bib': {'author': 'Fariba Sadri and Robert Kowalski',
         'cites': '4',
         'cites_id': '7891376813640867766',
         'publisher': 'University of London, Imperial College of Science and '
                      'Technology, Department of Computing',
         'title': 'An application of general purpose theorem-proving to '
                  'database integrity',
         'url': 'http://scholar.google.com/scholar?cluster=7891376813640867766&hl=en&oi=scholarr',
         'year': '1986'},
 'citations_link': '/scholar?cites=7891376813640867766',
 'cites_per_year': {1989: 2, 1990: 1, 1991: 1},
 'filled': True,
 'id_citations': 'pvkQAj0AAAAJ:bnK-pcrLprsC',
 'source': 'citations'}
#+end_example
WARNING: caught exception: <class 'KeyError'>
*** 1984 Logic for knowledge representation :filled:
#+begin_example
{'bib': {'abstract': 'The very terminology "logic programming" tends to '
                     'reinforce the view that logic is another, albeit very '
                     'important, tool to further the ends of the software '
                     'engineer. This perhaps has distracted attention from the '
                     'more revolutionary potential of logic to alter the '
                     'nature of software engineering altogether. In a small '
                     'and preliminary way, new applications such as those '
                     'illustrated in this paper may give an indication of the '
                     'longer terms possibilities.',
         'author': 'Robert A Kowalski',
         'cites': '4',
         'cites_id': '14859247503642906779',
         'pages': '1-12',
         'publisher': 'Springer, Berlin, Heidelberg',
         'title': 'Logic for knowledge representation',
         'url': 'https://link.springer.com/chapter/10.1007/3-540-13883-8_61',
         'year': '1984'},
 'citations_link': '/scholar?cites=14859247503642906779',
 'cites_per_year': {1986: 2, 1987: 1, 1988: 1},
 'filled': True,
 'id_citations': 'pvkQAj0AAAAJ:nb7KW1ujOQ8C',
 'source': 'citations'}
#+end_example
WARNING: caught exception: <class 'KeyError'>
*** 2013 Logic Programming in the 1970s :filled:
#+begin_example
{'bib': {'abstract': 'Logic programming emerged in the 1970s from debates '
                     'concerning procedural versus declarative representations '
                     'of knowledge in artificial intelligence. In those days, '
                     'declarative representations were associated mainly with '
                     'bottom-up proof procedures, such as hyper-resolution. '
                     'The development of logic programming showed that '
                     'procedural representations could be obtained by applying '
                     'top-down proof procedures, such as linear resolution, to '
                     'declarative representations in logical form.',
         'author': 'Robert Kowalski',
         'cites': '3',
         'cites_id': '14720049293983563254',
         'eprint': 'https://www.researchgate.net/profile/Robert_Kowalski5/publication/267128008_Logic_Programming_in_the_1970s/links/55b8ac1208ae9289a08dc091/Logic-Programming-in-the-1970s.pdf',
         'pages': '11-22',
         'publisher': 'Springer, Berlin, Heidelberg',
         'title': 'Logic Programming in the 1970s',
         'url': 'https://link.springer.com/chapter/10.1007/978-3-642-40564-8_2',
         'year': '2013'},
 'citations_link': '/scholar?cites=14720049293983563254',
 'cites_per_year': {1982: 1, 1983: 1, 1984: 1},
 'filled': True,
 'id_citations': 'pvkQAj0AAAAJ:kzcrU_BdoSEC',
 'source': 'citations'}
#+end_example
WARNING: caught exception: <class 'KeyError'>
*** 2010 Towards a Logic-based Production System Language :filled:
#+begin_example
{'bib': {'abstract': 'In this paper we present a system, called LPS, that '
                     'combines production rules and logic programs in a single '
                     'logic-based framework. The framework gives both an '
                     'operational and model-theoretic semantics to production '
                     'rules, and to logic programs extended with a database of '
                     'facts that is modified by destructive assignment. The '
                     'modeltheoretic semantics is obtained by separating the '
                     'production system working memory into facts and goals. '
                     'Logic programs are used to define macro-actions, '
                     'ramifications of the facts and to reduce goals to '
                     'sub-goals, including actions. The execution of actions '
                     'generates a sequence of database states. In the case of '
                     'successful termination, this sequence, taken as a whole, '
                     'serves as the basis for a model of the production rules.',
         'author': 'RA Kowalski and Fariba Sadri',
         'cites': '3',
         'cites_id': '12719158300626158267',
         'eprint': 'https://www.researchgate.net/profile/Robert_Kowalski5/publication/265867127_Towards_a_Logic-based_Production_System_Language/links/5558430b08ae6fd2d82506f3.pdf',
         'publisher': 'Technical report, Department of Computing, Imperial '
                      'College London',
         'title': 'Towards a Logic-based Production System Language',
         'url': 'https://www.researchgate.net/profile/Robert_Kowalski5/publication/265867127_Towards_a_Logic-based_Production_System_Language/links/5558430b08ae6fd2d82506f3.pdf',
         'year': '2010'},
 'citations_link': '/scholar?cites=12719158300626158267',
 'cites_per_year': {2012: 1, 2013: 1, 2014: 1},
 'filled': True,
 'id_citations': 'pvkQAj0AAAAJ:hqOjcs7Dif8C',
 'source': 'citations'}
#+end_example
WARNING: caught exception: <class 'KeyError'>
*** 2014 Computational Logic. :filled:
#+begin_example
{'bib': {'abstract': 'Computational logic was born in the twentieth century '
                     'and evolved in close symbiosis with the first electronic '
                     'computers and the growing importance of computer '
                     'science, informatics and artificial intelligence (AI). '
                     'The field has now outgrown its humble beginnings and '
                     'early expectations by far: with more than ten thousand '
                     'people working in research and development of logic and '
                     'logic-related methods, with several dozen international '
                     'conferences and several times as many workshops '
                     'addressing the growing richness and diversity of the '
                     'field, and with the foundational role and importance '
                     'these methods now assume in mathematics, computer '
                     'science, artificial intelligence, cognitive science, '
                     'linguistics, law, mechatronics and many other '
                     'engineering fields where logic-related techniques are '
                     'used inter alia to state and settle correctness issues, '
                     'the field has diversified in ways that the pure '
                     'logicians working in the early decades of the twenties '
                     'century could have hardly anticipated-let alone those '
                     'researchers of the previous centuries presented in this '
                     'eleven volume account of the history of logic. Dating '
                     'back to its roots in Greek, Indian, Chinese and Arabic '
                     'philosophy the field has grown in richness and diversity '
                     'over the centuries to finally reach the modern '
                     'methodological approach first expressed in the work of '
                     'Gottlob Frege. 1 Logical calculi, which not only capture '
                     'formal reasoning, but also an important aspect of human '
                     'thought, are now amenable to investigation with '
                     'mathematical rigour and computational support and '
                     'fertilized the early Leibniz‚Äôdream of mechanized '
                     'reasoning:‚ÄúCalculemus‚Äù. The beginning of the last '
                     'century saw the influence of ‚Ä¶',
         'author': 'J√∂rg H Siekmann and Dov Gabbay and Martin Davis and Dov M '
                   'Gabbay and John Harrison and Josef Urban and Freek Wiedijk '
                   'and Christoph Benzm√ºller and Dale Miller and Claude '
                   'Kirchner and H√©l√®ne Kirchner and Didier Dubois and Henri '
                   'Prade and Fairouz Kamareddine and Joe Wells and Christoph '
                   'Zengler and Henk Barendregt and Jos CM Baeten and Davide '
                   'Sangiorgi and Klaus Ambos-Spies and Peter A Fejer and '
                   'Lance Fortnow and Steven Homer and Robert Kowalski and '
                   'Jack Minker and Dietmar Seipel and Carlo Zaniolo and '
                   'John-Jules Ch Meyer and Matthias Knorr and Pascal Hitzler '
                   'and Jens Lehmann and Axel Polleres',
         'cites': '2',
         'cites_id': '16742027064721381685',
         'pages': '15-30',
         'title': 'Computational Logic.',
         'url': 'http://books.google.com/books?hl=en&lr=&id=g1pzAwAAQBAJ&oi=fnd&pg=PA15&dq=info:NZmxjOmgV-gJ:scholar.google.com&ots=WsEguPDJq7&sig=t2bbmAJ-8HpqR1pNiS8IM3hKcdY',
         'year': '2014'},
 'citations_link': '/scholar?cites=16742027064721381685',
 'cites_per_year': {2016: 1, 2017: 1},
 'filled': True,
 'id_citations': 'pvkQAj0AAAAJ:BzfGm06jWhQC',
 'source': 'citations'}
#+end_example
WARNING: caught exception: <class 'KeyError'>
*** 2010 Computational Logic and Human Thinking: How to be Artificially Intelligent :filled:
#+begin_example
{'bib': {'abstract': 'The mere possibility of Artificial Intelligence (AI)‚Äìof '
                     'machines that can think and act as intelligently as '
                     'humans‚Äìcan generate strong emotions. While some '
                     'enthusiasts are excited by the thought that one day '
                     'machines may become more intelligent than people, many '
                     'of its critics view such a prospect with horror.',
         'author': 'Robert Kowalski',
         'cites': '2',
         'cites_id': '996047112392331327',
         'eprint': 'http://www.doc.ic.ac.uk/~rak/papers/newbook.pdf',
         'publisher': 'Draft',
         'title': 'Computational Logic and Human Thinking: How to be '
                  'Artificially Intelligent',
         'url': 'http://www.doc.ic.ac.uk/~rak/papers/newbook.pdf',
         'year': '2010'},
 'citations_link': '/scholar?cites=996047112392331327',
 'cites_per_year': {2013: 1, 2014: 1},
 'filled': True,
 'id_citations': 'pvkQAj0AAAAJ:ILKRHgRFtOwC',
 'source': 'citations'}
#+end_example
WARNING: caught exception: <class 'KeyError'>
*** 2006 Uso da pesquisa-a√ß√£o como um ve√≠culo para o desenvolvimento profissional docente e transforma√ß√£o da pratica pedag√≥gica numa Universidade Federal Rural no Brasil :filled:
#+begin_example
{'bib': {'abstract': 'O Reposit√≥rio Institucional da Universidade Federal '
                     'Rural da Amaz√¥nia (RIUFRA) √© um dispositivo de '
                     'armazenamento e dissemina√ß√£o das obras intelectuais da '
                     'UFRA, produzidas no √¢mbito das atividades de pesquisa, '
                     'ensino e extens√£o da institui√ß√£o. √â composto de '
                     'documentos em formato digital, provenientes das '
                     'atividades desenvolvidas pelo corpo docente, discente e '
                     't√©cnico-administrativo da UFRA e por obras elaboradas a '
                     'partir de conv√™nio ou colabora√ß√£o entre a institui√ß√£o e '
                     'outros √≥rg√£os publicados em autoria e/ou coautoria.',
         'author': 'Marcel do Nascimento BOTELHO and Robert Kowalski and Steve '
                   'Bartlett',
         'cites': '2',
         'cites_id': '15732421228106598369',
         'eprint': 'http://repositorio.ufra.edu.br/jspui/bitstream/123456789/440/1/Uso%20da%20pesquisa-a%C3%A7%C3%A3o%20como%20um%20ve%C3%ADculo%20para%20o%20desenvolvimento%20profissional....pdf',
         'publisher': 'ABEAS/Revista Educa√ß√£o Agr√≠cola Superior',
         'title': 'Uso da pesquisa-a√ß√£o como um ve√≠culo para o desenvolvimento '
                  'profissional docente e transforma√ß√£o da pratica pedag√≥gica '
                  'numa Universidade Federal Rural no Brasil',
         'url': 'http://repositorio.ufra.edu.br/jspui/handle/123456789/440',
         'year': '2006'},
 'citations_link': '/scholar?cites=15732421228106598369',
 'cites_per_year': {2008: 1, 2009: 1},
 'filled': True,
 'id_citations': 'pvkQAj0AAAAJ:jL-93Qbq4QoC',
 'source': 'citations'}
#+end_example
WARNING: caught exception: <class 'KeyError'>
*** 1990 Programming in the year 2010 :filled:
#+begin_example
{'bib': {'abstract': 'In trying to make predictions about a field so young as '
                     'computing, it is useful to draw comparisons with a '
                     'related and much older field such as law.',
         'author': 'Robert Kowalski',
         'cites': '2',
         'cites_id': '16197149035686621020',
         'pages': '206-207',
         'publisher': 'Springer, Berlin, Heidelberg',
         'title': 'Programming in the year 2010',
         'url': 'https://link.springer.com/content/pdf/10.1007/978-3-642-76274-1_13.pdf',
         'year': '1990'},
 'citations_link': '/scholar?cites=16197149035686621020',
 'cites_per_year': {2003: 1, 2004: 1},
 'filled': True,
 'id_citations': 'pvkQAj0AAAAJ:uWQEDVKXjbEC',
 'source': 'citations'}
#+end_example
WARNING: caught exception: <class 'KeyError'>
*** 1990 A proposal for an undergraduate degree in the uses of logic :filled:
#+begin_example
{'bib': {'abstract': 'Objectives. The goal is to train students in the general '
                     'skills of logical reasoning, problem-solving and '
                     'effective communication, which can be applied in any '
                     'discipline, but especially in business and '
                     'administration. It would be more practical than a '
                     'conventional course in pure mathematics, philosophy or '
                     'formal logic, and more rigorous than a course in '
                     'business studies, languages or social studies.',
         'author': 'Robert Kowalski',
         'cites': '2',
         'cites_id': '13157271043523567472',
         'eprint': 'https://www.doc.ic.ac.uk/~rak/papers/proposal%20for%20undergraduate%20degree.pdf',
         'pages': '94-97',
         'publisher': 'Springer, Berlin, Heidelberg',
         'title': 'A proposal for an undergraduate degree in the uses of logic',
         'url': 'https://link.springer.com/content/pdf/10.1007/3-540-52952-7_12.pdf',
         'year': '1990'},
 'citations_link': '/scholar?cites=13157271043523567472',
 'cites_per_year': {2015: 1, 2016: 1},
 'filled': True,
 'id_citations': 'pvkQAj0AAAAJ:0EnyYjriUFMC',
 'source': 'citations'}
#+end_example
WARNING: caught exception: <class 'KeyError'>
*** 1989 Central government pension rules as a logic program :filled:
#+begin_example
{'bib': {'abstract': 'An automated legal reasoning system for the Central '
                     'Civil Services (CCS) Pension Rules is under development. '
                     'This paper discusses the use of logic programming for '
                     'representing the knowledge contained in the rules and '
                     'how the logic program can be used as an expert system. '
                     'The emphasis of the paper is in the use of temporal '
                     'reasoning in the laws under consideration, the '
                     'separation of the logic part of the program from the '
                     'user data interface and the interaction of the user '
                     'through forms with the knowledge base. The importance of '
                     'the interplay of the propositional logic analysis of the '
                     'rules with the entity-relationship analysis for the '
                     'determinmation of predicates and parameters is also '
                     'discused.',
         'author': 'KK Bajaj and RK Dubash and Robert Kowalski',
         'cites': '2',
         'cites_id': '878319129366639530',
         'pages': '19-28',
         'publisher': 'Springer, Berlin, Heidelberg',
         'title': 'Central government pension rules as a logic program',
         'url': 'https://link.springer.com/chapter/10.1007/BFb0018365',
         'year': '1989'},
 'citations_link': '/scholar?cites=878319129366639530',
 'cites_per_year': {1989: 1, 1990: 1},
 'filled': True,
 'id_citations': 'pvkQAj0AAAAJ:KlAtU1dfN6UC',
 'source': 'citations'}
#+end_example
WARNING: caught exception: <class 'KeyError'>
*** 1987 TAPSOFT'87. Proceedings of the International Joint Conference on Theory and Practice of Software Development, Pisa, Italy, March 1987: Volume 1: Advanced Seminar on Foundations ‚Ä¶ :filled:
#+begin_example
{'bib': {'abstract': "TAPSOFT'87 consists of three parts: i, Advanced Seminar "
                     'on Foundations of Innovative Software Development '
                     'concerns new directions in software development on the '
                     'basis of recent technological and theoretical advances. '
                     'ii, Colloquium on Trees in Algebra and Programming '
                     'covers the formal aspect and properties of trees, and '
                     'more generally, combinatorial and algebraic structures '
                     'in all fields of Computer Science. Besides the customary '
                     'topics, CAAP includes contributions related to '
                     'specifications, communicating systems and type theory. '
                     'iii, Colloquium on Functional and Logic Programming and '
                     'Specifications focuses on those aspects of Functional '
                     'and Logic Programming which are most important in '
                     'innovative software development.',
         'author': 'Hartmut Ehrig and Robert Kowalski and Giorgio Levi and Ugo '
                   'Montanari',
         'cites': '2',
         'cites_id': '17792297940841314915',
         'publisher': 'Springer Berlin Heidelberg',
         'title': "TAPSOFT'87. Proceedings of the International Joint "
                  'Conference on Theory and Practice of Software Development, '
                  'Pisa, Italy, March 1987: Volume 1: Advanced Seminar on '
                  'Foundations ‚Ä¶',
         'url': 'http://acta.bibl.u-szeged.hu/12445/1/cybernetica_008_fasc_003_313-314.pdf',
         'year': '1987'},
 'citations_link': '/scholar?cites=17792297940841314915',
 'cites_per_year': {1992: 1, 1993: 1},
 'filled': True,
 'id_citations': 'pvkQAj0AAAAJ:5ugPr518TE4C',
 'source': 'citations'}
#+end_example
WARNING: caught exception: <class 'KeyError'>
WARNING: caught exception: <class 'AttributeError'>
*** 1980 Selected Papers :filled:
#+begin_example
{'bib': {'author': 'Wolfgang Bibel and Robert A Kowalski',
         'cites': '2',
         'cites_id': '7463218809403603407',
         'publisher': 'Springer',
         'title': 'Selected Papers',
         'url': 'http://scholar.google.com/scholar?cluster=7463218809403603407&hl=en&oi=scholarr',
         'year': '1980'},
 'citations_link': '/scholar?cites=7463218809403603407',
 'cites_per_year': {2013: 2},
 'filled': True,
 'id_citations': 'pvkQAj0AAAAJ:IaI1MmNe2tcC',
 'source': 'citations'}
#+end_example
WARNING: caught exception: <class 'KeyError'>
*** 1980 5th Conference on Automated Deduction, LN in Computer Sc. 87 :filled:
#+begin_example
{'bib': {'author': 'W Bibel and R Kowalski',
         'cites': '2',
         'cites_id': '5069564589989035634',
         'publisher': 'Springer, Berlin',
         'title': '5th Conference on Automated Deduction, LN in Computer Sc. '
                  '87',
         'url': 'http://scholar.google.com/scholar?cluster=5069564589989035634&hl=en&oi=scholarr',
         'year': '1980'},
 'citations_link': '/scholar?cites=5069564589989035634',
 'cites_per_year': {1983: 1, 1984: 1},
 'filled': True,
 'id_citations': 'pvkQAj0AAAAJ:j7_hQOaDUrUC',
 'source': 'citations'}
#+end_example
WARNING: caught exception: <class 'KeyError'>
*** 1980 5th Conference on Automated Deduction: Les Arcs, France, July 8-11, 1980 :filled:
#+begin_example
{'bib': {'abstract': 'This volume contains the papers which were selected by '
                     'the program committee from the 62 papers submitted to '
                     'the conference. These papers range over most of the main '
                     'approaches to the automation of deductive reasoning. '
                     'They describe both theoretical status and practical '
                     'investigations of implementations and their '
                     'applications, especially in computing science.',
         'author': 'Wolfgang Bibel and Robert Kowalski',
         'cites': '2',
         'cites_id': '10826250800459869950',
         'number': '87',
         'publisher': 'Springer Science & Business Media',
         'title': '5th Conference on Automated Deduction: Les Arcs, France, '
                  'July 8-11, 1980',
         'url': 'http://books.google.com/books?hl=en&lr=&id=iJPFsBvp_SQC&oi=fnd&pg=PA1&dq=info:_u6yOr6RPpYJ:scholar.google.com&ots=JNPmZ8ZAks&sig=vnSmBxaHG1iKTEWlS9st1Korz20',
         'year': '1980'},
 'citations_link': '/scholar?cites=10826250800459869950',
 'cites_per_year': {1983: 1, 1984: 1},
 'filled': True,
 'id_citations': 'pvkQAj0AAAAJ:geHnlv5EZngC',
 'source': 'citations'}
#+end_example
WARNING: caught exception: <class 'KeyError'>
*** 1972 And-or Graphs, Theorem-proving Graphs and Bi-directional Graphs :filled:
#+begin_example
{'bib': {'author': 'Robert Kowalski',
         'cites': '2',
         'cites_id': '17386140209379717713',
         'publisher': 'Edinburgh University',
         'title': 'And-or Graphs, Theorem-proving Graphs and Bi-directional '
                  'Graphs',
         'url': 'http://scholar.google.com/scholar?cluster=17386140209379717713&hl=en&oi=scholarr',
         'year': '1972'},
 'citations_link': '/scholar?cites=17386140209379717713',
 'cites_per_year': {1975: 1, 1976: 1},
 'filled': True,
 'id_citations': 'pvkQAj0AAAAJ:ubry08Y2EpUC',
 'source': 'citations'}
#+end_example
WARNING: caught exception: <class 'KeyError'>
*** 2017 Programming Machine Ethics by Lu√≠s Moniz Pereira and Ari Saptawijaya :filled:
#+begin_example
{'bib': {'abstract': 'PME includes an extensive survey of research on machine '
                     'ethics, and investigates a number of examples that have '
                     'been studied in the ethics literature, including the '
                     'classic trolley problem: A runaway trolley is headed '
                     'straight for five people walking on a railway track, '
                     'with no means of escape. A railwayman, observing the '
                     'situation from a distance, can throw a switch to divert '
                     'the train onto a side track. However, there is a single '
                     'man standing on the side track, who also has no means of '
                     'escape. Is it morally permissible for the railwayman to '
                     'throw the switch? Most people in psychological '
                     'experiments and professional ethicists alike agree that '
                     'it is.',
         'author': 'Robert Kowalski',
         'cites': '1',
         'cites_id': '5854181662389676849',
         'eprint': 'https://link.springer.com/content/pdf/10.1007/s00146-017-0690-y.pdf',
         'number': '2',
         'pages': '299-300',
         'publisher': 'Springer London',
         'title': 'Programming Machine Ethics by Lu√≠s Moniz Pereira and Ari '
                  'Saptawijaya',
         'url': 'https://link.springer.com/content/pdf/10.1007/s00146-017-0690-y.pdf',
         'volume': '32',
         'year': '2017'},
 'citations_link': '/scholar?cites=5854181662389676849',
 'cites_per_year': {2019: 1},
 'filled': True,
 'id_citations': 'pvkQAj0AAAAJ:HeT0ZceujKMC',
 'source': 'citations'}
#+end_example
WARNING: caught exception: <class 'KeyError'>
*** 2010 Computational logic and human life: How to be artificially intelligent :filled:
#+begin_example
{'bib': {'abstract': 'The mere possibility of Artificial Intelligence (AI)‚Äìof '
                     'machines that can think and act as intelligently as '
                     'humans‚Äìcan generate strong emotions. While some of its '
                     'enthusiasts are excited by the thought that one day '
                     'machines may become more intelligent than people, many '
                     'of its critics view such a prospect with horror.',
         'author': 'Robert Kowalski',
         'cites': '1',
         'cites_id': '13355019910033360036',
         'journal': 'Preprint, Department of Computing, Imperial College '
                    'London',
         'title': 'Computational logic and human life: How to be artificially '
                  'intelligent',
         'url': 'http://scholar.google.com/scholar?cluster=13355019910033360036&hl=en&oi=scholarr',
         'year': '2010'},
 'citations_link': '/scholar?cites=13355019910033360036',
 'cites_per_year': {2010: 1},
 'filled': True,
 'id_citations': 'pvkQAj0AAAAJ:WbkHhVStYXYC',
 'source': 'citations'}
#+end_example
| 2010 | Computational logic and human life: How to be artificially intelligent | Preprint, Department of Computing, Imperial College London |
*** 2009 LPS-a Logic-Based Production System Framework :filled:
#+begin_example
{'bib': {'abstract': 'Production rules and logic programs can be combined in a '
                     'single logic-based framework. The framework gives both '
                     'an operational and modeltheoretic semantics to '
                     'production rules, as well as to logic programs extended '
                     'with a database of facts that is modified by destructive '
                     'assignment. The model-theoretic semantics is obtained by '
                     'separating the production system working memory into '
                     'facts and goals. Logic programs are used to define '
                     'ramifications of the facts and to reduce goals to '
                     'sub-goals, including actions. The execution of actions '
                     'generates a sequence of states, which serves as a '
                     'candidate model of the production rules.',
         'author': 'Robert Kowalski and Fariba Sadri',
         'cites': '1',
         'cites_id': '11246546736889041200',
         'eprint': 'https://www.doc.ic.ac.uk/~rak/papers/LPS%20Jan%2009.pdf',
         'journal': 'Department of Computing, Imperial College',
         'title': 'LPS-a Logic-Based Production System Framework',
         'url': 'https://www.doc.ic.ac.uk/~rak/papers/LPS%20Jan%2009.pdf',
         'year': '2009'},
 'citations_link': '/scholar?cites=11246546736889041200',
 'cites_per_year': {2009: 1},
 'filled': True,
 'id_citations': 'pvkQAj0AAAAJ:XiSMed-E-HIC',
 'source': 'citations'}
#+end_example
| 2009 | LPS-a Logic-Based Production System Framework | Department of Computing, Imperial College |
*** 2006 Computational logic as a dual process model of thought :filled:
#+begin_example
{'bib': {'abstract': 'In the dual process model of thinking, developed in '
                     'Cognitive Psychology, two kinds of thinking operate in '
                     'tandem. Intuitive thinking is automatic, effortless and '
                     'largely subconscious, while deliberative thinking is '
                     'controlled, effortful and mostly conscious. Logic is '
                     'normally associated only with deliberative thinking. '
                     'However, in this paper I argue that Computational Logic '
                     'can be used to model both intuitive and deliberative '
                     'thinking, as well as some of the relationships between '
                     'them.',
         'author': 'Bob Kowalski',
         'cites': '1',
         'cites_id': '375851728545781886',
         'eprint': 'https://pdfs.semanticscholar.org/3aa3/b8712f1dbc99d0685799afbdf17a1777a2dd.pdf',
         'publisher': 'London: Imperial College',
         'title': 'Computational logic as a dual process model of thought',
         'url': 'https://pdfs.semanticscholar.org/3aa3/b8712f1dbc99d0685799afbdf17a1777a2dd.pdf',
         'year': '2006'},
 'citations_link': '/scholar?cites=375851728545781886',
 'cites_per_year': {2019: 1},
 'filled': True,
 'id_citations': 'pvkQAj0AAAAJ:wMgC3FpKEyYC',
 'source': 'citations'}
#+end_example
WARNING: caught exception: <class 'KeyError'>
*** 2005 Reconciling Logic and Objects :filled:
#+begin_example
{'bib': {'abstract': 'Logic and objects can be combined and reconciled in at '
                     'least three main ways. The simplest and most '
                     'conservative way is to use logic to describe OO systems. '
                     'This is useful for specifying and proving properties of '
                     'OO systems. A more ambitious, but also straight-forward '
                     'way is to use logic to implement OO methods. Used in '
                     'this way, logic can implement both condition-action '
                     'rules and goal-reduction rules. In this combination of '
                     'logic and objects, objects can be viewed as agents '
                     'embedded in an object-oriented world, which use logic to '
                     'represent and reason about the world, as well as to '
                     'generate actions to change the world. This second way '
                     'reconciles logic and objects by allocating them separate '
                     'areas of concern: Objects provide semantic structure, '
                     'and logic provides their syntactic representation. '
                     'Unfortunately, this second way leaves a major conflict, '
                     'concerning their different views of atomic facts, '
                     'unresolved.',
         'author': 'Robert Kowalski',
         'cites': '1',
         'cites_id': '16264305598898558103',
         'pages': 'xv-xv',
         'publisher': 'IEEE',
         'title': 'Reconciling Logic and Objects',
         'url': 'https://ieeexplore.ieee.org/abstract/document/1592192/',
         'year': '2005'},
 'citations_link': '/scholar?cites=16264305598898558103',
 'cites_per_year': {2007: 1},
 'filled': True,
 'id_citations': 'pvkQAj0AAAAJ:738O_yMBCRsC',
 'source': 'citations'}
#+end_example
WARNING: caught exception: <class 'KeyError'>
*** 2005 Logic and modules :filled:
#+begin_example
{'bib': {'abstract': 'In this paper I investigate the implications for '
                     'modularity of the view that the mind can be understood '
                     'as a graph of connections (Kowalski 1975, 1979) among '
                     'sentences expressed in the clausal form of logic. I '
                     'argue that modularity is the property that such a graph '
                     'may contain implicit or explicit sub-graphs, with a high '
                     'degree of connectivity within subgraphs and a low degree '
                     'between sub-graphs. I use the computational '
                     'interpretation of clauses as logic programs, to make a '
                     'case for clausal logic as the high-level language of '
                     'thought, which can be executed directly at the logical '
                     'level or, alternatively, can be compiled into '
                     'lower-level representation languages. Different modules '
                     'can be compiled into different lower-level languages, '
                     'provided their logical connections with other modules '
                     'are preserved. I also illustrate a possible relationship '
                     'between connection graphs and connectionism.',
         'author': 'Robert Kowalski',
         'cites': '1',
         'cites_id': '6009103339757230215',
         'eprint': 'https://www.researchgate.net/profile/Robert_Kowalski5/publication/238676248_Logic_and_Modules/links/53da3cb00cf2a19eee882ec8/Logic-and-Modules.pdf',
         'journal': 'Department of Computing, Imperial College London',
         'title': 'Logic and modules',
         'url': 'https://www.researchgate.net/profile/Robert_Kowalski5/publication/238676248_Logic_and_Modules/links/53da3cb00cf2a19eee882ec8/Logic-and-Modules.pdf',
         'year': '2005'},
 'citations_link': '/scholar?cites=6009103339757230215',
 'cites_per_year': {2008: 1},
 'filled': True,
 'id_citations': 'pvkQAj0AAAAJ:ufrVoPGSRksC',
 'source': 'citations'}
#+end_example
| 2005 | Logic and modules | Department of Computing, Imperial College London |
*** 1990 Representing change in air traffic flow management using the event calculus :filled:
#+begin_example
{'bib': {'abstract': 'A practical approach to temporal reasoning based on the '
                     'event calculus is explored in the context of air traffic '
                     'flow management (ATFM). The work reported is part of the '
                     'EQUATOR (ESPRIT project 2409). ATFM demonstrates a '
                     'requirement for managing objects in time and space, '
                     'real-time characteristics and large scale. Current ATFM '
                     'procedures are essentially manual and have evolved '
                     'within physical, financial and political constraints. '
                     'Proposals for centralising air traffic management in '
                     'Europe provide an ideal opportunity for a radical '
                     'reanalysis.< >',
         'author': 'JM Bedford and RA Kowalski and BL Rosser',
         'cites': '1',
         'cites_id': '17325931734478427662',
         'pages': '2/1-2/3',
         'publisher': 'IET',
         'title': 'Representing change in air traffic flow management using '
                  'the event calculus',
         'url': 'https://ieeexplore.ieee.org/abstract/document/189769/',
         'year': '1990'},
 'citations_link': '/scholar?cites=17325931734478427662',
 'cites_per_year': {1991: 1},
 'filled': True,
 'id_citations': 'pvkQAj0AAAAJ:MXK_kJrjxJIC',
 'source': 'citations'}
#+end_example
WARNING: caught exception: <class 'KeyError'>
*** 1987 Leith and legal logic programming :filled:
#+begin_example
{'bib': {'author': 'R Kowalski and M Sergot',
         'cites': '1',
         'cites_id': '6710164297584539297',
         'journal': 'Computer Journal',
         'number': '3',
         'pages': '285-285',
         'publisher': 'CAMBRIDGE UNIV PRESS',
         'title': 'Leith and legal logic programming',
         'url': 'http://scholar.google.com/scholar?cluster=6710164297584539297&hl=en&oi=scholarr',
         'volume': '30',
         'year': '1987'},
 'citations_link': '/scholar?cites=6710164297584539297',
 'cites_per_year': {1991: 1},
 'filled': True,
 'id_citations': 'pvkQAj0AAAAJ:p__nRnzSRKYC',
 'source': 'citations'}
#+end_example
| 1987 | Leith and legal logic programming | Computer Journal |
*** 1986 Biology of Tachyporus spp. :filled:
#+begin_example
{'bib': {'abstract': 'The chronology of Tachyporus biology suggests that the '
                     'larval stages are more important predators of cereal '
                     'aphids than the adults. The proportion of the spring '
                     'adult population found in the crop layer was positively '
                     'correlated with the degree of infestation of the crop by '
                     'weeds. This was also true for the density of the larval '
                     'populations found on the soil surface. The development '
                     'of the Tachyporus populations was influenced by a '
                     '‚Äòbetween-areas‚Äô density-dependent loss acting on either '
                     'the late larval or the pupal stages. Cereal aphid '
                     'population density was not consistently related to '
                     'Tachyporus numbers or distribution in the crop. It is '
                     'suggested that only when other factors contributing to '
                     'the dynamics of aphid population development remain '
                     'constant can the action of such polyphagous predators be '
                     'demonstrated to have any significant influence upon '
                     'those aphid populations.',
         'author': 'R Kowalski',
         'cites': '1',
         'cites_id': '6608547407655493142',
         'eprint': 'https://www.researchgate.net/profile/Robert_Kowalski8/publication/308947806_Biology_of_Tachyporus_spp_Coleoptera_Staphylinidae_in_relation_to_their_role_as_predators_of_cereal_aphids/links/57f93af108ae8da3ce5a11ca/Biology-of-Tachyporus-spp-Coleoptera-Staphylinidae-in-relation-to-their-role-as-predators-of-cereal-aphids.pdf',
         'journal': 'Coleoptera: Staphylinidae) in relation to their role',
         'title': 'Biology of Tachyporus spp.',
         'url': 'https://www.researchgate.net/profile/Robert_Kowalski8/publication/308947806_Biology_of_Tachyporus_spp_Coleoptera_Staphylinidae_in_relation_to_their_role_as_predators_of_cereal_aphids/links/57f93af108ae8da3ce5a11ca/Biology-of-Tachyporus-spp-Coleoptera-Staphylinidae-in-relation-to-their-role-as-predators-of-cereal-aphids.pdf',
         'year': '1986'},
 'citations_link': '/scholar?cites=6608547407655493142',
 'cites_per_year': {1990: 1},
 'filled': True,
 'id_citations': 'pvkQAj0AAAAJ:lvd772isFD0C',
 'source': 'citations'}
#+end_example
| 1986 | Biology of Tachyporus spp. | Coleoptera: Staphylinidae) in relation to their role |
*** 1986 Logic Programming: Prolog and Its Applications :filled:
#+begin_example
{'bib': {'author': 'Frank Kriwaczek',
         'cites': '1',
         'cites_id': '1545181316512133679',
         'publisher': 'Addison-Wesley',
         'title': 'Logic Programming: Prolog and Its Applications',
         'url': 'http://scholar.google.com/scholar?cluster=1545181316512133679&hl=en&oi=scholarr',
         'year': '1986'},
 'citations_link': '/scholar?cites=1545181316512133679',
 'cites_per_year': {2001: 1},
 'filled': True,
 'id_citations': 'pvkQAj0AAAAJ:p2g8aNsByqUC',
 'source': 'citations'}
#+end_example
WARNING: caught exception: <class 'KeyError'>
*** 1985 Logic as a computer language in education :filled:
#+begin_example
{'bib': {'abstract': 'This paper advocates the use of a logic programming '
                     'language to teach computer programming to school-age '
                     "children. Written in Kowalski's clear style, the paper "
                     'provides an introduction to declarative programming in a '
                     'manner which is understandable to people unaware of '
                     'logic programming. Although computer logic is compared '
                     'with high school mathematics, the paper does not present '
                     'detailed arguments as to why the declarative style is '
                     'preferable for teaching children. Some interesting '
                     'questions arise‚ÄîWould children prefer to think of a '
                     'picture as a set of visible line segments__? __ While '
                     'software engineering considerations dictate attention to '
                     'specification and proof of correctness, would it be '
                     'feasible to school children in such an approach__? __ '
                     'The examples in the paper highlight the use of logic, '
                     'but teaching logic this way may be a different matter. '
                     'This is definitely an important paper in an area that ‚Ä¶',
         'author': 'Robert‚Äò Kowalski',
         'cites': '1',
         'cites_id': '1815806827126154466',
         'pages': '69-92',
         'title': 'Logic as a computer language in education',
         'url': 'https://dl.acm.org/doi/abs/10.5555/3732.3736',
         'year': '1985'},
 'citations_link': '/scholar?cites=1815806827126154466',
 'cites_per_year': {1989: 1},
 'filled': True,
 'id_citations': 'pvkQAj0AAAAJ:NhqRSupF_l8C',
 'source': 'citations'}
#+end_example
WARNING: caught exception: <class 'KeyError'>
*** 1984 Robert Kowalski on logic programming :filled:
#+begin_example
{'bib': {'abstract': "Robert Kowalski-I've been at Imperial College since "
                     'January 1975. Before that I was at the University of '
                     'Edinburgh, where I arrived in October 1967 to do my Ph. '
                     'D., having studied at Stanford for an M. Sc., and the '
                     'University of Bridgeport for a BA in Mathematics. I was '
                     'born in Bridgeport, Connecticut. My studies at Stanford '
                     'were in Mathematics specializing in Logic. My studies at '
                     'Edinburgh would have been Logic, but ended up being '
                     'Computing, or more specifically Automatic Theorem '
                     'Proving. 1 stayed on after my Ph. D. as a Research '
                     'Fellow for some 5 years, still working in the field of '
                     'Automatic Theorem Proving, but moving over into this new '
                     'area of Logic Programming. I have written a number of '
                     'articles besides my book, the most recent of which was '
                     'the IFIP paper. But there have been several other '
                     'papers. One which is interesting, more for its social '
                     'implication than for its technical content, is a paper '
                     'called ‚Ä¶',
         'author': 'Bob Kowalski',
         'cites': '1',
         'cites_id': '17423087490423776949',
         'journal': 'Computer Compacts',
         'number': '1',
         'pages': '17-20',
         'publisher': 'Elsevier',
         'title': 'Robert Kowalski on logic programming',
         'url': 'https://www.sciencedirect.com/science/article/pii/016771368490074X',
         'volume': '2',
         'year': '1984'},
 'citations_link': '/scholar?cites=17423087490423776949',
 'cites_per_year': {1987: 1},
 'filled': True,
 'id_citations': 'pvkQAj0AAAAJ:otzGkya1bYkC',
 'source': 'citations'}
#+end_example
| 1984 | Robert Kowalski on logic programming | Computer Compacts |
*** 1983 The Case for Using Equality Axioms in Automatic Demonstration :filled:
#+begin_example
{'bib': {'abstract': 'The use of equality axioms in resolution refutation '
                     'systems has seemed to be particularly inefficient. In '
                     'order to remedy this difficulty several modifications of '
                     'the resolution method have been proposed ([4], [13], '
                     '[15], [17] and [21] and more recently [2] and [10]). Of '
                     'these the paramodulation strategy of [15] seems to be '
                     'particularly simple and efficient. The method for '
                     'dealing with equality investigated in this paper '
                     'consists of using equality axioms and of applying the '
                     'version of hyper-resolution proposed in [5]. The '
                     'hyper-resolution and para-modulation methods are '
                     'compared and a simple interpretation of the former is '
                     'found in a subsystem of the latter, providing a '
                     'straightforward proof for the completeness of this '
                     'subsystem of paramodulation. Several proposals are put '
                     'forward for modifying the hyper-resolution method and '
                     'these modifications are seen to induce corresponding '
                     'modifications of the paramodulation ‚Ä¶',
         'author': 'R Kowalski',
         'cites': '1',
         'cites_id': '4853731866421556222',
         'pages': '377-398',
         'publisher': 'Springer, Berlin, Heidelberg',
         'title': 'The Case for Using Equality Axioms in Automatic '
                  'Demonstration',
         'url': 'https://link.springer.com/chapter/10.1007/978-3-642-81955-1_24',
         'year': '1983'},
 'citations_link': '/scholar?cites=4853731866421556222',
 'cites_per_year': {1996: 1},
 'filled': True,
 'id_citations': 'pvkQAj0AAAAJ:olpn-zPbct0C',
 'source': 'citations'}
#+end_example
WARNING: caught exception: <class 'KeyError'>
*** 1971 An application of heuristic programming to physical planning :filled:
#+begin_example
{'bib': {'author': 'Robert Kowalski',
         'cites': '1',
         'cites_id': '12539585024444615478',
         'publisher': 'Edinburgh University',
         'title': 'An application of heuristic programming to physical '
                  'planning',
         'url': 'http://scholar.google.com/scholar?cluster=12539585024444615478&hl=en&oi=scholarr',
         'year': '1971'},
 'citations_link': '/scholar?cites=12539585024444615478',
 'cites_per_year': {1984: 1},
 'filled': True,
 'id_citations': 'pvkQAj0AAAAJ:UebtZRa9Y70C',
 'source': 'citations'}
#+end_example
WARNING: caught exception: <class 'KeyError'>
*** 1968 An Exposition of Paramodulation with Refinements :filled:
#+begin_example
{'bib': {'author': 'Robert Kowalski',
         'cites': '1',
         'cites_id': '11519260615650882759',
         'publisher': 'University of Edinburgh. School of Artificial '
                      'Intelligence. Department of Computational Logic',
         'title': 'An Exposition of Paramodulation with Refinements',
         'url': 'http://scholar.google.com/scholar?cluster=11519260615650882759&hl=en&oi=scholarr',
         'year': '1968'},
 'citations_link': '/scholar?cites=11519260615650882759',
 'cites_per_year': {1974: 1},
 'filled': True,
 'id_citations': 'pvkQAj0AAAAJ:Tiz5es2fbqcC',
 'source': 'citations'}
#+end_example
WARNING: caught exception: <class 'KeyError'>
WARNING: caught exception: <class 'KeyError'>
*** 2017 Satisfiability for First-order Logic as a Non-Modal Deontic Logic. :filled:
#+begin_example
{'bib': {'abstract': 'In modal deontic logics, the focus is on inferring '
                     'logical consequences, for example inferring whether an '
                     'obligation O mail, to mail a letter, logically implies O '
                     '[mail‚à® burn], an obligation to mail or burn the letter. '
                     'Here I present an alternative approach in which '
                     'obligations are sentences (such as mail) in first-order '
                     'logic (FOL), and the focus is on satisfying those '
                     'sentences by making them true in some best model of the '
                     'world. To facilitate this task and to make it '
                     'manageable, candidate models are defined by a logic '
                     'program (LP) extended by means of candidate action '
                     'assumptions (A). The resulting combination of FOL, LP '
                     'and A is a variant of abductive logic programming (ALP).',
         'author': 'Robert A Kowalski',
         'cites': '0',
         'eprint': 'https://pdfs.semanticscholar.org/c038/8c0af55326ac428c5c1e3d467f016494941b.pdf#page=88',
         'pages': '84-90',
         'title': 'Satisfiability for First-order Logic as a Non-Modal Deontic '
                  'Logic.',
         'url': 'https://pdfs.semanticscholar.org/c038/8c0af55326ac428c5c1e3d467f016494941b.pdf#page=88',
         'year': '2017'},
 'cites_per_year': {},
 'filled': True,
 'id_citations': 'pvkQAj0AAAAJ:GFxP56DSvIMC',
 'source': 'citations'}
#+end_example
WARNING: caught exception: <class 'KeyError'>
*** 2017 How to do it with LPS (Logic-Based Production System). :filled:
#+begin_example
{'bib': {'abstract': 'The Fifth Generation Computer Systems [Present and '
                     "Beyond](FGCS) was an initiative by Japan's Ministry of "
                     'International Trade and Industry, begun in 1982, to '
                     'create a computer using massively parallel '
                     'computing/processing. It was to be the result of a '
                     'massive government/industry research project in Japan '
                     'during the 1980s. It aimed to create an" epoch-making '
                     'computer" with supercomputer-like performance and to '
                     'provide a platform for future developments in artificial '
                     'intelligence.',
         'author': 'Robert A Kowalski and Fariba Sadri and Miguel Calejo',
         'cites': '0',
         'eprint': 'http://2017.ruleml-rr.org/wp-content/uploads/2018/03/LPS-slides-merged.pdf',
         'title': 'How to do it with LPS (Logic-Based Production System).',
         'url': 'http://2017.ruleml-rr.org/wp-content/uploads/2018/03/LPS-slides-merged.pdf',
         'year': '2017'},
 'cites_per_year': {},
 'filled': True,
 'id_citations': 'pvkQAj0AAAAJ:Ehil0879vHcC',
 'source': 'citations'}
#+end_example
WARNING: caught exception: <class 'KeyError'>
*** 2014 A general framework for representing, reasoning and querying with annotated semantic web data. :filled:
#+begin_example
{'bib': {'author': 'Umberto Straccia and Umberto Straccia and Umberto Straccia '
                   'and Umberto Straccia and Umberto Straccia and Umberto '
                   'Straccia and Umberto Straccia and Umberto Straccia and J '
                   'Abadi Daniel and Marcus Adam and Madden Samuel and '
                   'Hollenbach Kate and Serge Abiteboul and Richard Hull and '
                   'Victor Vianu and G Acampora and V Loia and Sudhir Agarwal '
                   'and Steffen Lamparter and Teresa Alsinet and Llu√≠s Godo '
                   'and Teresa Alsinet and Llu√≠s Godo and Teresa Alsinet and '
                   'Llu√≠s Godo and Sandra Sandri and S Amarger and D Dubois '
                   'and H Prade and Henrik R Andersen and Renzo Angles and '
                   'Claudio Gutierrez and Carlos Areces and Balder ten Cate '
                   'and P Blackburn and F Wolter and J van Benthem and '
                   'Alessandro Artale and Diego Calvanese and Roman Kontchakov '
                   'and Michael Zakharyaschev and F Baader and S Brandt and C '
                   'Lutz and F Baader and S Brandt and C Lutz and F Baader and '
                   'C Lutz and B Suntisrivaraporn and F Baader and M Milicic '
                   'and C Lutz and U Sattler and F Wolter and Franz Baader and '
                   'Franz Baader and Sebastian Brandt and Carsten Lutz and '
                   'Kendall Clark and Peter F Patel-Schneider and Franz Baader '
                   'and Diego Calvanese and Deborah McGuinness and Daniele '
                   'Nardi and Peter F Patel-Schneider and Franz Baader and '
                   'Enrico Franconi and Bernhard Hollunder and Bernhard Nebel '
                   'and Hans-Jiirgen Profitlich and Franz Baader and Philipp '
                   'Hanschke and Franz Baader and Bernhard Hollunder and '
                   'Bernhard Nebel and Hans-Juirgen Profitlich and Franz '
                   'Baader and Bernhard Hollunder and Bernhard Nebel and '
                   'Hans-Juirgen Prof-itlich and Enrico Franconi and B Nebel '
                   'and W Swartout and C Rich and Franz Baader and Carsten '
                   'Lutz and Maja Milicic and Ulrike Sattler and Frank Wolter '
                   'and Franz Baader and Carsten Lutz and Boontawee '
                   'Suntisrivaraporn and Franz Baader and Rafael Pe√±aloza and '
                   'Franz Baader and Rafael Pen√±aloza and Franz Baader and '
                   'Rafael Pen√±aloza and JF Baldwin and JF Baldwin and JF '
                   'Baldwin and TP Martin and BW Pilsworth and JF Baldwin and '
                   'TP Martin and BW Pilsworth and EH Ruspini and P Bonnissone '
                   'and W Pedrycz and Francois Bancilhon and David Maier and '
                   'Yehoshua Sagiv and Jeffrey D Ull-man and Chitta Baral and '
                   'Michael Gelfond and Nelson Rushton and Chitta Baral and '
                   'Matt Hunsaker and Bernhard Beckert and Reiner Hahnle and '
                   'Felip Manya and Ramon Bejar and Reiner H√°hnle and Felip '
                   'Manya and RE Bellmann and LA Zadeh and Fernando Bobillo '
                   'and Felix Bou and Umberto Straccia and Fernando Bobillo '
                   'and Miguel Delgado and Juan Gomez-Romero and Fernando '
                   'Bobillo and Miguel Delgado and Juan Gomez-Romero and '
                   'Fernando Bobillo and Miguel Delgado and Juan Gomez-Romero '
                   'and Fernando Bobillo and Miguel Delgado and Juan '
                   'Gomez-Romero and Fernando Bobillo and Miguel Delgado and '
                   'Juan Gomez-Romero and Fernando Bobillo and Miguel Delgado '
                   'and Juan Gomez-Romero and Umberto Straccia and Fernando '
                   'Bobillo',
         'cites': '0',
         'number': '2',
         'pages': 'xi-xii',
         'publisher': 'CEUR',
         'title': 'A general framework for representing, reasoning and '
                  'querying with annotated semantic web data.',
         'url': 'http://scholar.google.com/scholar?cluster=11430695572062078600&hl=en&oi=scholarr',
         'volume': '18',
         'year': '2014'},
 'cites_per_year': {},
 'filled': True,
 'id_citations': 'pvkQAj0AAAAJ:kw52XkFRtyQC',
 'source': 'citations'}
#+end_example
WARNING: caught exception: <class 'KeyError'>
*** 2012 The scientific contribution of marek sergot :filled:
#+begin_example
{'bib': {'abstract': 'Marek Sergot‚Äôs technical contributions range over '
                     'different subjects. He has developed a series of novel '
                     'ideas and formal methods bridging different research '
                     'domains, such as artificial intelligence, computational '
                     'logic, philosophical logic, legal theory, artificial '
                     'intelligence and law, multi-agent systems and '
                     'bioinformatics.',
         'author': 'Steve Barker and Andrew JI Jones and Antonis Kakas and '
                   'Robert A Kowalski and Alessio Lomuscio and Rob Miller and '
                   'Stephen Muggleton and Giovanni Sartor',
         'cites': '0',
         'eprint': 'http://www.kognitywistyka.edu.pl/wp-content/uploads/2015/05/sergot_2.pdf',
         'pages': '4-11',
         'publisher': 'Springer, Berlin, Heidelberg',
         'title': 'The scientific contribution of marek sergot',
         'url': 'https://link.springer.com/chapter/10.1007/978-3-642-29414-3_2',
         'year': '2012'},
 'cites_per_year': {},
 'filled': True,
 'id_citations': 'pvkQAj0AAAAJ:wbdj-CoPYUoC',
 'source': 'citations'}
#+end_example
WARNING: caught exception: <class 'KeyError'>
*** 2011 A computational logic-based representation of the WHO and UNICEF estimates of national immunization coverage. Burton A, Gacic-Dobo M, Karimov R, Kowalski R 24 January 2011 :filled:
#+begin_example
{'bib': {'abstract': 'Production of official statistics frequently requires '
                     'expert judgement to evaluate and reconcile data of '
                     'unknown and varying quality from multiple and '
                     'potentially conflicting sources. Shocks to the system '
                     'and exceptional events may be difficult to incorporate '
                     'in modelled estimates. Computational logic provides a '
                     "methodology and tools for incorporating analyst's "
                     'judgement, integrating multiple data sources and '
                     'modelling methods, ensuring transparency and '
                     'replicability, and making documentation computationally '
                     'accessible. Representations using computational logic '
                     'can be implemented in a variety of computer-based '
                     'languages for automated production. Computational logic '
                     'complements standard mathematical and statistical '
                     'techniques and extends the flexibility of formal '
                     'modelling.',
         'author': 'Robert KOWALSKI',
         'cites': '0',
         'eprint': 'https://www.doc.ic.ac.uk/~rak/papers/wuenic.pdf',
         'title': 'A computational logic-based representation of the WHO and '
                  'UNICEF estimates of national immunization coverage. Burton '
                  'A, Gacic-Dobo M, Karimov R, Kowalski R 24 January 2011',
         'url': 'https://www.doc.ic.ac.uk/~rak/papers/wuenic.pdf',
         'year': '2011'},
 'cites_per_year': {},
 'filled': True,
 'id_citations': 'pvkQAj0AAAAJ:OcBU2YAGkTUC',
 'source': 'citations'}
#+end_example
WARNING: caught exception: <class 'KeyError'>
*** 2002 Computational logic: logic programming and beyond: essays in honour of Robert A. Kowalski :filled:
#+begin_example
{'bib': {'author': 'Robert Kowalski and Antonis C Kakas and Fariba Sadri',
         'cites': '0',
         'publisher': 'Springer',
         'title': 'Computational logic: logic programming and beyond: essays '
                  'in honour of Robert A. Kowalski',
         'url': 'http://gnosis.library.ucy.ac.cy/handle/7/54308',
         'year': '2002'},
 'cites_per_year': {},
 'filled': True,
 'id_citations': 'pvkQAj0AAAAJ:jgBuDB5drN8C',
 'source': 'citations'}
#+end_example
WARNING: caught exception: <class 'KeyError'>
*** 1995 WORKSHOP REPORT: Application of Logic Programming to Legal Reasoning :filled:
#+begin_example
{'bib': {'abstract': 'The Workshop on the Application of Logic Programming to '
                     'Legal Reasoning was a one day workshop organised by Dr. '
                     'Katsumi Nitta from ICOT and chaired by Professor Hajime '
                     'Yoshino from Meiji Gakuin University. It covered a wide '
                     'range of topics, most of which concerned one or more of '
                     'the following three main problems: 1. the need for a '
                     'natural and expressive knowledge representation '
                     'formalism for representing legal concepts; 2. the '
                     'importance of an appropriate theory of legal '
                     'argumentation; 3. the nature of the interaction between '
                     'case-based and rule-based reasoning in the law. w '
                     'Deductive Object Oriented Database',
         'author': 'Robert Kowalski',
         'cites': '0',
         'number': '3-4',
         'pages': '435-439',
         'publisher': 'Springer-Verlag',
         'title': 'WORKSHOP REPORT: Application of Logic Programming to Legal '
                  'Reasoning',
         'url': 'https://link.springer.com/content/pdf/10.1007/BF03037233.pdf',
         'volume': '13',
         'year': '1995'},
 'cites_per_year': {},
 'filled': True,
 'id_citations': 'pvkQAj0AAAAJ:Tyk-4Ss8FVUC',
 'source': 'citations'}
#+end_example
WARNING: caught exception: <class 'KeyError'>
*** 1993 An Undergraduate Degree in Practical Reasoning :filled:
#+begin_example
{'bib': {'abstract': 'Logic as a single, unified academic discipline does not '
                     'exist today. To be a logician today, you need to train '
                     'as a mathematician, philosopher or computer scientist. '
                     'Not only will you need to master topics that might be '
                     'peripheral to your main area of interest, but you will '
                     'have less and less in common with fellow logicians '
                     'working in other disciplines. Eventually you may even '
                     'lose touch with the original purpose of logic: to '
                     'develop and put into practice tools and techniques to '
                     'help people reason and communicate more clearly and more '
                     'effectively. Only a few decades ago, students were '
                     'taught Latin and geometry, largely for the purpose of '
                     'teaching logic by osmosis. Today these subjects have '
                     'fallen out of fashion, and no subject more directly '
                     'concerned with teaching logic seems to have taken their '
                     'place-a sad reflection of the lack of impact of academic '
                     'logic on education and everyday life. Ironically, never '
                     'before has ‚Ä¶',
         'author': 'Robert A.  Kowalski',
         'cites': '0',
         'number': '3',
         'pages': '227-229',
         'publisher': 'Oxford University Press',
         'title': 'An Undergraduate Degree in Practical Reasoning',
         'url': 'https://academic.oup.com/logcom/article-abstract/3/3/227/980203',
         'volume': '3',
         'year': '1993'},
 'cites_per_year': {},
 'filled': True,
 'id_citations': 'pvkQAj0AAAAJ:u9iWguZQMMsC',
 'source': 'citations'}
#+end_example
WARNING: caught exception: <class 'KeyError'>
*** 1993 Robert Kowalski :filled:
#+begin_example
{'bib': {'abstract': 'A significant amount of progress has been made in '
                     'research on Fifth Generation Computer Systems (FGCS) '
                     'during a 10-year international collaborative research '
                     'project. The most notable progress has been made in the '
                     'development of parallel computer design and software. It '
                     'is clear that logic programming will be a significant '
                     'factor in the future of FGCS. Political problems, most '
                     'notably the notion that Japan would receive more benefit '
                     'than would other research partners, made some in the '
                     'international community skeptical about the FGCS '
                     'research program. There were also technical problems. '
                     'First, it was discovered that Artificial Intelligence, '
                     'previously considered by many to be a promising '
                     'technology, has limited applications to FGCS. Second, '
                     'Logic Programming, while promising, is not an efficient '
                     'method. Third, the use of concurrent logic programming '
                     'is too removed from the needs of user-level programming '
                     '‚Ä¶',
         'author': 'Robert Kowalski',
         'cites': '0',
         'journal': 'Communications of the ACM',
         'number': '3',
         'pages': '54-61',
         'publisher': 'Association for Computing Machinery, Inc.',
         'title': 'Robert Kowalski',
         'url': 'https://go.gale.com/ps/i.do?id=GALE%7CA13657643&sid=googleScholar&v=2.1&it=r&linkaccess=abs&issn=00010782&p=AONE&sw=w',
         'volume': '36',
         'year': '1993'},
 'cites_per_year': {},
 'filled': True,
 'id_citations': 'pvkQAj0AAAAJ:rmuvC79q63oC',
 'source': 'citations'}
#+end_example
| 1993 | Robert Kowalski | Communications of the ACM |
*** 1993 The fifth generation project: launching the new era :filled:
#+begin_example
{'bib': {'abstract': 'Sauf mention contraire ci-dessus, le contenu de cette '
                     'notice bibliographique peut √™tre utilis√© dans le cadre '
                     'd‚Äôune licence CC BY 4.0 Inist-CNRS/Unless otherwise '
                     'stated above, the content of this bibliographic record '
                     'may be used under a CC BY 4.0 licence by Inist-CNRS/A '
                     'menos que se haya se√±alado antes, el contenido de este '
                     'registro bibliogr√°fico puede ser utilizado al amparo de '
                     'una licencia CC BY 4.0 Inist-CNRS',
         'author': 'R Kowalski',
         'cites': '0',
         'journal': 'Journal A',
         'number': '4',
         'pages': '25-30',
         'title': 'The fifth generation project: launching the new era',
         'url': 'https://pascal-francis.inist.fr/vibad/index.php?action=getRecordDetail&idt=3856198',
         'volume': '34',
         'year': '1993'},
 'cites_per_year': {},
 'filled': True,
 'id_citations': 'pvkQAj0AAAAJ:kNdYIx-mwKoC',
 'source': 'citations'}
#+end_example
| 1993 | The fifth generation project: launching the new era | Journal A |
*** 1993 Launching the new era: The fifth generation project: personal perspectives :filled:
#+begin_example
{'bib': {'abstract': 'Sauf mention contraire ci-dessus, le contenu de cette '
                     'notice bibliographique peut √™tre utilis√© dans le cadre '
                     'd‚Äôune licence CC BY 4.0 Inist-CNRS/Unless otherwise '
                     'stated above, the content of this bibliographic record '
                     'may be used under a CC BY 4.0 licence by Inist-CNRS/A '
                     'menos que se haya se√±alado antes, el contenido de este '
                     'registro bibliogr√°fico puede ser utilizado al amparo de '
                     'una licencia CC BY 4.0 Inist-CNRS',
         'author': 'R KOWALSKI',
         'cites': '0',
         'journal': 'Communications of the ACM',
         'number': '3',
         'pages': '54-60',
         'title': 'Launching the new era: The fifth generation project: '
                  'personal perspectives',
         'url': 'https://pascal-francis.inist.fr/vibad/index.php?action=getRecordDetail&idt=4664016',
         'volume': '36',
         'year': '1993'},
 'cites_per_year': {},
 'filled': True,
 'id_citations': 'pvkQAj0AAAAJ:YsMSGLbcyi4C',
 'source': 'citations'}
#+end_example
| 1993 | Launching the new era: The fifth generation project: personal perspectives | Communications of the ACM |
*** 1992 Theory and practice in logic programming :filled:
#+begin_example
{'bib': {'abstract': 'Logic Programming enjoys a relatively good relationship '
                     'between its theory and its practice. Nonetheless, this '
                     'relationship needs to be improved, and doing so is an '
                     'important direction for research in the future. The '
                     'European Community Basic Research Project, Compulog, and '
                     'the more general" network of excellence", Compulog-net, '
                     'are concerned with developing such improvements.',
         'author': 'Robert Kowalski',
         'cites': '0',
         'journal': 'Logic Programming in Action: Second International Logic '
                    "Programming Summer School, LPSS'92, Zurich, Switzerland, "
                    'September 7-11, 1992. Proceedings',
         'pages': '3',
         'publisher': 'Springer Science & Business Media',
         'title': 'Theory and practice in logic programming',
         'url': 'http://books.google.com/books?hl=en&lr=&id=r5LjAM5g2JIC&oi=fnd&pg=PA3&dq=info:jp-2VMG6KwcJ:scholar.google.com&ots=aDfhW4RCYh&sig=-z3puob1rq-LDvXTPyEBwT76vnE',
         'volume': '636',
         'year': '1992'},
 'cites_per_year': {},
 'filled': True,
 'id_citations': 'pvkQAj0AAAAJ:qjMakFHDy7sC',
 'source': 'citations'}
#+end_example
| 1992 | Theory and practice in logic programming | Logic Programming in Action: Second International Logic Programming Summer School, LPSS'92, Zurich, Switzerland, September 7-11, 1992. Proceedings |
*** 1989 INDIAN IMPORT-EXPORT POLICY AND PROCEDURES AS A LOGIC PROGRAM :filled:
#+begin_example
{'bib': {'author': 'KK BAJAJ and RK DUBASH and AS KAMBLE and R KOWALSKI and BK '
                   'MURTHY and D RAJAGOPALAN',
         'cites': '0',
         'journal': 'ELECTRONICS INFORMATION & PLANNING',
         'number': '8',
         'pages': '404-410',
         'title': 'INDIAN IMPORT-EXPORT POLICY AND PROCEDURES AS A LOGIC '
                  'PROGRAM',
         'url': 'http://scholar.google.com/scholar?cluster=2451148043923877666&hl=en&oi=scholarr',
         'volume': '16',
         'year': '1989'},
 'cites_per_year': {},
 'filled': True,
 'id_citations': 'pvkQAj0AAAAJ:HE397vMXCloC',
 'source': 'citations'}
#+end_example
| 1989 | INDIAN IMPORT-EXPORT POLICY AND PROCEDURES AS A LOGIC PROGRAM | ELECTRONICS INFORMATION & PLANNING |
*** 1989 TAPSOFT'87, Proceedings of the Intrnational Joint Conference en Theory and Practice of Software Development. Volume 2: Advanced Seminar on Foundations of Innovative Software ‚Ä¶ :filled:
#+begin_example
{'bib': {'abstract': 'It starts with an elementar introduction in the method '
                     'and after that graduately, the author pass to mora and '
                     'more complicated problems, as elliptic problems, '
                     'abstract formulation of FEM for elliptic problems, '
                     'finite element spaces, error estimates, parabolic '
                     'pro-blems, hyperbolic problems, boundary clement methods '
                     'and non-linear problems. We can lind also in the book a '
                     'chapter devoted to direct methods for solving linear '
                     'systems of equations, or a chapter devoted to '
                     'minimization algorithms and also various examples: the '
                     'elas-ticity problem, Stokes problem, Euler equa ions, '
                     'Navier-Stokes equations, etc. The presentation of the '
                     'subject is very clear, each chapter contains a number of '
                     'very interesting exercices and then the declared scope '
                     'of the book" an easily accesible introduc-tion to the '
                     'FEM" was touched.',
         'author': 'Marian Gheorghe',
         'cites': '0',
         'number': '3',
         'pages': '287-287',
         'publisher': 'Societatea de »òtiin»õe Matematice din Rom√¢nia',
         'title': "TAPSOFT'87, Proceedings of the Intrnational Joint "
                  'Conference en Theory and Practice of Software Development. '
                  'Volume 2: Advanced Seminar on Foundations of Innovative '
                  'Software ‚Ä¶',
         'url': 'http://scholar.google.com/scholar?cluster=605842263916232501&hl=en&oi=scholarr',
         'volume': '33',
         'year': '1989'},
 'cites_per_year': {},
 'filled': True,
 'id_citations': 'pvkQAj0AAAAJ:GtLg2Ama23sC',
 'source': 'citations'}
#+end_example
WARNING: caught exception: <class 'KeyError'>
*** 1989 The limitations of logic and its role in artificial intelligence :filled:
#+begin_example
{'bib': {'abstract': 'Feigenbaum [FEIG82], commenting on the Fifth Generation '
                     'Project, has said that logic is not important, but '
                     'knowledge is. I agree that knowledge is more important '
                     'than logic. But logic is important too. Knowledgebased '
                     'systems need both knowledge and formalism. Although '
                     'knowledge is more important than formalism, formalism is '
                     'important because the use of a poor formalism can '
                     'interfere with the representation of knowledge and can '
                     'restrict the uses to which that knowledge can be put. I '
                     'believe that logic is the least restrictive and most '
                     'appropriate formalism for knowledge-based systems.',
         'author': 'Robert Kowalski',
         'cites': '0',
         'pages': '477-493',
         'publisher': 'Springer, Berlin, Heidelberg',
         'title': 'The limitations of logic and its role in artificial '
                  'intelligence',
         'url': 'https://link.springer.com/chapter/10.1007/978-3-642-83397-7_22',
         'year': '1989'},
 'cites_per_year': {},
 'filled': True,
 'id_citations': 'pvkQAj0AAAAJ:WF5omc3nYNoC',
 'source': 'citations'}
#+end_example
WARNING: caught exception: <class 'KeyError'>
*** 1988 MIT Press Series in Logic Programming: Proceedings of the Fifth International Conference and Symposium :filled:
#+begin_example
{'bib': {'author': 'Kenneth A Bowen and Robert A Kowalski',
         'cites': '0',
         'publisher': 'MIT Press',
         'title': 'MIT Press Series in Logic Programming: Proceedings of the '
                  'Fifth International Conference and Symposium',
         'url': 'http://scholar.google.com/scholar?cluster=229217894951109126&hl=en&oi=scholarr',
         'year': '1988'},
 'cites_per_year': {},
 'filled': True,
 'id_citations': 'pvkQAj0AAAAJ:YohjEiUPhakC',
 'source': 'citations'}
#+end_example
WARNING: caught exception: <class 'KeyError'>
*** 1988 Logic Programming: Proceedings of the Fifth International Conference and Symposium, University of Whasington, Seattle, 1988 :filled:
#+begin_example
{'bib': {'author': 'Robert A Kowalski and Kenneth A Bowen',
         'cites': '0',
         'publisher': 'MIT Press',
         'title': 'Logic Programming: Proceedings of the Fifth International '
                  'Conference and Symposium, University of Whasington, '
                  'Seattle, 1988',
         'url': 'http://scholar.google.com/scholar?cluster=6348627796872561335&hl=en&oi=scholarr',
         'year': '1988'},
 'cites_per_year': {},
 'filled': True,
 'id_citations': 'pvkQAj0AAAAJ:WA5NYHcadZ8C',
 'source': 'citations'}
#+end_example
WARNING: caught exception: <class 'KeyError'>
*** 1988 MIT Press Series in Logic Programming: Proceedings of the Fifth International Conference and Symposium :filled:
#+begin_example
{'bib': {'author': 'Robert A Kowalski and Kenneth A Bowen',
         'cites': '0',
         'publisher': 'MIT Press',
         'title': 'MIT Press Series in Logic Programming: Proceedings of the '
                  'Fifth International Conference and Symposium',
         'url': 'http://scholar.google.com/scholar?cluster=4257383133687942192&hl=en&oi=scholarr',
         'year': '1988'},
 'cites_per_year': {},
 'filled': True,
 'id_citations': 'pvkQAj0AAAAJ:Y0pCki6q_DkC',
 'source': 'citations'}
#+end_example
WARNING: caught exception: <class 'KeyError'>
*** 1987 Judgment under Uncertainty: Heuristics and Biases :filled:
#+begin_example
{'bib': {'abstract': 'This chapter deals with the claim that semantics can '
                     'contribute essentially to the clarification of the role '
                     "which 'understanding meaning' plays in the context of "
                     'communicating information. It suggests that the '
                     'philosophy or theory of science should be understood as '
                     "'meta-theoretical investigations' into the "
                     'model-theoretical or even mathematical structure of '
                     'special scientific disciplines. The chapter shows the '
                     'different ways in which the comprehension of meaning '
                     'comes about with the help of an A-channel, which is '
                     'concerned with contents and a simulative C-channel using '
                     'characteristic symptoms or characterizing features. '
                     'Philosophy of science might also be regarded as a theory '
                     "to 're-construct' the arrival at decisions about the "
                     'acceptance and enforcement or spread of certain '
                     'scientific results in so far as these are understood to '
                     'be caused by rational arguments. Under normal '
                     'conditions, the philosophy of science ‚Ä¶',
         'author': 'Rainer R Born and H Abelson and GJ Sussman and J Sussman '
                   'and JL Austin and JO Urmson and M Sbisa and HP Babbage and '
                   'GP Baker and PMS Hacker and A Bamme and G Feuerstein and R '
                   'Genth and E Holling and R Kahle and P Kempin and J Barwise '
                   'and J Perry and P Benner and N Block and N Block and N '
                   'Block and G Boolos and R Jeffrey and L Brownston and R '
                   'Farrell and E Kant and N Martin and JS Bruner and JJ '
                   'Goodnow and GA Austin and J Campbell and JV Canfield and E '
                   'Chamiak and CK Riesbeck and DV McDermott and MJ Cresswell '
                   'and R Cummins and W Daiser and D Davidson and L Foster and '
                   'J Swanson and R Davies and DB Lenat and M Davis and DC '
                   'Dennett and FI Dretske and H Dreyfus and HL Dreyfus and H '
                   'Hall and H Dreyfus and S Dreyfus and KA Ericsson and HA '
                   'Simon and G Fauconnier and JH Fetzer and JH Fetzer and H '
                   'Field and J Fodor and JA Fodor and JJ Gibson and N Goodman '
                   'and N Graham and P Grice and P Cole and J Morgan and K '
                   'Gunderson and MD Harris and SJ Heims and J Neumann and N '
                   'Wiener and J Hintikka and N Hornstein and PN Laird and SM '
                   'Kosslyn and RA Kowalski and SA Kripke and S Lappin and RW '
                   'Lawler and J Lyons and ER MacCormac and D Marr and J '
                   'McCarthy and PJ Hayes and B Meitzer and D Michie and J '
                   'McCarthy and R Michalski and JG Carboneil and TM Mitchell '
                   'and M Minsky and PH Winston and S Mitchell and M Rosen and '
                   'A Monk and R Montague and T O‚ÄôShea and M Eisenstadt and A '
                   'Ortony and P Otto and P Sonntag and A Plantinga and H '
                   'Putnam and H Putnam and H Putnam and H Putnam and H Putnam '
                   'and H Putnam and R Reichman and E Rich and I Rock and S '
                   'Rosen and NU Salmon and G Sandstr√∂m and RC Schank and RC '
                   'Schank and RP Abelson and RC Schank and SP Schwartz and JF '
                   'Sowa and S Toulmin and A Tversky and D Kahneman and A '
                   'Tversky and D Kahneman and BC Fraassen and SM Weiss and CA '
                   'Kulikowski and PH Winston and BK Horn',
         'cites': '0',
         'pages': '499-541',
         'publisher': 'Fontana Paperbacks',
         'title': 'Judgment under Uncertainty: Heuristics and Biases',
         'url': 'http://scholar.google.com/scholar?cluster=5531065361606568946&hl=en&oi=scholarr',
         'volume': '1',
         'year': '1987'},
 'cites_per_year': {},
 'filled': True,
 'id_citations': 'pvkQAj0AAAAJ:U4n9YNQMCAIC',
 'source': 'citations'}
#+end_example
WARNING: caught exception: <class 'KeyError'>
*** 1987 Theory and Practice of Software Development 1987, 1: Proceedings :filled:
#+begin_example
{'bib': {'author': 'Ugo Montanari and Giorgio Levi and Hartmut Ehrig',
         'cites': '0',
         'publisher': 'Springer',
         'title': 'Theory and Practice of Software Development 1987, 1: '
                  'Proceedings',
         'url': 'http://scholar.google.com/scholar?cluster=13378054690235342220&hl=en&oi=scholarr',
         'year': '1987'},
 'cites_per_year': {},
 'filled': True,
 'id_citations': 'pvkQAj0AAAAJ:tH6gc1N1XXoC',
 'source': 'citations'}
#+end_example
WARNING: caught exception: <class 'KeyError'>
*** 1986 Analyzing curved surfaces using reflective map techniques :filled:
#+begin_example
{'bib': {'abstract': 'In this chapter the author explains the increasingly '
                     'important matter of Knowledge-based systems and Expert '
                     'systems. Knowledge-based systems contain large amounts '
                     'of varied knowledge which is brought to bear on a given '
                     'task. The two kinds of knowledge needed by an expert are '
                     'the facts of the subject and the heuristics of the '
                     'subject. The two kinds of knowledge needed by an expert '
                     'are the facts of the subject and the heuristics of the '
                     'subject. The knowledge elicitation state of constructing '
                     'an expert system is carried out by the knowledge '
                     'engineers, who have, when the heuristic knowledge is '
                     'made explicit, to formulate it appropriately for the '
                     'computer. The knowledge-base of INTERNIST is of two '
                     'basic types: diseases and manifestations in the form of '
                     'case histories, symptoms, physical signs and laboratory '
                     'findings. The knowledge-base has been structured so that '
                     'abnormal findings are used to abduce disease ‚Ä¶',
         'author': 'FH George and TR Addis and S Amarel and H von and GW Zopf '
                   'and S Amarel and M Andrew and MA Arbib and DM Armstrong '
                   'and WR Ashby and WR Ashby and JL Austin and J Ormson and '
                   'AJ Ayer and AJ Ayer and GP Baker and PM Hacker and R '
                   'Banrji and H Berliner and M Blumm and DG Bobrow and M '
                   'Minsky and DG Bobrow and DG Bobrow and T Winograd and MA '
                   'Bowden and JM Brady and RB Braithwaite and LE Brouwer and '
                   'BG Buchanon and EA Feigenbaum and A Bundy and A Bundy and '
                   'L Byrd and G Leiger and C Mellish and M Palmer and D '
                   'Michie and RM Burstall and R Carnap and R Carnap and R '
                   'Carnap and R Carnap and R Carnap and R Carnap and WJ '
                   'Chandler and BL Chapman and N Chomsky and N Chomsky and N '
                   'Chomsky and N Chomsky and N Chomsky and J Norgel and P '
                   'Suppes and A Tarski and MB Clowes and Collins NLX Michie '
                   'and MB Clowes and B Meltzur and D Michie and E Cohen and '
                   'KM Colby and KM Colby and KM Colby and JW Cook and Winch '
                   'Peter and AW Coombs and B Meltzer and D Michie and J Cowan '
                   'and H von and GW Zopf and GP Clarkson and EA Feigenbaum '
                   'and J Fieldman and MB Clowes and JT Culbertson and JT '
                   'Culbertson and JT Culbertson and CE Shammon and J McCarthy '
                   'and JL Darlington and B Meltzer and D Michie and M Davis '
                   'and R Davis and BG Buchanon and JL Darlington and J Da '
                   'Fonseca and JA Deutsch and SW Draper and JA Deutsch and HL '
                   'Dreyfuss and HL Dreyfuss and R Duda and J Gasching and P '
                   'Hart and D Michic and TG Evans and M Muisky and SE Fahlman '
                   'and SE Fahlman and PH Winston and RH Brown and EA '
                   'Feigenbaum and J Feldman and EA Feigenbaum and EA '
                   'Feigenbaum and EA Feigenbaum and D Michie and EA '
                   'Feigenbaum and BG Buchanan and J Lederberg and EA '
                   'Feigenbaum and P McCorduck and S Foundos and D Gabor and '
                   'JA Deutsch and J Gasching and D Michie and JP Gelb and H '
                   'Gelerntner and EA Feigenbaum and J Feldman and FH George '
                   'and FH George and FH George and FH George and FH George '
                   'and FH George and FH George and FH George and FH George '
                   'and FH George and FH George and FH George and FH George '
                   'and FH George and FH George and FH George and FH George '
                   'and FH George and FH George and FH George and FH George '
                   'and JH Handlon and FH George and JH Handlon and FH George '
                   'and L Johnson',
         'cites': '0',
         'number': '2',
         'pages': '1-47',
         'publisher': 'MIT Press',
         'title': 'Analyzing curved surfaces using reflective map techniques',
         'url': 'http://scholar.google.com/scholar?cluster=12746883354583246518&hl=en&oi=scholarr',
         'volume': '5',
         'year': '1986'},
 'cites_per_year': {},
 'filled': True,
 'id_citations': 'pvkQAj0AAAAJ:cK4Rrx0J3m0C',
 'source': 'citations'}
#+end_example
WARNING: caught exception: <class 'KeyError'>
*** 1984 AND-OR-Graphs, Theorem Proving Graphs :filled:
#+begin_example
{'bib': {'abstract': 'And-or graphs and theorem-proving graphs determine the '
                     'same kind of search space and differ only in the '
                     'direction of search: from axioms to goals, in the case '
                     'of theorem-proving graphs, and in the opposite '
                     'direction, from goals to axioms, in the case of and-or '
                     'graphs. Bi-directional search strategies combine both '
                     'directions of search. We investigate the construction of '
                     'a single general algorithm which covers uni-directional '
                     'search both for and-or graphs and for theorem-proving '
                     'graphs, bi-directional search for path-finding problems '
                     'and search for a simplest solution as well as search for '
                     'any solution. We obtain a general theory of completeness '
                     'which applies to search spaces with infinite '
                     'or-branching. In the case of search for any solution, we '
                     'argue against the application of strategies designed for '
                     'finding simplest solutions, but argue for assigning a '
                     'major role in guiding the search to the use of symbol '
                     'complexity (the number of symbol occurrences in a '
                     'derivation).',
         'author': 'R Kowalski',
         'cites': '0',
         'journal': 'Machine Intelligence',
         'title': 'AND-OR-Graphs, Theorem Proving Graphs',
         'url': 'http://scholar.google.com/scholar?cluster=18302862346021859343&hl=en&oi=scholarr',
         'volume': '7',
         'year': '1984'},
 'cites_per_year': {},
 'filled': True,
 'id_citations': 'pvkQAj0AAAAJ:zCSUwVk65WsC',
 'source': 'citations'}
#+end_example
| 1984 | AND-OR-Graphs, Theorem Proving Graphs | Machine Intelligence |
*** 1983 Linear Resolution with Selection Function :filled:
#+begin_example
{'bib': {'abstract': 'Linear resolution with selection function '
                     '(SL-resolution) is a restricted form of linear '
                     'resolution. The main restriction is effected by a '
                     'selection function which chooses from each clause a '
                     'single literal to be resolved upon in that clause. This '
                     'and other restrictions are adapted to linear resolution '
                     'from Loveland‚Äôs model elimination.',
         'author': 'R Kowalski and D Kuehner',
         'cites': '0',
         'pages': '542-577',
         'publisher': 'Springer, Berlin, Heidelberg',
         'title': 'Linear Resolution with Selection Function',
         'url': 'https://link.springer.com/chapter/10.1007/978-3-642-81955-1_32',
         'year': '1983'},
 'cites_per_year': {},
 'filled': True,
 'id_citations': 'pvkQAj0AAAAJ:48xauSegjOkC',
 'source': 'citations'}
#+end_example
WARNING: caught exception: <class 'KeyError'>
*** 1983 LOGIC PROGRAMMING Robert KOWALSKI Department of Computing, Imperial College London, UK Invited Paper :filled:
#+begin_example
{'bib': {'abstract': 'In this paper I argue the case for logic programming, '
                     'comparing it with rule-based artificial intelligence '
                     'languages and functional programming. I shall also '
                     'consider two of the main problems which need to be '
                     'solved: the provision of features such as those provided '
                     'by higher-order functions in functional programming '
                     'languages and the frame problem and its relationship '
                     'with destructive assignment. I shall argue that a '
                     'combination of object language and metalanguage along '
                     "the lines suggested by Weyhrauch's FOL provides a "
                     'promising approach to the solution of these problems.',
         'author': 'Robert KOWALSKI',
         'cites': '0',
         'journal': 'Information Processing: Proceedings of the IFIP... World '
                    'Computer Congress',
         'pages': '133',
         'publisher': 'North-Holland',
         'title': 'LOGIC PROGRAMMING Robert KOWALSKI Department of Computing, '
                  'Imperial College London, UK Invited Paper',
         'url': 'http://scholar.google.com/scholar?cluster=299817612385241753&hl=en&oi=scholarr',
         'year': '1983'},
 'cites_per_year': {},
 'filled': True,
 'id_citations': 'pvkQAj0AAAAJ:9yKSN-GCB0IC',
 'source': 'citations'}
#+end_example
| 1983 | LOGIC PROGRAMMING Robert KOWALSKI Department of Computing, Imperial College London, UK Invited Paper | Information Processing: Proceedings of the IFIP... World Computer Congress |
*** 1980 Papers of the Conference, Les Arcs, France, July 8-11, 1980 :filled:
#+begin_example
{'bib': {'author': 'R Kowalski',
         'cites': '0',
         'publisher': 'Springer',
         'title': 'Papers of the Conference, Les Arcs, France, July 8-11, 1980',
         'url': 'http://scholar.google.com/scholar?cluster=13793656337480189028&hl=en&oi=scholarr',
         'year': '1980'},
 'cites_per_year': {},
 'filled': True,
 'id_citations': 'pvkQAj0AAAAJ:L7CI7m0gUJcC',
 'source': 'citations'}
#+end_example
WARNING: caught exception: <class 'KeyError'>
*** 1979 ^ NewsPaper :filled:
#+begin_example
{'bib': {'abstract': '& $ & & $ & & $ & & $ & & $ & & $ & & $ & & $ & & $ & & '
                     '$ & & $ & & $ & & $ & & $ & & $ & & $ & & $ & & $ & & $ '
                     '& & $ & & $ & & $ & & $ & & $ & & $ & & $ & & $ & & $ & '
                     '& $ & & $ & & $ & & $ & & $ & & $ & & $ & & $ & & $ & & '
                     '$ & & $ & & $ & & $ & & $ & & $ & & $ & & $ & & $ & & $ '
                     '& & $ & & $ & & $ & & $ & & $ & & $ & & $ & & $ & & $ & '
                     '& $ & & $ & & $ & & $ & & $ & & $ & & $ & & $ & & $ & & '
                     '$ & & $ &',
         'author': 'Robert A Kowalski',
         'cites': '0',
         'eprint': 'https://knowledge-navigator.net/download/dot/Aggregate/sub_Kowa1979a.pdf',
         'journal': 'Communications of the ACM',
         'pages': '22',
         'title': '^ NewsPaper',
         'url': 'https://knowledge-navigator.net/download/dot/Aggregate/sub_Kowa1979a.pdf',
         'volume': '7',
         'year': '1979'},
 'cites_per_year': {},
 'filled': True,
 'id_citations': 'pvkQAj0AAAAJ:LhH-TYMQEocC',
 'source': 'citations'}
#+end_example
| 1979 | ^ NewsPaper | Communications of the ACM |
*** 1978 London, England :filled:
#+begin_example
{'bib': {'abstract': 'Logic is useful both for describing static data bases as '
                     'well as for processing data bases which change. Both the '
                     'static and dynamic management of data bases depends upon '
                     'the form of definitions: whether data is defined by '
                     'means of complete if-and-only-if definitions or only by '
                     'means of the if-halves, whether the only‚Äîif half of an '
                     'if-and-only‚Äîif definition is stated explicitly or is '
                     'assumed implicitly, and whether the only-if assumption '
                     'is under-stood as a statement of the object language (in '
                     'the data base) or as a statement of the meta-language '
                     '(about the data base). Similar considerations apply to '
                     'the processing of computer programs. When logic is used '
                     'to describe information, the conventional distinction '
                     'between data bases and programs no longer applies.',
         'author': 'Robert Kowalski',
         'cites': '0',
         'journal': 'Logic and Data Bases',
         'pages': '77',
         'publisher': 'Springer',
         'title': 'London, England',
         'url': 'http://scholar.google.com/scholar?cluster=5495950384951128019&hl=en&oi=scholarr',
         'year': '1978'},
 'cites_per_year': {},
 'filled': True,
 'id_citations': 'pvkQAj0AAAAJ:7wO8s98CvbsC',
 'source': 'citations'}
#+end_example
| 1978 | London, England | Logic and Data Bases |
*** 1978 A tribute to referees :filled:
#+begin_example
{'bib': {'abstract': 'Acta Informatica has achieved a solid reputation as an '
                     'international journal of Computer Science which is to '
                     'the benefit of both its readers and its authors. It is '
                     'evident that such a success could not have been '
                     'accomplished without the dedicated support received from '
                     'its referees. On behalf of the Publisher and the '
                     'Editorial Board we wish therefore to express our '
                     'gratefulness to the following experts who have devoted '
                     'time and effort to refereeing for Acta Informatica ever '
                     'since its first issue has been published:',
         'author': 'AV Aho and B Eggers and A Jonassen and J Albert and H '
                   'Ehrig and P Kandzia and MA Arbib and J Eickel and G '
                   'Kaufholz and P Auler and A Ershov and CHA Koster and JL '
                   'Baer and J Eve and R Kowalski and JL Bentley and WHJ '
                   'Feijen and PE Lauer and J Berstel and S Fuller and F '
                   'Lehmann and E Bertsch and Z Galil and ILJ Lipton and V '
                   'Berzins and H Ganzinger and B Liskov and E Best and H '
                   'Gertrich and P Lockemann and M Blasgen and WK Giloi and VY '
                   'Lum and A Blikle and SA Greibach and M Majster and W '
                   'Brauer and JV Guttag and O Mayer and M Brown and J '
                   'Hartmanis and J McCarthy and NG de Bruijn and M Hecht and '
                   'L Meertens and RM Burstall St Heilbrunner K Mehlhom and P '
                   'Cousot and G Herman and R Milne and K Culik II and W Heise '
                   'and B Monien and M Duflo and K Indermark and M Nielsen and '
                   'K Ecker and A Jammel and J Nievergelt',
         'cites': '0',
         'journal': 'Acta Informatica',
         'pages': '391-392',
         'title': 'A tribute to referees',
         'url': 'http://scholar.google.com/scholar?cluster=13354244898615705250&hl=en&oi=scholarr',
         'volume': '10',
         'year': '1978'},
 'cites_per_year': {},
 'filled': True,
 'id_citations': 'pvkQAj0AAAAJ:7Hz3ACDFbsoC',
 'source': 'citations'}
#+end_example
| 1978 | A tribute to referees | Acta Informatica |
*** 1971 Herbrand's Theorem: Lecture Notes to Diploma Students of the Department of Artificial Intelligence :filled:
#+begin_example
{'bib': {'author': 'Robert Kowalski and Patrick J Hayes',
         'cites': '0',
         'publisher': 'Edinburgh University',
         'title': "Herbrand's Theorem: Lecture Notes to Diploma Students of "
                  'the Department of Artificial Intelligence',
         'url': 'http://scholar.google.com/scholar?cluster=14954348581490152467&hl=en&oi=scholarr',
         'year': '1971'},
 'cites_per_year': {},
 'filled': True,
 'id_citations': 'pvkQAj0AAAAJ:5nxA0vEk-isC',
 'source': 'citations'}
#+end_example
WARNING: caught exception: <class 'KeyError'>
*** 1969 Summary of Research on Efficiency in Theorem-proving :filled:
#+begin_example
{'bib': {'author': 'Robert Kowalski',
         'cites': '0',
         'publisher': 'Edinburgh University',
         'title': 'Summary of Research on Efficiency in Theorem-proving',
         'url': 'http://scholar.google.com/scholar?cluster=790416221881106166&hl=en&oi=scholarr',
         'year': '1969'},
 'cites_per_year': {},
 'filled': True,
 'id_citations': 'pvkQAj0AAAAJ:UeHWp8X0CEIC',
 'source': 'citations'}
#+end_example
WARNING: caught exception: <class 'KeyError'>
WARNING: caught exception: <class 'KeyError'>
WARNING: caught exception: <class 'KeyError'>
WARNING: caught exception: <class 'KeyError'>
WARNING: caught exception: <class 'AttributeError'>
WARNING: caught exception: <class 'AttributeError'>
WARNING: caught exception: <class 'AttributeError'>
WARNING: caught exception: <class 'KeyError'>
WARNING: caught exception: <class 'AttributeError'>
WARNING: caught exception: <class 'AttributeError'>
WARNING: caught exception: <class 'AttributeError'>
WARNING: caught exception: <class 'KeyError'>
WARNING: caught exception: <class 'KeyError'>
WARNING: caught exception: <class 'KeyError'>
WARNING: caught exception: <class 'KeyError'>
WARNING: caught exception: <class 'KeyError'>
WARNING: caught exception: <class 'KeyError'>
WARNING: caught exception: <class 'KeyError'>
