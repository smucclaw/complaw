#+TITLE: Where do Computational Law researchers publish?

Given a list of author names

#+begin_src text :tangle authors.txt
Guido Governatori
Michael Genesereth
Harold Boley
Daniel Martin Katz = Dan Katz
Katie Atkinson
#+end_src

We write a simple Python program using the [[https://pypi.org/project/scholarly/][Scholarly]] library to grope Google Scholar:

#+begin_src python :tangle scholars.py
  #!python3.8
  
  from scholarly import scholarly
  import sys, re, json
  
  def orgprint (stars, title, text):
      print(stars, title)
      print("#+begin_example")
      print(text)
      print("#+end_example")
  
  def enpipe (x):
      return ("| " + " | ".join(x) + " |")
  
  for line in sys.stdin:
      names = re.split('\s*=\s*', line)
      for name in names:
          author = next(scholarly.search_author(name))
          orgprint("*", name, author)
  
          print("filling author...")
          filled_author = author.fill(sections=['publications'])
  
          try:
              orgprint("**", "filled", filled_author)
          except:
              orgprint("**", "filled", "!! Error encountered. !!")
  
          print("**", len(filled_author.publications),"publications");
  
          for pub in filled_author.publications:
              try:
                  pub.fill()
                  bibYear    = pub.bib.get('year','NilYear')
                  bibTitle   = pub.bib.get('title','NilTitle')
                  bibJournal = pub.bib.get('journal','NilJournal')
  
                  orgprint("***",bibYear+ " "+bibTitle+" :filled:", pub)
  
                  print(enpipe([bibYear, bibTitle, bibJournal]))
  
              except:
                  print("***",pub.bib.get('year','NilYear') + " "+pub.bib.  get('title','NilTitle')+" :error:")
                  print("WARNING: caught exception:", sys.exc_info()[0])



#+end_src

To run the program,

#+begin_example
journals $ python3.8 ./scholars.py < authors.txt | tee out-`date +%Y%m%d-%H%M%S`.org

journals $ for i in "Daniel Martin Katz" "Oliver Goodenough" "Jerrold Soh" "Lim How Khang"; do echo $i | python3.8 scholars.py > "out-$i"-`date +%Y%m%d-%H%M%S`.org 2>&1 & done
[7] 48325 48326
[8] 48327 48329
[10] 48330 48332
[11] 48333 48335

journals $ grep '^|' out-Jerrold\ Soh-20200825-111818.org 
| 2019 | Legal area classification: a comparative study of text classifiers on Singapore supreme court judgments | arXiv preprint arXiv:1904.06470 |
| 2019 | A network analysis of the Singapore Court of Appeal's citations to precedent | SAcLJ |
| 2020 | The Development of Singapore Law: A Bicentennial Retrospective | Singapore Academy of Law Journal (Forthcoming) |
| 2020 | When are Algorithms Biased? A Multi-Disciplinary Survey | A Multi-Disciplinary Survey (April 20, 2020) |
| 2020 | The Inefficiency of Quasiâ€“Per Se Rules: Regulating Information Exchange in EU and US Antitrust Law | American Business Law Journal |
| 2019 | Legal Area Classification: A Comparative Study of Text Classifiers on Singapore Supreme Court Judgments | arXiv |
| 2018 | The Legal Magic 8-Ball | Sing. Comp. L. Rev. |

#+end_example
